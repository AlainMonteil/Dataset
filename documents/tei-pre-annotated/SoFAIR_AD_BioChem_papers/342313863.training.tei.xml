<?xml version="1.0" encoding="UTF-8"?>
<tei xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader>
        <fileDesc xml:id="_1"/>
        <encodingDesc>
            <appInfo>
                <application version="0.8.1-SNAPSHOT" ident="GROBID" when="2024-06-13T09:35+0000">
                    <ref target="https://github.com/kermitt2/grobid">A machine learning software for extracting information from scholarly documents</ref>
                </application>
            </appInfo>
        </encodingDesc>
    </teiHeader>
    <text xml:lang="en">
        <p>Cell-cell communication mediated by ligand-receptor complexes is crucial for coordinating diverse biological processes, such as development, differentiation and responses to infection. In order to understand how the context-dependent crosstalk of different cell types enables physiological processes to proceed, we developed CellPhoneDB, a novel repository of ligands, receptors and their interactions. In contrast to other repositories, our database takes into account the subunit architecture of both ligands and receptors, representing heteromeric complexes accurately. We integrated our resource with a statistical framework that predicts enriched cellular interactions between two cell types from single-cell transcriptomics data. Here, we outline the structure and content of our repository, the procedures for inferring cellcell communication networks from single-cell RNA sequencing data and present a practical step-by-step guide to help implement the protocol. 
            <rs type="software">CellPhoneDB</rs> v2.0 is an updated version of our resource that incorporates additional functionalities to allow users to introduce new interacting molecules and reduces the time and resources needed to interrogate large datasets. 
            <rs type="software">CellPhoneDB</rs> v2.0 is publicly available at https://github.com/Teichlab/cellphonedb and as a user-friendly web interface at http://www.cellphonedb.org/ and can be used by both experts and researchers with little experience in computational genomics. In our protocol, we demonstrate how to reveal meaningful biological interactions with 
            <rs type="software">CellPhoneDB</rs> v2.0 using published data sets. This protocol typically takes ~2 hours to complete, from installation to statistical analysis and visualisation, for a dataset of ~10GB, 10000 cells and 19 cell types using 5 threads.
        </p>
        <p>Complex extracellular responses start with the binding of a ligand to their cognate receptor and the activation of specific cell signalling pathways. Mapping these ligand-receptor interactions is fundamental to understanding cellular behaviour and response to neighbouring cells. With the exponential growth of single-cell RNA sequencing (scRNAseq) 1 , it is now possible to measure the expression of ligands and receptors in multiple cell types and systematically decode intercellular communication networks that will ultimately explain tissue function in homeostasis and their alterations in disease. Identifying ligand-receptor interactions from scRNAseq requires both the annotation of the complex ligand-receptor relationships from the literature, and a statistical method that integrates the resource with scRNAseq data and selects relevant interactions from the dataset.Complex extracellular responses start with the binding of a ligand to their cognate receptor and the activation of specific cell signalling pathways. Mapping these ligand-receptor interactions is fundamental to understanding cellular behaviour and response to neighbouring cells. With the exponential growth of single-cell RNA sequencing (scRNAseq) 1 , it is now possible to measure the expression of ligands and receptors in multiple cell types and systematically decode intercellular communication networks that will ultimately explain tissue function in homeostasis and their alterations in disease. Identifying ligand-receptor interactions from scRNAseq requires both the annotation of the complex ligand-receptor relationships from the literature, and a statistical method that integrates the resource with scRNAseq data and selects relevant interactions from the dataset.</p>
        <p>We developed CellPhoneDB, a public repository of ligands, receptors and their interactions to enable a comprehensive, systematic analysis of cell-cell communication molecules. Our repository relies on the use of public resources to annotate receptors and ligands as well as manual curation of specific families of proteins involved in cell-cell communication. We include subunit architecture for both ligands and receptors to represent heteromeric complexes accurately (Figure 1). This is crucial, as cell-cell communication relies on multi-subunit protein complexes that go beyond the binary representation used in most databases and studies 2 . In order to integrate all the information in a flexible, distributable and amendable environment, we developed an 
            <rs type="software">SQLite</rs> relational database.
        </p>
        <p>Our repository is integrated with a computational approach to identify biologically relevant interacting ligand-receptor partners from scRNAseq data. After uploading the scRNAseq data and performing subsampling using geometric sketching 3 (Figure 2a), cells with the same cluster annotation are pooled together as a cell state. We derive enriched ligand-receptor interactions between two cell states based on expression of a receptor by one cell state and a ligand by another cell state. For each gene in the cluster, the percentage of cells expressing the gene and the gene expression mean is calculated (Figure 2b). We consider the expression levels of ligands and receptors within each cell state, and use empirical shuffling to calculate which ligand-receptor pairs display significant cell state specificity (Figure 2c and Figure 2d). This predicts molecular interactions between cell populations via specific protein complexes and generates potential cell-cell communication networks which can be visualised using intuitive tables and plots (Figure 2e). Specificity of the ligand-receptor interaction is important, as some of the ligand-receptor pairs are ubiquitously expressed by the cells in a tissue, and therefore not informative regarding specific communication between particular cell states. The computational code is available in 
            <rs type="software">github</rs> (
            <rs type="url">https://github.com/Teichlab/cellphonedb)</rs> and a user-friendly web interface is available at 
            <rs type="url">www.CellPhoneDB.org</rs>. The first option is recommended for large datasets (larger than 10GB). Compared to the original CellPhoneDB platform, our updated version 
            <rs type="software">CellPhoneDB</rs>
            <rs type="version">v2.0</rs> has incorporated new features, such as subsampling of the original dataset to enable the fast querying of large datasets (geometric sketching 2 ) or the visualisation of the results using intuitive tables, plots and network files that can be directly uploaded into 
            <rs type="software">Cytoscape</rs> (
            <rs type="url">https://cytoscape.org/)</rs>. In addition, we now offer the user the possibility to use their own list of ligand-receptor interactions through our easy-to-use python 
            <rs type="software">GitHub</rs> package.
        </p>
        <p>We originally applied this computational framework to study maternal-fetal communication at the decidual-placental interface during early pregnancy 4 . Briefly, our analysis revealed new immunoregulatory mechanisms and cytokine signalling networks existing between the cells in the maternal-fetal interface, which guarantee the coexistence of both the mother and developing fetus (Figure 3). In the present protocol, we describe and discuss in detail how this analysis can be carried out, using our maternal-fetal study as an illustration.We originally applied this computational framework to study maternal-fetal communication at the decidual-placental interface during early pregnancy 4 . Briefly, our analysis revealed new immunoregulatory mechanisms and cytokine signalling networks existing between the cells in the maternal-fetal interface, which guarantee the coexistence of both the mother and developing fetus (Figure 3). In the present protocol, we describe and discuss in detail how this analysis can be carried out, using our maternal-fetal study as an illustration.</p>
        <p>The protocol is generalizable to any other scRNA-seq dataset containing potentially interacting cell populations and has been recently used in several single-cell atlases. For example, CellPhoneDB helped us identify a shift in the cellular communication from a network that was dominated by mesenchymal-epithelial interactions in healthy airways, to a Th2 cell-dominated interactome in asthmatic airways 5 . In the context of the kidney, cell-cell interaction analysis helped to reveal epithelium-immune crosstalk that coordinates recruitment of antibacterial macrophages and neutrophils to regions in the kidney most vulnerable to infections 6 . In a recent single-cell atlas of hematopoietic progenitors in the liver during the first trimester of development, we identified interactions between erythroblasts and erythroblastic island (EI) macrophages through interactions involving molecules VCAM1, ITGB1 and ITGA4, all of them known to be important in haematopoiesis 7 .The protocol is generalizable to any other scRNA-seq dataset containing potentially interacting cell populations and has been recently used in several single-cell atlases. For example, CellPhoneDB helped us identify a shift in the cellular communication from a network that was dominated by mesenchymal-epithelial interactions in healthy airways, to a Th2 cell-dominated interactome in asthmatic airways 5 . In the context of the kidney, cell-cell interaction analysis helped to reveal epithelium-immune crosstalk that coordinates recruitment of antibacterial macrophages and neutrophils to regions in the kidney most vulnerable to infections 6 . In a recent single-cell atlas of hematopoietic progenitors in the liver during the first trimester of development, we identified interactions between erythroblasts and erythroblastic island (EI) macrophages through interactions involving molecules VCAM1, ITGB1 and ITGA4, all of them known to be important in haematopoiesis 7 .</p>
        <p>Furthermore, even though CellPhoneDB is created using human-specific ligand-receptor interactions, it can be easily applied on mouse datasets by mapping human genes onto their mouse orthologs. In a recent example, we applied our cell-cell communication framework to demonstrate the complex interplay among diverse cells in the evolving tumor microenvironment of a murine melanoma model where multiple immunosuppressive mechanisms coexist within a heterogeneous stromal compartment 8 .Furthermore, even though CellPhoneDB is created using human-specific ligand-receptor interactions, it can be easily applied on mouse datasets by mapping human genes onto their mouse orthologs. In a recent example, we applied our cell-cell communication framework to demonstrate the complex interplay among diverse cells in the evolving tumor microenvironment of a murine melanoma model where multiple immunosuppressive mechanisms coexist within a heterogeneous stromal compartment 8 .</p>
        <p>There are now several other published methods to infer potentially relevant interactions between two cell populations from scRNA-seq. The majority of these methods use lists of binary ligand-receptor pairs to assign communication between cells, without considering multimeric receptors. Relevant interactions are inferred by filtering based on the expression level of the ligand and receptor. In these methods, only the interaction pairs that pass a certain threshold of cells expressing the specific interactors in the respective cell populations are selected for the downstream analysis [9][10][11][12][13][14] . For example, in addition to filtering based on expression level, Cohen et al. 15 used hierarchical clustering with Spearman correlation to identify ligand-receptor modules and construct an interaction graph. Others, such as Kumar et al 16 , scored interactions by calculating the product of average receptor and average ligand expression in the corresponding cell types and used a one-sided Wilcoxon rank-sum test to assess the statistical significance of each interaction score. Halpern et al. 17 computed a zscore of the mean of each interacting molecule in each cluster to calculate the enrichment of each ligand and receptor in each cluster. To test for enrichment of the number of ligandreceptor pairs between two cell populations, Joost et al. 18 performed random sampling of receptors and ligands and compared this number with the observed number of ligand-receptor pairs. In a similar way, Boisset et al. 19 applied cluster label permutations to create a null distribution of the number of random interactions between cell populations and then compared this to the actual number of interactions to identify enriched or depleted interactions compared with the numbers in the background model. A major strength of CellPhoneDB compared to most other databases is that it takes into account the structural composition of ligands and receptors, which is important as ligandreceptor interactions often involve multiple subunits. This is particularly clear for protein families like many of the cytokine families, where receptors share structural subunits, and the affinity of the ligand is determined by the specific combination of the receptor subunits (Figure 3e). Roughly one third of the ligand-receptor complexes in our database have a multi-subunit stoichiometry greater than binary one-to-one interactions. Specifically, there are 466 interactions in our repository which involve heteromers, and 163 of them comprise cytokines.There are now several other published methods to infer potentially relevant interactions between two cell populations from scRNA-seq. The majority of these methods use lists of binary ligand-receptor pairs to assign communication between cells, without considering multimeric receptors. Relevant interactions are inferred by filtering based on the expression level of the ligand and receptor. In these methods, only the interaction pairs that pass a certain threshold of cells expressing the specific interactors in the respective cell populations are selected for the downstream analysis [9][10][11][12][13][14] . For example, in addition to filtering based on expression level, Cohen et al. 15 used hierarchical clustering with Spearman correlation to identify ligand-receptor modules and construct an interaction graph. Others, such as Kumar et al 16 , scored interactions by calculating the product of average receptor and average ligand expression in the corresponding cell types and used a one-sided Wilcoxon rank-sum test to assess the statistical significance of each interaction score. Halpern et al. 17 computed a zscore of the mean of each interacting molecule in each cluster to calculate the enrichment of each ligand and receptor in each cluster. To test for enrichment of the number of ligandreceptor pairs between two cell populations, Joost et al. 18 performed random sampling of receptors and ligands and compared this number with the observed number of ligand-receptor pairs. In a similar way, Boisset et al. 19 applied cluster label permutations to create a null distribution of the number of random interactions between cell populations and then compared this to the actual number of interactions to identify enriched or depleted interactions compared with the numbers in the background model. A major strength of CellPhoneDB compared to most other databases is that it takes into account the structural composition of ligands and receptors, which is important as ligandreceptor interactions often involve multiple subunits. This is particularly clear for protein families like many of the cytokine families, where receptors share structural subunits, and the affinity of the ligand is determined by the specific combination of the receptor subunits (Figure 3e). Roughly one third of the ligand-receptor complexes in our database have a multi-subunit stoichiometry greater than binary one-to-one interactions. Specifically, there are 466 interactions in our repository which involve heteromers, and 163 of them comprise cytokines.</p>
        <p>Our database, while comprehensive, is not a complete list of all possible ligand-receptor interactions and this should be taken into consideration when interpreting cell-cell communication networks, especially the total number of interactions between cell types. As more and more interactions are curated and added, both the analysis and interpretation of the results will improve. Furthermore, our statistical method prioritizes cell-type enriched and potentially biologically important interactions that would result into a downstream signalling event. Therefore, a non-significant p-value does not indicate that the interaction is not present, only that it is not highly specific between two cell types. For a more permissive analysis, we also offer a simpler filtering method based on a threshold of cells expressing ligand-receptor complexes in the corresponding clusters. Additionally, we use permutations to generate a null hypothesis, and this can be time-consuming and resource-intensive with large datasets (for example datasets with millions of cells). To address this, we introduced a subsampling approach, which preserves the heterogeneity of the dataset and reduces speed and memory requirements (1 hour vs 1.5 hours for a dataset of 10000 cells). Finally, our tool infers potential interactions using transcriptomics data without considering spatial proximity of the cells. We anticipate that the information in CellPhoneDB will have the potential to provide a more comprehensive view of cellular communication when combined with the spatial location of the cells as quantified using highly multiplexed spatial methods (e.g. [20][21][22][23] ).Our database, while comprehensive, is not a complete list of all possible ligand-receptor interactions and this should be taken into consideration when interpreting cell-cell communication networks, especially the total number of interactions between cell types. As more and more interactions are curated and added, both the analysis and interpretation of the results will improve. Furthermore, our statistical method prioritizes cell-type enriched and potentially biologically important interactions that would result into a downstream signalling event. Therefore, a non-significant p-value does not indicate that the interaction is not present, only that it is not highly specific between two cell types. For a more permissive analysis, we also offer a simpler filtering method based on a threshold of cells expressing ligand-receptor complexes in the corresponding clusters. Additionally, we use permutations to generate a null hypothesis, and this can be time-consuming and resource-intensive with large datasets (for example datasets with millions of cells). To address this, we introduced a subsampling approach, which preserves the heterogeneity of the dataset and reduces speed and memory requirements (1 hour vs 1.5 hours for a dataset of 10000 cells). Finally, our tool infers potential interactions using transcriptomics data without considering spatial proximity of the cells. We anticipate that the information in CellPhoneDB will have the potential to provide a more comprehensive view of cellular communication when combined with the spatial location of the cells as quantified using highly multiplexed spatial methods (e.g. [20][21][22][23] ).</p>
        <p>CellPhoneDB stores ligand-receptor interactions as well as other properties of the interacting partners, including their subunit architecture and gene and protein identifiers. In order to create the content of the database, four main .csv data files are required: "gene_input.csv", "protein_input.csv", " complex_input.csv" and "interaction_input.csv" (Figure 4).CellPhoneDB stores ligand-receptor interactions as well as other properties of the interacting partners, including their subunit architecture and gene and protein identifiers. In order to create the content of the database, four main .csv data files are required: "gene_input.csv", "protein_input.csv", " complex_input.csv" and "interaction_input.csv" (Figure 4).</p>
        <p>Mandatory fields: "gene_name"; "uniprot"; "hgnc_symbol" and "ensembl"Mandatory fields: "gene_name"; "uniprot"; "hgnc_symbol" and "ensembl"</p>
        <p>This file is crucial for establishing the link between the scRNA-seq data and the interaction pairs stored at the protein level. It includes the following gene and protein identifiers: i) gene name ("gene_name"); ii) UniProt identifier ("uniprot"); iiii) HUGO nomenclature committee symbol (HGNC) ("hgnc_symbol") and iv) gene ensembl identifier (ENSG) ("ensembl"). In order to create this file, lists of linked proteins and gene identifiers are downloaded from UniProt and merged using gene names. Several rules need to be considered when merging the files: -UniProt annotation prevails over the gene 
            <rs type="software">Ensembl</rs> annotation when the same gene 
            <rs type="software">Ensembl</rs> identifier points towards different UniProt identifiers. -UniProt and 
            <rs type="software">Ensembl</rs> lists are also merged by their UniProt identifier but this information is only used when the UniProt or 
            <rs type="software">Ensembl</rs> identifier is missing in the original list merged by gene name. -If the same gene name points towards different HGNC symbols, only the HGNC symbol matching the gene name annotation is considered. -Only one HLA isoform is considered in our interaction analysis and it is stored in a manually HLA-curated list of genes, named "HLA_curated". "protein_input" Mandatory fields: "uniprot"; "protein_name" Optional fields: "transmembrane"; "peripheral"; "secreted"; "secreted_desc"; "secreted_highlight"; "receptor"; "receptor_desc" ; "integrin"; "pfam"; "other"; "other_desc"; "tags"; "tags_ description"; "tags_reason"; "pfam" Two types of input are needed to create this file: i) systematic input using UniProt annotation, and ii) manual input using curated annotation both from developers of 
            <rs type="software">CellPhoneDB</rs> ("proteins_curated") and users. For the systematic input, the UniProt identifier ("uniprot") and the name of the protein ("protein_name") are downloaded from UniProt. For the curated input, developers and users can introduce additional fields relevant to the future systematic assignment of ligand-receptor interactions (see below the "Systematic input from other databases" section for interaction_list). Importantly, if a protein id is present in both the curated and systematic inputs, the curated information always has priority over the systematic one.
        </p>
        <p>Optional fields are organised in the categories described below:Optional fields are organised in the categories described below:</p>
        <p>There are four non-exclusive options: transmembrane ("transmembrane"), peripheral ("peripheral") and secreted ("secreted", "secreted_desc" and "secreted_highlight").There are four non-exclusive options: transmembrane ("transmembrane"), peripheral ("peripheral") and secreted ("secreted", "secreted_desc" and "secreted_highlight").</p>
        <p>We downloaded plasma membrane proteins from UniProt using the keyword KW-1003 (cell membrane) and annotated them as peripheral proteins using the keyword SL-9903 or as transmembrane proteins (remaining plasma membrane proteins). A systematic manual curation of proteins with transmembrane and immunoglobulin-like domains was performed to improve the lists of plasma transmembrane proteins. We downloaded secreted proteins from UniProt using the keyword KW-0964 (secreted), and further annotated them as cytokines (KW-0202), hormones (KW-0372), growth factors (KW-0339) and immune-related proteins using UniProt keywords and manual annotation based on literature information. "secreted_highlight" includes cytokines, hormones, growth factors and other immune-related proteins and "secreted_desc" indicates a description of the protein function.We downloaded plasma membrane proteins from UniProt using the keyword KW-1003 (cell membrane) and annotated them as peripheral proteins using the keyword SL-9903 or as transmembrane proteins (remaining plasma membrane proteins). A systematic manual curation of proteins with transmembrane and immunoglobulin-like domains was performed to improve the lists of plasma transmembrane proteins. We downloaded secreted proteins from UniProt using the keyword KW-0964 (secreted), and further annotated them as cytokines (KW-0202), hormones (KW-0372), growth factors (KW-0339) and immune-related proteins using UniProt keywords and manual annotation based on literature information. "secreted_highlight" includes cytokines, hormones, growth factors and other immune-related proteins and "secreted_desc" indicates a description of the protein function.</p>
        <p>All the manually annotated information is carefully tagged and can be identified. Please see the "curation tags" section below.All the manually annotated information is carefully tagged and can be identified. Please see the "curation tags" section below.</p>
        <p>Three fields are allocated to annotate receptors or integrins: "receptor", "receptor_desc" and "integrin". Receptors were defined by the UniProt keyword KW-0675 and by a revision of UniProt descriptions and bibliography. For some of the receptors, a short description is included in "receptor_desc".Three fields are allocated to annotate receptors or integrins: "receptor", "receptor_desc" and "integrin". Receptors were defined by the UniProt keyword KW-0675 and by a revision of UniProt descriptions and bibliography. For some of the receptors, a short description is included in "receptor_desc".</p>
        <p>"Integrin" is a manual curation field that indicates the protein is part of the integrin family. All the annotated information is carefully tagged and can be identified. For details, see the "curation tags" section below."Integrin" is a manual curation field that indicates the protein is part of the integrin family. All the annotated information is carefully tagged and can be identified. For details, see the "curation tags" section below.</p>
        <p>Others We created another column named "others" that consists of membrane and secreted proteins that are excluded from our cell-cell communication analysis as they are not directly involved in the recognition of the ligand (eg. Co-receptors) or they require more specialised annotation (e.g. nerve-specific receptors such as those related to ear-binding, olfactory receptors, taste receptors and salivary receptors). In addition, we excluded small molecule receptors; immunoglobulin chains and viral and retroviral proteins, pseudogenes, cancer antigens and photoreceptors. We also added "others_desc" to add a brief description of the excluded protein.Others We created another column named "others" that consists of membrane and secreted proteins that are excluded from our cell-cell communication analysis as they are not directly involved in the recognition of the ligand (eg. Co-receptors) or they require more specialised annotation (e.g. nerve-specific receptors such as those related to ear-binding, olfactory receptors, taste receptors and salivary receptors). In addition, we excluded small molecule receptors; immunoglobulin chains and viral and retroviral proteins, pseudogenes, cancer antigens and photoreceptors. We also added "others_desc" to add a brief description of the excluded protein.</p>
        <p>Protein family Information about the family of the protein is downloaded from https://pfam.xfam.org/ 24 and stored in "pfam". This information may be useful for the annotation of ligand-receptor interactions. Curation "tags" Three fields indicate whether the protein has been manually curated: "tags", "tags_ description" and "tags_reason".Protein family Information about the family of the protein is downloaded from https://pfam.xfam.org/ 24 and stored in "pfam". This information may be useful for the annotation of ligand-receptor interactions. Curation "tags" Three fields indicate whether the protein has been manually curated: "tags", "tags_ description" and "tags_reason".</p>
        <p>There are three options for the "tags" field: (a) 'N/A': protein matches with UniProt description; (b) 'To_add': addition of secreted and/or plasma membrane protein annotation; and (c) 'To_comment': manual addition of a specific property of the protein, for example, annotation of a protein as a receptor.There are three options for the "tags" field: (a) 'N/A': protein matches with UniProt description; (b) 'To_add': addition of secreted and/or plasma membrane protein annotation; and (c) 'To_comment': manual addition of a specific property of the protein, for example, annotation of a protein as a receptor.</p>
        <p>There are five options for the "tags_reason" field: (a) 'extracellular_add': manual annotation of the protein as plasma membrane; (b) 'peripheral_add': manual annotation of the protein as peripheral; (c) 'secreted_add': manual annotation of the protein as secreted; (d) 'secreted_high': manual annotation of the protein as cytokine, hormone, growth factors or other immune-related protein (secreted_highlight); (e) 'receptor_add': manual annotation of a receptor. Finally, the "tags_description" field is a short description of the manually curated protein.There are five options for the "tags_reason" field: (a) 'extracellular_add': manual annotation of the protein as plasma membrane; (b) 'peripheral_add': manual annotation of the protein as peripheral; (c) 'secreted_add': manual annotation of the protein as secreted; (d) 'secreted_high': manual annotation of the protein as cytokine, hormone, growth factors or other immune-related protein (secreted_highlight); (e) 'receptor_add': manual annotation of a receptor. Finally, the "tags_description" field is a short description of the manually curated protein.</p>
        <p>Mandatory fields: "complex_name"; "uniprot1, 2, etc." Optional fields: "transmembrane"; "peripheral"; "secreted"; "secreted_desc"; "secreted_highlight"; "receptor"; "receptor_desc" ; "integrin"; "other"; "other_desc"; "pdb_id"; "pdb_structure" ; "stoichiometry"; "comments_complex" Literature and UniProt descriptions were reviewed to annotate heteromeric proteins, which were defined as cases when the functional receptor or ligand required more than one gene product, and a careful annotation was performed for cytokine complexes, TGF family complexes and integrin complexes.Mandatory fields: "complex_name"; "uniprot1, 2, etc." Optional fields: "transmembrane"; "peripheral"; "secreted"; "secreted_desc"; "secreted_highlight"; "receptor"; "receptor_desc" ; "integrin"; "other"; "other_desc"; "pdb_id"; "pdb_structure" ; "stoichiometry"; "comments_complex" Literature and UniProt descriptions were reviewed to annotate heteromeric proteins, which were defined as cases when the functional receptor or ligand required more than one gene product, and a careful annotation was performed for cytokine complexes, TGF family complexes and integrin complexes.</p>
        <p>These lists contain the UniProt identifiers for each of the heteromeric ligands and receptors ("uniprot1", "uniprot2",etc.) and a name given to the complex ("complex_name"). These entries have common fields with "protein_input" that are described in the previous section. These are: "transmembrane", "peripheral", "secreted", "secreted_desc", "secreted_highlight", "receptor", "receptor_desc", "integrin", "other", "other_desc" (see description in the above "protein_input" section for clarification). We also include additional optional information that may be relevant for the stoichiometry of the heterodimers. Structural information is included in "pdb_structure", "pdb_id" and "stoichiometry", if heteromers are defined in the RCSB Protein Data Bank (http://www.rcsb.org/). An additional field "comments_complex" was created to add a short description of the heteromer.These lists contain the UniProt identifiers for each of the heteromeric ligands and receptors ("uniprot1", "uniprot2",etc.) and a name given to the complex ("complex_name"). These entries have common fields with "protein_input" that are described in the previous section. These are: "transmembrane", "peripheral", "secreted", "secreted_desc", "secreted_highlight", "receptor", "receptor_desc", "integrin", "other", "other_desc" (see description in the above "protein_input" section for clarification). We also include additional optional information that may be relevant for the stoichiometry of the heterodimers. Structural information is included in "pdb_structure", "pdb_id" and "stoichiometry", if heteromers are defined in the RCSB Protein Data Bank (http://www.rcsb.org/). An additional field "comments_complex" was created to add a short description of the heteromer.</p>
        <p>Mandatory fields: "partner_a"; "partner_b"; "annotation_strategy"; "source" Optional fields: "protein_name_a"; "protein_name_b" Interactions stored in CellPhoneDB are annotated using their UniProt identifier (binary interactions) or the name of the complex (interactions involving heteromers) ("partner_a" and "partner_b"). The name of the protein is also included, yet not mandatory ("protein_name_a" and "protein_name_b"). Protein names are not stored in the database. There are two main inputs of interactions: i) a systematic input querying other databases, and ii) a manual input using curated information from 
            <rs type="software">CellPhoneDB</rs> developers ("interactions_curated") and users. The method used to assign the interaction is indicated in the "annotation_strategy" column. Each interaction stored has a CellPhoneDB unique identifier ("id_cp_interaction") generated automatically by the internal pipeline. Systematic input from other databases Three sources of interacting partners were considered: (a) IUPHAR (http://www.guidetopharmacology.org/): binary interactions only, (b) InnateDB (https://www.innatedb.com/): interactions involving cytokines, hormones and growth factors interactions, and (c) iMEX consortium (https://www.imexconsortium.org/): interactions involving cytokines, hormones and growth factors interactions.
        </p>
        <p>Binary interactions from 
            <rs type="software">IUPHAR</rs> are directly downloaded from "
            <rs type="url">http://www.guidetopharmacology.org/DATA/interactions.csv</rs>" and "guidetopharmachology.org" is indicated in the "annotation_strategy" field. For the iMEX consortium all protein-protein interactions are downloaded using the 
            <rs type="software">PSICQUIC</rs> REST 
            <rs type="software">APIs</rs> 25 . The IMEx 26 , IntAct 27 , InnateDB 28 , UCL-BHF (https://www.ucl.ac.uk/cardiovascular/research/pre-clinical-and-fundamentalscience/functional-gene-annotation/manual-curation/protein), 
            <rs type="software">MatrixDB</rs> 29 , MINT 30 , I2D 31 , UniProt, MBInfo (https://www.mechanobio.info/) registries are used. Interacting partners are defined as follows:
        </p>
        <p>-Interacting partner A has to be a transmembrane receptor and cannot be classified as "others" (see the "protein_input" section for more information). -Interacting partner B has to be "secreted_highlight". This group of proteins includes cytokines, hormones, growth factors and other immune-related proteins (see the "protein_input" section for more information).-Interacting partner A has to be a transmembrane receptor and cannot be classified as "others" (see the "protein_input" section for more information). -Interacting partner B has to be "secreted_highlight". This group of proteins includes cytokines, hormones, growth factors and other immune-related proteins (see the "protein_input" section for more information).</p>
        <p>Some interactions in the systematic approach are excluded: a) interactions where one of the components is part of a complex (see "complex_input" list in the above section); b) interactions which are not involved in cell-cell communication or are wrongly annotated by our systematic method. These are stored in a curated list of proteins named "excluded_interaction". The "excluded_interaction" file contains five fields: a) uniprot_1: name of the interacting partner A that is going to be excluded; b) uniprot_2: name of the interacting partner B that is going to be excluded; c) name.1: name of the protein to be excluded corresponding to uniprot_1; d) name.2: name of the protein to be excluded corresponding to uniprot_2; e) comments: information about the exclusion of the protein.Some interactions in the systematic approach are excluded: a) interactions where one of the components is part of a complex (see "complex_input" list in the above section); b) interactions which are not involved in cell-cell communication or are wrongly annotated by our systematic method. These are stored in a curated list of proteins named "excluded_interaction". The "excluded_interaction" file contains five fields: a) uniprot_1: name of the interacting partner A that is going to be excluded; b) uniprot_2: name of the interacting partner B that is going to be excluded; c) name.1: name of the protein to be excluded corresponding to uniprot_1; d) name.2: name of the protein to be excluded corresponding to uniprot_2; e) comments: information about the exclusion of the protein.</p>
        <p>Homomeric complexes -proteins interacting with themselves -are excluded from the systematic analysis. Importantly, in cases where both the systematic and the curated input detect the interactions, the curated input always prevails over the systematic information.Homomeric complexes -proteins interacting with themselves -are excluded from the systematic analysis. Importantly, in cases where both the systematic and the curated input detect the interactions, the curated input always prevails over the systematic information.</p>
        <p>UniProt descriptions and PubMed information on membrane receptors were used to annotate ligand-receptor interactions and the International Union of Pharmacology annotation 32 was used to annotate cytokine and chemokine interactions. The interactions of other groups of cell-surface proteins, including the TGF family, integrins, lymphocyte receptors, semaphorins, ephrins, Notch and TNF receptors, were manually reviewed from bibliography. The bibliography used to annotate the interaction is stored in "source". 'Uniprot' indicates that the interaction has been annotated using UniProt descriptions.UniProt descriptions and PubMed information on membrane receptors were used to annotate ligand-receptor interactions and the International Union of Pharmacology annotation 32 was used to annotate cytokine and chemokine interactions. The interactions of other groups of cell-surface proteins, including the TGF family, integrins, lymphocyte receptors, semaphorins, ephrins, Notch and TNF receptors, were manually reviewed from bibliography. The bibliography used to annotate the interaction is stored in "source". 'Uniprot' indicates that the interaction has been annotated using UniProt descriptions.</p>
        <p>
            <rs type="software">CellPhoneDB</rs> v2.0 allows users to create their own lists of genes, curated proteins, complexes and interactions. In order to do so, the format of the users' lists must be compatible with the input files. Users can run the analysis using their sets of interactions using the Python package version of 
            <rs type="software">CellPhoneDB</rs>. User's lists can either be merged with the information already stored in 
            <rs type="software">CellPhoneDB</rs> or considered on their own. In addition, users can send the interaction lists via email, the cellphonedb.org form, or a pull request to the CellPhoneDB data repository (https://github.com/Teichlab/cellphonedb-data) to be considered in the new versions of 
            <rs type="software">CellPhoneDB</rs>.
        </p>
        <p>Information is stored in an 
            <rs type="software">SQLite</rs> relational database (
            <rs type="url">https://www.sqlite.org/)</rs>. 
            <rs type="software">SQLAlchemy</rs> (
            <rs type="url">www.sqlalchemy.org</rs>) and Python 3 were used to build the database structure and the query logic. The application is designed to allow analysis on potentially large count matrices to be performed in parallel. This requires an efficient database design, including optimisation for query times, indices and related strategies. All application code is open source and uploaded to github and 
            <rs type="url">www.cellphonedb.org</rs> .
        </p>
        <p>The database consists of 6 main tables: gene_table; protein_table; multidata_table; interaction_table; complex_table; complex_composition_table (Supplementary Figure 1). All tables have an incremental numeric unique identifier with the structure id_{table_name} and one or more foreign keys, with structure {foreign_table_name}_id, to connect all tables.The database consists of 6 main tables: gene_table; protein_table; multidata_table; interaction_table; complex_table; complex_composition_table (Supplementary Figure 1). All tables have an incremental numeric unique identifier with the structure id_{table_name} and one or more foreign keys, with structure {foreign_table_name}_id, to connect all tables.</p>
        <p>This table stores all the information generated in the gene_input database input file. This includes the gene name ("gene_name"); the HUGO nomenclature committee symbol (HGNC) ("hgnc_symbol") and the ensembl identifier ("ensembl"). Importantly, only the gene and protein information of the interactions participants from "interactions_list" is stored in our database.This table stores all the information generated in the gene_input database input file. This includes the gene name ("gene_name"); the HUGO nomenclature committee symbol (HGNC) ("hgnc_symbol") and the ensembl identifier ("ensembl"). Importantly, only the gene and protein information of the interactions participants from "interactions_list" is stored in our database.</p>
        <p>The gene table is related to the protein table via the protein_id -id_protein (one to many) foreign key.The gene table is related to the protein table via the protein_id -id_protein (one to many) foreign key.</p>
        <p>This table stores the shared information between the protein_table and the complex_table.This table stores the shared information between the protein_table and the complex_table.</p>
        <p>All the information required in this table is obtained from the protein_input and complex_input input files. It stores the following fields: i) name, corresponding to uniprot if the specific entry (row) represents a protein or complex_name if the entry represents a complex; ii) transmembrane, iii) peripheral, iv) secreted, v) secreted_desc, vi) secreted_highlight, vii) receptor, viii) receptor_desc, ix) integrin, x) other and xi) other_desc. In addition, an is_complex column is added for internal optimization and indicates if the entry (row) is a complex.All the information required in this table is obtained from the protein_input and complex_input input files. It stores the following fields: i) name, corresponding to uniprot if the specific entry (row) represents a protein or complex_name if the entry represents a complex; ii) transmembrane, iii) peripheral, iv) secreted, v) secreted_desc, vi) secreted_highlight, vii) receptor, viii) receptor_desc, ix) integrin, x) other and xi) other_desc. In addition, an is_complex column is added for internal optimization and indicates if the entry (row) is a complex.</p>
        <p>protein_table This table stores the information obtained from the database input file protein_input. It contains the name of the protein (protein_name), tags, tags_reason, tags_description and pfam. The table is related to multidata_table (1..0 -1 relation, meaning that one or zero elements of protein_table corresponds to one element of multidata_table) through the protein_multidata_id foreign key.protein_table This table stores the information obtained from the database input file protein_input. It contains the name of the protein (protein_name), tags, tags_reason, tags_description and pfam. The table is related to multidata_table (1..0 -1 relation, meaning that one or zero elements of protein_table corresponds to one element of multidata_table) through the protein_multidata_id foreign key.</p>
        <p>This table stores complex information from the database input file complex_input and stores the following fields: pdb_id, pdb_structure, stoichiometry, comments_complex. The table is related to multidata_table (this is a 1..0 -1 relation, meaning that one or zero elements of complex_table corresponds to one element of multidata_table) through the complex_multidata_id foreign key. All information about the complex components is stored in the complex_composition_table. complex_composition_table This table stores the proteins (uniprot_1 -uniprot_4) that compose a complex. It is connected to multidata_table through complex_multidata_id and protein_multidata_id (this is a 1..* -1 relations, meaning that multiple proteins and/or complexes with ids stored in multidata_table can participate in one complex_composition and can be included in the complex_composition_table). We also created an additional column called total_protein (with number of complex components) for internal optimization purposes. Supplementary Figure 2 represents an example of two complex_input rows with two and four protein components, respectively.This table stores complex information from the database input file complex_input and stores the following fields: pdb_id, pdb_structure, stoichiometry, comments_complex. The table is related to multidata_table (this is a 1..0 -1 relation, meaning that one or zero elements of complex_table corresponds to one element of multidata_table) through the complex_multidata_id foreign key. All information about the complex components is stored in the complex_composition_table. complex_composition_table This table stores the proteins (uniprot_1 -uniprot_4) that compose a complex. It is connected to multidata_table through complex_multidata_id and protein_multidata_id (this is a 1..* -1 relations, meaning that multiple proteins and/or complexes with ids stored in multidata_table can participate in one complex_composition and can be included in the complex_composition_table). We also created an additional column called total_protein (with number of complex components) for internal optimization purposes. Supplementary Figure 2 represents an example of two complex_input rows with two and four protein components, respectively.</p>
        <p>This table stores the interactions data from interaction_input file. The following columns to represent the data are used: id_cp_interaction, annotation_strategy and source. To identify the interaction partners (partner_a and partner_b in interaction_input), the table is connected to multidata_table through the foreign key multidata_1_id and multidata_2_id respectively with 1 -1..* relation, meaning that one multidata_id can be present multiple times in the interaction_table. multidata_table stores both protein and complex data. Importantly, only genes and proteins participating in cell-cell communication are stored in our database, i.e. not all the proteins present in the input files are stored in our database (see the interaction_input section).This table stores the interactions data from interaction_input file. The following columns to represent the data are used: id_cp_interaction, annotation_strategy and source. To identify the interaction partners (partner_a and partner_b in interaction_input), the table is connected to multidata_table through the foreign key multidata_1_id and multidata_2_id respectively with 1 -1..* relation, meaning that one multidata_id can be present multiple times in the interaction_table. multidata_table stores both protein and complex data. Importantly, only genes and proteins participating in cell-cell communication are stored in our database, i.e. not all the proteins present in the input files are stored in our database (see the interaction_input section).</p>
        <p>To assess cellular crosstalk between different cell types, we use our repository in a statistical framework for inferring cell-cell communication networks from scRNA-seq data. We predict enriched receptor-ligand interactions between two cell types based on expression of a receptor by one cell type and a ligand by another cell type. To identify biologically relevant interactions, we look for the cell-type enriched ligand-receptor interactions. Only receptors and ligands expressed in more than a user-specified threshold percentage of the cells in the specific cluster are considered for the analysis (default is 10%).To assess cellular crosstalk between different cell types, we use our repository in a statistical framework for inferring cell-cell communication networks from scRNA-seq data. We predict enriched receptor-ligand interactions between two cell types based on expression of a receptor by one cell type and a ligand by another cell type. To identify biologically relevant interactions, we look for the cell-type enriched ligand-receptor interactions. Only receptors and ligands expressed in more than a user-specified threshold percentage of the cells in the specific cluster are considered for the analysis (default is 10%).</p>
        <p>We then perform pairwise comparisons between all cell types in the dataset. First, we randomly permute the cluster labels of all cells (1,000 times by default) and determine the mean of the average ligand expression level in a cluster and the average receptor expression level in the interacting cluster. In this way we generate a null distribution for each ligandreceptor pair in each pairwise comparison between two cell types. We obtain a p-value for the likelihood of cell-type enrichment of each ligand-receptor complex by calculating the proportion of the means which are as high as or higher than the actual mean. Based on the number of significant pairs, we then prioritize interactions that are highly specific between cell types, so that the user can manually select biologically relevant ones. For the multi-subunit heteromeric complexes, we require that all subunits of the complex are expressed (using a user-specified threshold), and we use the member of the complex with the minimum average expression for random shuffling.We then perform pairwise comparisons between all cell types in the dataset. First, we randomly permute the cluster labels of all cells (1,000 times by default) and determine the mean of the average ligand expression level in a cluster and the average receptor expression level in the interacting cluster. In this way we generate a null distribution for each ligandreceptor pair in each pairwise comparison between two cell types. We obtain a p-value for the likelihood of cell-type enrichment of each ligand-receptor complex by calculating the proportion of the means which are as high as or higher than the actual mean. Based on the number of significant pairs, we then prioritize interactions that are highly specific between cell types, so that the user can manually select biologically relevant ones. For the multi-subunit heteromeric complexes, we require that all subunits of the complex are expressed (using a user-specified threshold), and we use the member of the complex with the minimum average expression for random shuffling.</p>
        <p>Cell subsampling for accelerated analyses Technological developments and protocol improvements have enabled an exponential growth of the number of cells obtained from scRNA-seq experiments 1 . Large-scale datasets can profile hundreds of thousands cells, which presents a challenge for the existing analysis methods in terms of both computer memory usage and runtime. In order to improve the speed and efficiency of our protocol and facilitate its broad accessibility, we integrated subsampling as described in Hie et al. 2 . This "geometric sketching" approach aims to maintain the transcriptomic heterogeneity within a dataset with a smaller subset of cells. It projects high dimensional data into a low dimensional space and divides that low dimensional space into a predefined number of equal subspaces. The subsampling is then performed by sampling an equal number of data points from each subspace. The subsampling step is optional, enabling users to perform the analysis either on all cells, or with other subsampling methods of their choice.Cell subsampling for accelerated analyses Technological developments and protocol improvements have enabled an exponential growth of the number of cells obtained from scRNA-seq experiments 1 . Large-scale datasets can profile hundreds of thousands cells, which presents a challenge for the existing analysis methods in terms of both computer memory usage and runtime. In order to improve the speed and efficiency of our protocol and facilitate its broad accessibility, we integrated subsampling as described in Hie et al. 2 . This "geometric sketching" approach aims to maintain the transcriptomic heterogeneity within a dataset with a smaller subset of cells. It projects high dimensional data into a low dimensional space and divides that low dimensional space into a predefined number of equal subspaces. The subsampling is then performed by sampling an equal number of data points from each subspace. The subsampling step is optional, enabling users to perform the analysis either on all cells, or with other subsampling methods of their choice.</p>
        <p>-META file: The annotation file is generated by the users after they have annotated each cluster identified by scRNA-seq data (for example by using packages such as 
            <rs type="software">Seurat</rs> 33 , 
            <rs type="software">SCANPY</rs> 34 ). The file contains two columns: "Cell" indicating the name of the cell, and "cell_type" indicating the name of the cluster considered. Formats accepted: .csv, .txt, .tsv, .tab, pickle.
        </p>
        <p>-COUNTS file: scRNA-seq count data containing gene expression values where rows are genes presented with gene names identifiers (
            <rs type="software">Ensembl</rs> IDs, gene names or hgnc_symbol annotation) and columns are cells. We recommend using normalised count data. Importantly, the user needs to specify whether the data was logtransformed when using the subsampling option. -Python 
            <rs type="version">3.5</rs> or higher -
            <rs type="software">SQLAlchemy -SQLite</rs> -Preprocessing of the raw expression data to generate the input files can be done using packages such as 
            <rs type="software">Seurat</rs> 33 , 
            <rs type="software">SCANPY</rs> 34 , or any other pipeline that the user prefers.
        </p>
        <p>-
            <rs type="software">Linux</rs> or MAC OS Equipment Setup Pre-processing of raw data and generating input files for the protocol Some of the most standard packages for scRNA-seq analysis include 
            <rs type="software">Seurat</rs> 33 and 
            <rs type="software">SCANPY</rs> 34 . Therefore, we include instructions for how to use these packages to pre-process the raw expression data to generate the input files necessary for 
            <rs type="software">CellPhoneDB</rs>
            <rs type="version">v</rs>
            <rs type="version">2.0</rs>. We recommend using normalised count data as input.
        </p>
        <p>For example, using the 
            <rs type="software">R</rs> package 
            <rs type="software">Seurat</rs> 33 , the count input file can be obtained by taking the raw expression data from the Seurat object and applying the normalisation manually. The user can also normalise using their preferred method for normalisation.
        </p>
        <p># take raw data and normalise it count_raw &lt;-data_object@raw.data[,data_object@cell.names] count_norm &lt;-apply(count_raw, 2, function(x) (x/sum(x))*10000) write.table(count_norm, 'cellphonedb_count.txt', sep='\t', quote=F)# take raw data and normalise it count_raw &lt;-data_object@raw.data[,data_object@cell.names] count_norm &lt;-apply(count_raw, 2, function(x) (x/sum(x))*10000) write.table(count_norm, 'cellphonedb_count.txt', sep='\t', quote=F)</p>
        <p># generating meta file meta_data &lt;-cbind(rownames(data_object@meta.data), data_object@meta.data[,'cluster', drop=F])# generating meta file meta_data &lt;-cbind(rownames(data_object@meta.data), data_object@meta.data[,'cluster', drop=F])</p>
        <p># cluster is the user's corresponding cluster column write.table(meta_data, 'cellphonedb_meta.txt', sep='\t', quote=F, row.names=F)# cluster is the user's corresponding cluster column write.table(meta_data, 'cellphonedb_meta.txt', sep='\t', quote=F, row.names=F)</p>
        <p>The input files can also be extracted from a SCANPY 34 data object: CRITICAL: This step can be used instead of Step 5 with large datasets to increase speed and reduce memory requirements.The input files can also be extracted from a SCANPY 34 data object: CRITICAL: This step can be used instead of Step 5 with large datasets to increase speed and reduce memory requirements.</p>
        <p>6. Run CellPhoneDB v2.0 in statistical analysis mode using the input files for metadata and counts and add subsampling and other subsampling-specific parameters cellphonedb method statistical_analysis yourmetafile.txt yourcountsfile.txt --subsampling --subsampling-log true6. Run CellPhoneDB v2.0 in statistical analysis mode using the input files for metadata and counts and add subsampling and other subsampling-specific parameters cellphonedb method statistical_analysis yourmetafile.txt yourcountsfile.txt --subsampling --subsampling-log true</p>
        <p>The parameters are same as described in Step 5, in addition to the following subsampling specific parameters:The parameters are same as described in Step 5, in addition to the following subsampling specific parameters:</p>
        <p>- Using different versions of the database Timing: seconds to minutes CRITICAL "Local repository" refers to CellPhoneDB data available locally on the user's computer. "Remote repository" corresponds to the CellPhoneDB official available data. This data will be downloaded using the --database parameter.- Using different versions of the database Timing: seconds to minutes CRITICAL "Local repository" refers to CellPhoneDB data available locally on the user's computer. "Remote repository" corresponds to the CellPhoneDB official available data. This data will be downloaded using the --database parameter.</p>
        <p>10. CellPhoneDB v2.0 databases can be updated from a remote repository. Available versions of the database can be listed and downloaded to be used. This is relevant as users may have used one specific version of the databases for their analysis and may want to continue with this version for consistency and reproducibility of their analysis.10. CellPhoneDB v2.0 databases can be updated from a remote repository. Available versions of the database can be listed and downloaded to be used. This is relevant as users may have used one specific version of the databases for their analysis and may want to continue with this version for consistency and reproducibility of their analysis.</p>
        <p>To use one of those versions a user must provide the parameter --database &lt;version_or_file&gt; to the command 'cellphonedb method':To use one of those versions a user must provide the parameter --database &lt;version_or_file&gt; to the command 'cellphonedb method':</p>
        <p>cellphonedb method statistical_analysis in/example_data/test_meta.txt in/example_data/test_counts.txt --database=v0.0.2cellphonedb method statistical_analysis in/example_data/test_meta.txt in/example_data/test_counts.txt --database=v0.0.2</p>
        <p>If the -database &lt;version_or_file&gt; parameter is a readable database file it will be used as it is. Otherwise, a database version matching the specified parameter will be used.If the -database &lt;version_or_file&gt; parameter is a readable database file it will be used as it is. Otherwise, a database version matching the specified parameter will be used.</p>
        <p>If the selected database version does not exist in the user's local environment it will be downloaded from the remote repository (see below).If the selected database version does not exist in the user's local environment it will be downloaded from the remote repository (see below).</p>
        <p>If the --database argument is not specified in the command for running the analysis, the latest local database version available will be used. Downloaded versions of the database will be stored in a user folder under ~/.cpdb/releases. --user-protein: Protein input file --user-gene: Gene input file --user-complex: Complex input file --user-interactions: Interactions input file --fetch: Some lists can be downloaded from original sources while creating the database, eg: uniprot, ensembl. By default, the input tables included in the 
            <rs type="software">CellPhoneDB</rs> package will be used; to enable downloading an updated copy from the remote servers --fetch must be appended to the command --result-path: Output folder --log-file: Log file
        </p>
        <p>The resulting database file will be generated in the folder "out" with cellphonedb_user_{datetime}.db. The user defined input tables will be merged with the current CellPhoneDB input tables. To use this database, please use the --database parameter when executing the "cellphonedb method" command. E.g: -your_custom_interaction_file.csv: Comma separated file (use mandatory columns!) with interactions to add/correct.The resulting database file will be generated in the folder "out" with cellphonedb_user_{datetime}.db. The user defined input tables will be merged with the current CellPhoneDB input tables. To use this database, please use the --database parameter when executing the "cellphonedb method" command. E.g: -your_custom_interaction_file.csv: Comma separated file (use mandatory columns!) with interactions to add/correct.</p>
        <p>-your_custom_protein_file.csv: Comma separated file (use mandatory columns!) with proteins to overwrite.-your_custom_protein_file.csv: Comma separated file (use mandatory columns!) with proteins to overwrite.</p>
        <p>cellphonedb database generate --fetch Some lists can be downloaded from original sources while creating the database, e.g. uniprot, or ensembl. By default, the input tables included in the 
            <rs type="software">CellPhoneDB</rs> package will be used; to enable downloading an updated copy from the remote servers --fetch must be appended to the "generate" command.
        </p>
        <p>Result: New database file with the CellPhoneDB interactions and user custom interactions. For duplicated interactions or proteins, user lists overwrite the CellPhoneDB original data.Result: New database file with the CellPhoneDB interactions and user custom interactions. For duplicated interactions or proteins, user lists overwrite the CellPhoneDB original data.</p>
        <p>This command uses external resources allocated in external servers. The command may not end correctly if external servers are not available. The timing of this step depends on external servers and the user's internet connection and can take longer to finish.This command uses external resources allocated in external servers. The command may not end correctly if external servers are not available. The timing of this step depends on external servers and the user's internet connection and can take longer to finish.</p>
        <p>Timing: seconds 15. Obtain detailed description of the mandatory and optional parameters using the help option:Timing: seconds 15. Obtain detailed description of the mandatory and optional parameters using the help option:</p>
        <p>cellphonedb method statistical_analysis yourmetafile.txt yourcountsfile.txt --helpcellphonedb method statistical_analysis yourmetafile.txt yourcountsfile.txt --help</p>
        <p>Timing: ~1 hour for dataset of ~10GB, 10000 cells, however this depends on how many jobs are running in parallel and the computing resources available at the time of analysis.Timing: ~1 hour for dataset of ~10GB, 10000 cells, however this depends on how many jobs are running in parallel and the computing resources available at the time of analysis.</p>
        <p>CRITICAL: The web interface includes form inputs for the user to define analysis parameters before submission. Downstream calculations are performed on the application's servers, rendering the information of ligand and receptor expression, and visualisation diagrams once analysis is complete (Figure 5).CRITICAL: The web interface includes form inputs for the user to define analysis parameters before submission. Downstream calculations are performed on the application's servers, rendering the information of ligand and receptor expression, and visualisation diagrams once analysis is complete (Figure 5).</p>
        <p>16. Go to the tab "Exploring your scRNAseq" and input your meta and count input files (Please see section Input data files in Equipment). 17. Provide an email address if you would like to get an update when the process finishes (Figure 5a). 18. The "significant_means" results table will appear as in Figure 5c (please see the next section -Anticipated results: formats of files). You can change the current view by clicking on the "Data Shown" button (Figure 5b) and can download the results as well.16. Go to the tab "Exploring your scRNAseq" and input your meta and count input files (Please see section Input data files in Equipment). 17. Provide an email address if you would like to get an update when the process finishes (Figure 5a). 18. The "significant_means" results table will appear as in Figure 5c (please see the next section -Anticipated results: formats of files). You can change the current view by clicking on the "Data Shown" button (Figure 5b) and can download the results as well.</p>
        <p>Click on any field from the id_cp_interaction column to display detailed information for the specific interaction pair (Figure 5c). 19. Go to the tab "Plots" and pick the type of plot you would like to produce. For plotting dot plots, please select the columns and rows you need (Figure 5d).Click on any field from the id_cp_interaction column to display detailed information for the specific interaction pair (Figure 5c). 19. Go to the tab "Plots" and pick the type of plot you would like to produce. For plotting dot plots, please select the columns and rows you need (Figure 5d).</p>
        <p>The online results viewer allows you to select which columns you wish to display in each table. This option is quite useful as an aid to visualize the results.The online results viewer allows you to select which columns you wish to display in each table. This option is quite useful as an aid to visualize the results.</p>
        <p>We originally applied CellPhoneDB to study the maternal-fetal communication at the decidualplacental interface during early pregnancy 4 . The results obtained with our new CellPhoneDB v2.0 using subsampling were consistent with our original conclusions (Figure 3). Here we provide an explanation of the results generated in this example.We originally applied CellPhoneDB to study the maternal-fetal communication at the decidualplacental interface during early pregnancy 4 . The results obtained with our new CellPhoneDB v2.0 using subsampling were consistent with our original conclusions (Figure 3). Here we provide an explanation of the results generated in this example.</p>
        <p>Without running statistical inference of ligand-receptor interactions, only "means.csv" and "desconvoluted.csv" are generated. The "means.csv" file contains mean values for each ligand-receptor interaction. The "deconvoluted.csv" file gives additional information for each of the interacting partners. This is important as some of the interacting partners are heteromers. In other words, multiple molecules have to be expressed in the same cluster in order for the interacting partner to be functional. If the user uses the statistical inference approach, additional "pvalues.csv" and "significant_means.csv" files are generated containing the values for the significant interactions. Importantly, interactions are not symmetric. In other words, when testing a ligand-receptor pair A_B between clusters X_Y, the expression of partner A is considered within the first cluster (X), and the expression of partner B within the second cluster (Y). Therefore, X_Y and Y_X represent different comparisons and will have different p-values and means.Without running statistical inference of ligand-receptor interactions, only "means.csv" and "desconvoluted.csv" are generated. The "means.csv" file contains mean values for each ligand-receptor interaction. The "deconvoluted.csv" file gives additional information for each of the interacting partners. This is important as some of the interacting partners are heteromers. In other words, multiple molecules have to be expressed in the same cluster in order for the interacting partner to be functional. If the user uses the statistical inference approach, additional "pvalues.csv" and "significant_means.csv" files are generated containing the values for the significant interactions. Importantly, interactions are not symmetric. In other words, when testing a ligand-receptor pair A_B between clusters X_Y, the expression of partner A is considered within the first cluster (X), and the expression of partner B within the second cluster (Y). Therefore, X_Y and Y_X represent different comparisons and will have different p-values and means.</p>
        <p>Python 
            <rs type="software">package</rs>, Steps 1-15, ~2 hours
        </p>
        <p>Step 1-3, Installation, 5 -10 minStep 1-3, Installation, 5 -10 min</p>
        <p>Step 5, Running with statistical method, 1,5 hours for dataset of ~10GB, 10000 cells, threads=5Step 5, Running with statistical method, 1,5 hours for dataset of ~10GB, 10000 cells, threads=5</p>
        <p>Step 6, Subsampling and statistical method, 1 hour for dataset of ~10GB, 10000 cells subsampled to 5000, 19 Overview of the statistical method framework used to infer ligand-receptor complex specific to two cell types from single-cell transcriptomics data. a, CellPhoneDB input data consist of scRNA-seq counts file and cell type annotation. Large datasets can be subsampled using geometric sketching 3 . b, Enriched receptor-ligand interactions between two cell types are derived based on expression of a receptor by one cell type and a ligand by another cell type. The member of the complex with the minimum average expression is considered for the subsequent statistical analysis. c, We generate a null distribution of the mean of the average ligand and receptor expression in the interacting clusters by randomly permute the cluster labels of all cells. d, The P value for the likelihood of cell-type specificity of a given receptor-ligand complex is calculated based on the proportion of the means which are as or higher than the actual mean. e, Ligand-receptor pairs are ranked based on their total number of significant p-values across the cell populations. Visualisation of the results using intuitive tables and plots is provided in the web interface. R1, example receptor R1; L1, example ligand L1. ; P values are indicated by circle size, scale is shown below the plot. The means of the average expression level of interacting molecule 1 in cluster 1 and interacting molecule 2 in cluster 2 are indicated by colour. b, Heatmap showing the total number of interactions between cell types in the decidua dataset obtained with CellPhoneDB. c, Overview of selected ligandreceptor interactions using the CellPhoneDB v2.0 with subsampling on the decidua dataset. P values indicated by circle size, scale on right. The means of the average expression level of interacting molecule 1 in cluster 1 and interacting molecule 2 in cluster 2 are indicated by colour. ⅓ of the dataset was subsampled. d, Heatmap showing the total number of interactions between cell types in the decidua dataset obtained with CellPhoneDB v2.0 with subsampling. ⅓ of the dataset was subsampled. e. An example of significant interactions involving complexes identified by CellPhoneDB in the placenta dataset 3 . Violin plots show log-transformed, normalized expression levels of the components of the Interleukin 1 Receptor -Interleukin 1 (IL1RN-IL1) complex in placental cells. IL1RN expression is enriched in the maternal macrophages cluster and the two subunits of the IL1 receptors (IL1R1 and IL1RAP) are co-expressed in the extravillous trophoblasts (EVT). SCT,Step 6, Subsampling and statistical method, 1 hour for dataset of ~10GB, 10000 cells subsampled to 5000, 19 Overview of the statistical method framework used to infer ligand-receptor complex specific to two cell types from single-cell transcriptomics data. a, CellPhoneDB input data consist of scRNA-seq counts file and cell type annotation. Large datasets can be subsampled using geometric sketching 3 . b, Enriched receptor-ligand interactions between two cell types are derived based on expression of a receptor by one cell type and a ligand by another cell type. The member of the complex with the minimum average expression is considered for the subsequent statistical analysis. c, We generate a null distribution of the mean of the average ligand and receptor expression in the interacting clusters by randomly permute the cluster labels of all cells. d, The P value for the likelihood of cell-type specificity of a given receptor-ligand complex is calculated based on the proportion of the means which are as or higher than the actual mean. e, Ligand-receptor pairs are ranked based on their total number of significant p-values across the cell populations. Visualisation of the results using intuitive tables and plots is provided in the web interface. R1, example receptor R1; L1, example ligand L1. ; P values are indicated by circle size, scale is shown below the plot. The means of the average expression level of interacting molecule 1 in cluster 1 and interacting molecule 2 in cluster 2 are indicated by colour. b, Heatmap showing the total number of interactions between cell types in the decidua dataset obtained with CellPhoneDB. c, Overview of selected ligandreceptor interactions using the CellPhoneDB v2.0 with subsampling on the decidua dataset. P values indicated by circle size, scale on right. The means of the average expression level of interacting molecule 1 in cluster 1 and interacting molecule 2 in cluster 2 are indicated by colour. ⅓ of the dataset was subsampled. d, Heatmap showing the total number of interactions between cell types in the decidua dataset obtained with CellPhoneDB v2.0 with subsampling. ⅓ of the dataset was subsampled. e. An example of significant interactions involving complexes identified by CellPhoneDB in the placenta dataset 3 . Violin plots show log-transformed, normalized expression levels of the components of the Interleukin 1 Receptor -Interleukin 1 (IL1RN-IL1) complex in placental cells. IL1RN expression is enriched in the maternal macrophages cluster and the two subunits of the IL1 receptors (IL1R1 and IL1RAP) are co-expressed in the extravillous trophoblasts (EVT). SCT,</p>
        <p>--verbose/--quiet: Print or hide cellphonedb logs [verbose] --pvalues-result-name: Name of the pvalues result file [default: pvalues.txt] --debug-seed: Debug random seed -1. To disable it please use a value &gt;=0 [default: -1] --threads: Number of threads to use. &gt;=1 [default: 4] Below we present three usage examples.--verbose/--quiet: Print or hide cellphonedb logs [verbose] --pvalues-result-name: Name of the pvalues result file [default: pvalues.txt] --debug-seed: Debug random seed -1. To disable it please use a value &gt;=0 [default: -1] --threads: Number of threads to use. &gt;=1 [default: 4] Below we present three usage examples.</p>
        <p>We thank Kerstin Meyer and Mike Stubbington for scientific discussions, Pablo Porras for advice on querying the IMEx database, Luz Garcia-Alonso and Krzysztof Polanski for carefully reading the manuscript, Gavin J Wright, Laura Wood and Gerard Graham for advice on protein-protein interactions and Jana Eliasova and Ania Hupalowska for help with the illustrations. We are grateful to Adria Lopez and YDEVS members for their help with the webserver and the implementation of the code in github, and all the Teichmann lab and Vento-Tormo lab members for their fruitful advice. The project was supported by Wellcome Sanger core funding (no. WT206194) and a Wellcome Strategic Support Science award (no 211276/Z/18/Z).We thank Kerstin Meyer and Mike Stubbington for scientific discussions, Pablo Porras for advice on querying the IMEx database, Luz Garcia-Alonso and Krzysztof Polanski for carefully reading the manuscript, Gavin J Wright, Laura Wood and Gerard Graham for advice on protein-protein interactions and Jana Eliasova and Ania Hupalowska for help with the illustrations. We are grateful to Adria Lopez and YDEVS members for their help with the webserver and the implementation of the code in github, and all the Teichmann lab and Vento-Tormo lab members for their fruitful advice. The project was supported by Wellcome Sanger core funding (no. WT206194) and a Wellcome Strategic Support Science award (no 211276/Z/18/Z).</p>
        <p>CellPhoneDB code is available at https://github.com/Teichlab/cellphonedb. It can also be downloaded from https://cellphonedb.org/downloads. The code in this manuscript has been peer-reviewed.CellPhoneDB code is available at https://github.com/Teichlab/cellphonedb. It can also be downloaded from https://cellphonedb.org/downloads. The code in this manuscript has been peer-reviewed.</p>
        <p>The decidua and placenta datasets can be downloaded from ArrayExpress, with experiment code E-MTAB-6701. Key references using this protocol Vento-Tormo R. et al. Nature 563(7731), 347-353 (2018): https://doi.org/10.1038/s41586-018-0698-6 Stewart, B. et al. Science 365(6460), 1461-1466 (2019): https://doi.org/10.1126/science.aat5031 Popescu, D. et al. Nature 574, 365-371 (2019) https://doi.org/10.1038/s41586-019-1652-yThe decidua and placenta datasets can be downloaded from ArrayExpress, with experiment code E-MTAB-6701. Key references using this protocol Vento-Tormo R. et al. Nature 563(7731), 347-353 (2018): https://doi.org/10.1038/s41586-018-0698-6 Stewart, B. et al. Science 365(6460), 1461-1466 (2019): https://doi.org/10.1126/science.aat5031 Popescu, D. et al. Nature 574, 365-371 (2019) https://doi.org/10.1038/s41586-019-1652-y</p>
        <p>M.E, S.A.T and R.V-T conceived and developed the protocol and wrote the manuscript. M.V-T developed the database, implemented the code in the web server and github and contributed to writing the manuscript.M.E, S.A.T and R.V-T conceived and developed the protocol and wrote the manuscript. M.V-T developed the database, implemented the code in the web server and github and contributed to writing the manuscript.</p>
        <p>The authors declare no competing interests. syncytiotrophoblast; VCT, villous cytotrophoblast; F, fibroblasts; HB, Hofbauer cells; M, macrophages, Endo, endothelial cells. protein_input/complex_input storage in the CellPhoneDB database tables. The multidata entity stores fields common to complex_input and protein_input. This makes it easier and faster for the user to perform interaction queries because interaction_table is only related to multidata_table. All non-common fields are stored in either protein_table or complex_table. Complex fields are stored in complex_composition_table. The is_complex and total_protein field are created for optimization purposes.The authors declare no competing interests. syncytiotrophoblast; VCT, villous cytotrophoblast; F, fibroblasts; HB, Hofbauer cells; M, macrophages, Endo, endothelial cells. protein_input/complex_input storage in the CellPhoneDB database tables. The multidata entity stores fields common to complex_input and protein_input. This makes it easier and faster for the user to perform interaction queries because interaction_table is only related to multidata_table. All non-common fields are stored in either protein_table or complex_table. Complex fields are stored in complex_composition_table. The is_complex and total_protein field are created for optimization purposes.</p>
    </text>
</tei>
