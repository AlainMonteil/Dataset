<?xml version="1.0" encoding="UTF-8"?>
<tei xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader>
        <fileDesc xml:id="_1"/>
        <encodingDesc>
            <appInfo>
                <application version="0.8.1-SNAPSHOT" ident="GROBID" when="2024-06-25T07:04+0000">
                    <ref target="https://github.com/kermitt2/grobid">A machine learning software for extracting information from scholarly documents</ref>
                </application>
            </appInfo>
        </encodingDesc>
    </teiHeader>
    <text xml:lang="en">
        <p>Schrödinger equation for an electronically excited molecular system. 1 In these methods, the nuclei are treated as a swarm of classical trajectories, while the electrons are treated quantummechanically. Nonadiabatic information (the coupling between different adiabatic electronic states induced by nuclear motion) is provided in diverse ways depending on the specific method.</p>
        <p>The classical trajectories are usually (but not necessarily 2 ) independent from each other. NA-MQC dynamics methods are well suited for on-the-fly propagation, in which electronic properties (potential energies, potential energy gradients, and state couplings) are computed for the nuclear geometry of the classical trajectory as the time propagation goes. Therefore, they do not require precomputed or fitted multidimensional surfaces, which allows considering the dynamics of all nuclear degrees of freedom.</p>
        <p>In this paper, we employ one of the most well-known on-the-fly NA-MQC methods, the surface hopping dynamics with decoherence-corrected 3 fewest switches 4 (DC-FSSH). The latest advances in and main limitations of NA-MQC dynamics have been recently reviewed in Ref. 5.</p>
        <p>Here, we only present the core features of DC-FSSH such that the explanation of its integration with machine learning is self-contained.</p>
        <p>In surface hopping, Newton's equations for each nucleus k with mass k The integration of Eq. (S1) requires the force / Lk V  R acting on the nuclei  due to energy gradient of state L. In our implementation, this integration is done with the popular velocity-Verlet algorithm 6 at time steps t.</p>
        <p>In the DC-FSSH version of surface hopping, transition probabilities are computed for each time step by integrating a local approximation of the time-dependent Schrödinger equation (TDSE)</p>
        <p>This approximation is local because the time-dependent coefficients J c are computed only at the</p>
        <p>of the classical trajectory. The integration of the local TDSE requires knowledge of the potential energies of each state J and the couplings between J and K  </p>
        <p>where J  is the electronic wave function of state J,</p>
        <p>is the nonadiabatic coupling vector, and k v is the classical velocity of nucleus k . In the examples discussed later, the local TDSE was integrated with the Butcher algorithm 7 to the 6 th order, with time step</p>
        <p>, where m s is an integer. This choice of   is motivated by the fact that the local TDSE requires much smaller time steps than the classical equations. The integration of the local TDSE between two classical steps is done using interpolated electronic quantities.</p>
        <p>The locality of the TDSE is known to lead to overcoherence, 8 with a superposition of several electronic states holding over time, rather than selecting a specific state, as expected.</p>
        <p>Overcoherence may lead to bad probability estimates, and several algorithms have been proposed to fix it. [8][9][10] Here, we use the simplified decay of mixing (SDM), 3 which transforms the coefficients obtained from Eq. (S2) according to</p>
        <p>In the SDM, the decoherence time JL  is given by</p>
        <p>where n K is the classical kinetic energy of the nuclei. C and  are parameters whose recommended values are 1 and 0.1 Hartree, respectively. 11 The decoherence-corrected coefficients are then used to compute the FSSH probabilities according to</p>
        <p>The stochastic algorithm samples a uniform [0,1] random number r t , which is compared to the computed probabilities. The trajectory hops from L to J if two conditions are satisfied. First, Second, the total energy after hopping is not larger than before. The second condition ensures that a hop from a lower to a higher surface is not allowed if it requires more energy than available in the system. In our calculations, if a hopping is frustrated by the second condition, the trajectory continues in the same state, with the same momentum. Hops usually occur for finite energy gaps LJ V  . To ensure energy conservation, an amount of linear momentum corresponding to this gap is added after hopping, along the direction of the nonadiabatic coupling vectors.</p>
        <p>The aim of surface hopping is to emulate the wave packet propagation by a swarm of independent trajectories. Therefore, the procedure outlined above needs to be repeated many times to produce many trajectories, which are then statistically analysed. Because of the stochastic nature of the algorithm, even when starting from the same initial conditions, two trajectories are usually different, as they hop at different times.</p>
        <p>The DC-FSSH approach is expected to work well if 1) the light pulse is much shorter than the dynamics; 2) the nuclear momentum is large; and 3) there is no strong interference between different parts of the wave packet. 12 All DC-FSSH trajectories in this study were run for 2 ps (if not specified otherwise) with time steps 0.2 t  fs, and 20 s m  using the development version 
            <rs type="software">of the Newton</rs>-X program package. [13][14] The initial conditions (starting geometries and velocities) for the dynamics with the 33-D A-SBH were generated by sampling randomly from a 2 ps ground-state dynamics run.
        </p>
        <p>Dynamics of dissipative systems can be simulated with the spin-boson Hamiltonian (SBH), 15 which in the diabatic basis is given as .</p>
        <p>This Hamiltonian has contributions from the system (s), the bath (b), and the system-bath coupling (sb). For the two-state problem studied here, these terms are defined as follows.</p>
        <p>The system Hamiltonian is 00 ,</p>
        <p>written in terms of the Pauli matrices</p>
        <p>In the isolated system, the two electronic levels are separated by 0 2 and coupled by 0 v . The bath is defined in terms of N independent harmonic oscillators</p>
        <p>each with mass k M and frequency k  , oscillating along the coordinate k R with momentum k P .</p>
        <p>I is the 2×2 identity matrix. The system and the bath are linearly coupled through</p>
        <p>where k g is a coupling constant.</p>
        <p>For surface hopping, it is more convenient to treat this model in the adiabatic basis. 16 The potential energy surfaces are</p>
        <p>where</p>
        <p>The energy gradient components are</p>
        <p>and the nonadiabatic coupling components are Page S6 of S19 The largest A-SBH model considered here consists of 33 oscillators and has parameters chosen to roughly resemble the topography of the S 1 /S 0 states of cytosine. Therefore, the masses and frequencies of this 33 dimensional (33-D) model were taken equal to those calculated for cytosine at B3LYP 20-25 /6-31G(d) [26][27][28][29][30][31][32][33][34][35][36][37] with Gaussian 09 38 (Table S1). The coupling 0 v was arbitrarily set to 800 cm -1 (ca. 0.1 eV), 0  was set to an arbitrary value of 12,000 cm -1 . 1 g and 2 g were set to 0.012 Hartree/a 0 , and k g for all other modes were set to 0.001 Hartree/a 0 .</p>
        <p>In this study we use an ML approach based on kernel ridge regression (KRR), which is easy to implement and use. It has been successfully applied for predicting many quantum chemical properties with good accuracy. [39][40][41][42][43][44][45][46] As explained above, performing DC-FSSH nonadiabatic dynamics usually requires energies, energy gradients, and nonadiabatic couplings for a given set of coordinates. Thus, we estimate each of these components ( J V ,</p>
        <p>where est</p>
        <p>Y is an estimate of one of the above components for the p-th set of coordinates  </p>
        <p>where n is an integer parameter,  is the kernel width, 2 pm  RR is the Euclidean (L 2 ) norm of the difference vector pm  RR (the Euclidean distance). In our tests we found that this kernel generally gives results superior to those obtained with commonly used Gaussian 42 or Laplacian 42 kernels for many oscillators.</p>
        <p>The vector α of regression coefficients   m  is obtained from the well-known expression: 48  </p>
        <p>where The only parameters in Eqs. (S19) and (S20) that need to be defined by a user, are n ,  , and  .</p>
        <p>We found that 1</p>
        <p>n  provides the best results, while  and  were determined by two iterations of a logarithmic grid search 44 In principle, it is possible to estimate energy gradients</p>
        <p>from ML models trained only on energies J V . However, this is known to lead to rather poor results [39][40]49 and our test calculations have confirmed that errors in gradients calculated by taking derivatives of ML models for energies are much worse than gradient components predicted by ML models individually trained for them. Another approach would be to train ML on both energies and gradients [50][51][52] or only gradients 40 to generate the universal ML model for predicting both energies and gradients.</p>
        <p>Although this approach is known to improve the accuracy of ML models, 40,[50][51] it very quickly leads to an explosion in the kernel matrix size, which then either does not fit into even large random-access memory or is too slow to invert, because matrix inversion scales as O(N 3 ). This limits the applicability of the latter approach. Hence, for practical applications, we prefer training ML models in this exploratory study for each gradient component individually as done in other studies. 53 All KRR calculations and parameter searches were performed with MLatom. 54 During the nonadiabatic dynamics it was called by Newton-X to calculate on-the-fly energies, gradients, and nonadiabatic coupling components.</p>
        <p>Machine learning can, in principle, approximate any complex function with arbitrary accuracy if provided with sufficient information and hardware resources. We demonstrate for the 1-D model that it is possible to construct a complete ML model, which knows all the information about the photophysical system required to perform FSSH dynamics without loss of accuracy. During the dynamics with the complete model, calculations of additional reference data and re-training of the KRR models are not needed.</p>
        <p>We trained ML models on 2 q (q ≥ 2) points sampled uniformly from 1 [ 15.0 15.0] R  a 0 . The ML model trained on only 2 7 = 128 points could perfectly reproduce the numerically exact A-SBH trajectory with all hopping events (see Figure 1 in the main text). The maximum drift in total energy during 2 ps ML dynamics was much less than 0.005 eV or 0.1 kcal/mol, and could be reduced even further with more training points. Trajectories with ML models trained on fewer points had larger total energy drifts, fewer or no hops, and hops at other times than found in the A-SBH trajectory. Sparse sampling creates a problem: the total energy is no longer perfectly constant (Figure S4).</p>
        <p>However, the conservation of total energy is not necessary as long as forces are predicted accurately with ML. 49 For example, in case of the 1-D ML model trained on 16 points, the maximum drift in total energy during 2 ps dynamics was as large as 0.30 eV or 7.0 kcal/mol.</p>
        <p>Nevertheless, the quality of this trajectory is reasonable (Figure S3). In practice, even during pure QM dynamics the total energy can deviate rather strongly due to various reasons. For example, when nonadiabatic dynamics are run at the semiempirical multi-reference configuration interaction level without adaptive time steps, there may be total energy deviations up to 10 kcal/mol between consecutive time steps and a total energy drift during trajectory propagation of more than 100 kcal/mol. 55 Thus, one may tolerate fluctuations in total energy during ML dynamics caused by incompleteness of the ML model as long as qualitative conclusions are preserved and crucial ensemble properties (e.g. excited-state lifetimes, evolution of geometrical properties, etc.) remain realistic. In other words, our approach can be regarded as an approximation to the reference high-level QM dynamics method, which may be more accurate than on-the-fly NA-MQC dynamics with a more approximate QM method. Low-level QM methods can still be useful as a prior to obtain more accurate ML models though, 56 which will be the topic of our future research.</p>
        <p>Simple random sampling will lead to many redundant structures in high-dimensional cases. We avoided this problem by first randomly sampling 50,000 points from the 33-dimensional space and then sampling 1,000 and 10,000 points from these 50,000 points using farthest-point traversal (FPT, with initial two points taken farthest apart), which is similar to structure-based sampling 41 and is known to yield more diverse training sets for more accurate ML models.</p>
        <p>Energies, gradients, and nonadiabatic couplings were calculated with A-SBH only for the selected 1,000 and 10,000 points. The initial 50,000 points were sampled within boundaries far exceeding those encountered during A-SBH dynamics to avoid extrapolation problems with ML.</p>
        <p>In our test calculations we observed that dynamics with ML trained on points sampled with FPT is of better quality than dynamics with ML trained on randomly sampled points.</p>
        <p>The reduction of the number of required QM calculations can roughly serve as an estimate of the reduction of total computational cost, because the time for training ML models on small numbers of training set points and the time for estimating QM properties with ML (several seconds at most) are negligible compared to the time for typical QM calculations. In our case, A-SBH computations were required for the training points, while in our ML dynamics A-SBH was invoked for 13% (ML trained on 1,000 points) and 16% (ML trained on 10,000 points) of all time steps when the energy gap dropped below 0.03 Hartree, i.e. the number of A-SBH calculations was reduced in DC-FSSH dynamics by 84-87% by using ML. It is possible to reduce the fraction of QM calculations invoked during dynamics to less than 10% by decreasing the cutoff for the energy gap. However, we would not recommend going below 0.02 Hartree: this is the value, where hopping often happens in our pure A-SBH trajectories, and ML may well overestimate the gap and would then miss the hopping. Our ML model trained on 1,000 points indeed behaved poorly for a cutoff of 0.02 Hartree, while the model trained on 10,000 points gave hopping times that were similar for both values of the cutoff (0.02 and 0.03 Hartree).</p>
        <p>In principle, no energy calculations are necessary for running accurate dynamics as long as accurate forces are available. This is often exploited in ML dynamics simulations, where only forces are predicted with ML. 49,53 In our simulations we need ML energies only to estimate energy gap and thus to detect regions of higher probability of nonadiabatic transitions. Hence, in our model, total energy conservation is not a crucial issue. As we have shown above for individual trajectories of the 1-D model, relatively large deviations in total energy have little effect on the quality of the trajectories. On the other hand, we consider it useful to monitor the total energy drift to evaluate the stability of the ML approach, while we regard immediate fluctuations in the total energy as being less important.</p>
        <p>We first analyze the total energy evolution averaged over 1,000 trajectories for the simulations with A-SBH and two ML models. Increasing the number of ML training points decreases the magnitude of the total energy fluctuations, and also brings the average total energy and the corresponding standard deviation closer to the A-SBH values (Figure S5). The final drift of the average total energy in 2 ps trajectories relatively to the initial time is reasonably small for ML Page S12 of S19 trained on 1,000 points (0.35 eV, 8.03 kcal/mol) and much smaller for ML trained on 10,000 points (0.02 eV, 0.4 kcal/mol). This confirms the stability of the ML approach. As seen from a selection of randomly chosen individual trajectories (Figure S6) fluctuations of the total energy during ML dynamics are rather large, similar to the case of 1-D dynamics runs with ML trained on a very sparse grids. The total energy fluctuations are smaller for the ML model trained on 10,000 points. The largest total energy jumps between two consecutive steps happen when one step is calculated with ML and the other with A-SBH, i.e. at the borders of the region with an energy gap of 0.03 Hartree. For a randomly chosen trajectory, the largest total energy jumps are 2.17 eV (50.1 kcal/mol, ML trained on 1,000 points) and 0.92 eV (21.3 kcal/mol, ML trained on 10,000 points). However, the largest total energy jumps before the first A-SBH calculation is done are reasonably small: 0.13 eV (3.1 kcal/mol, ML trained on 1,000 points) and 0.11 eV (2.6 kcal/mol, ML trained on 10,000 points). As already mentioned, large variations in the ML total energy do not imply that the simulation is not reliable. Another important observation from Figure S6 is that there are clearly visible short periods when the total energy is constant: this happens when A-SBH calculations are requested for energy gaps below the cutoff of 0.03 Hartree. In these periods, the total energy is the true A-SBH energy, which is close to the A-SBH total energy at the start of the corresponding pure A-SBH trajectory. This suggests another way of estimating the quality of ML dynamics. Ideally, the A-SBH total energy should be the same during ML dynamics and pure A-SBH dynamics. To monitor this for our ML trajectories, we calculated the deviations between the A-SBH total energies at the first point of each low-energy-gap period in the ML trajectory and the starting point of the pure A-SBH trajectory with the same initial conditions. These deviations were collected from 1,000 trajectories run with both ML models. The corresponding error histogram is given in Figure S7. The mean deviations are reasonably close to zero, and the standard deviations are also rather small: -0.06±0.27 eV (ML trained on 1,000 points) and +0.06±0.14 eV (ML trained on 10,000 points, i.e. with roughly half the standard deviation of the model trained on 1,000 points).</p>
        <p>This provides further evidence for the stability of our ML approach.</p>
        <p>Our smallest ML model contains 1,000 training points. Decreasing this number even further would quickly increase the ML error, which is proportional to tr 1/ b N , where b is a constant depending on specific conditions and can assume values typically ranging from 0.5 to 2. 41,[57][58] In our simulations with 1,000 training points we have already seen signs of a break-down in terms of a larger drift in total energy after 2 ps and a higher sensitivity to the chosen energy cutoff.</p>
        <p>Thus, a training set of 1,000 points seems close to the the minimum size that is still applicable for the nonadiabatic dynamics simulations of our 33-D model. Generalizations to other systems</p>
        <p>are not yet possible at this stage. Hartree) and at the starting point of pure A-SBH dynamics with the same initial conditions. The ML models were trained on 1,000 and 10,000 points.</p>
        <p>The S 1 population as a function of time was fitted with the function The margin of error in the lifetime corresponds to a 95% confidence interval.</p>
        <p>There is a high correlation between the results of the pure A-SBH and the ML simulations. This is shown in Figure S8 for the S 1 populations. The Pearson correlation coefficient between A-SBH and ML trained on 1,000 points is 0.988 over the full 2 ps data collection. It is 0.987 between A-SBH and ML trained on 10,000 points. The correlation tends to degrade as the dynamics evolves. If only points between 0 and 1 ps are considered, r = 0.994 between pure A-SBH and each ML set. By contrast, if only points between 1 and 2 ps are considered, the correlation coefficient is 0.477 between pure A-SBH and ML trained on 1,000 points, and 0.611 between pure A-SBH and ML trained on 10,000 points.</p>
        <p>frequencies and reduced masses of cytosine in the ground state at B3LYP/6-31G(d) and system-bath couplings   k g . Mode Frequency (cm -1 ) Reduced Mass (amu) g k (Hartree/a</p>
    </text>
</tei>
