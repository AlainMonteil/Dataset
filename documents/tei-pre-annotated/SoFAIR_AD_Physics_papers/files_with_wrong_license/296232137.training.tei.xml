<?xml version="1.0" encoding="UTF-8"?>
<tei xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader>
        <fileDesc xml:id="_1"/>
        <encodingDesc>
            <appInfo>
                <application version="0.8.1-SNAPSHOT" ident="GROBID" when="2024-06-14T14:21+0000">
                    <ref target="https://github.com/kermitt2/grobid">A machine learning software for extracting information from scholarly documents</ref>
                </application>
            </appInfo>
        </encodingDesc>
    </teiHeader>
    <text xml:lang="en">
        <p>Rumors can propagate at great speed through social networks and produce significant damages. In order to control rumor propagation, spreading correct information to counterbalance the effect of the rumor seems more appropriate than simply blocking rumors by censorship or network disruption. In this paper, a competitive diffusion model, namely Linear Threshold model with One Direction state Transition (LT1DT), is proposed for modeling competitive information propagation of two different types in a same network. The problem of minimizing rumor spread in social networks is explored and a novel heuristic based on diffusion dynamics is proposed to solve this problem under the LT1DT. Experimental analysis on four different networks shows that the novel heuristic outperforms pagerank centrality. By seeding correct information in the proximity of rumor seeds, the novel heuristic performs as well as the greedy approach in scale-free and small-world networks but runs three orders of magnitude faster than the greedy approach.Rumors can propagate at great speed through social networks and produce significant damages. In order to control rumor propagation, spreading correct information to counterbalance the effect of the rumor seems more appropriate than simply blocking rumors by censorship or network disruption. In this paper, a competitive diffusion model, namely Linear Threshold model with One Direction state Transition (LT1DT), is proposed for modeling competitive information propagation of two different types in a same network. The problem of minimizing rumor spread in social networks is explored and a novel heuristic based on diffusion dynamics is proposed to solve this problem under the LT1DT. Experimental analysis on four different networks shows that the novel heuristic outperforms pagerank centrality. By seeding correct information in the proximity of rumor seeds, the novel heuristic performs as well as the greedy approach in scale-free and small-world networks but runs three orders of magnitude faster than the greedy approach.</p>
        <p>Propagation phenomena can be observed in many complex systems as diverse as diffusion of innovation, belief, and information in social networks, epidemics spread in human and animal physical contact networks, cascading failures in infrastructure networks, virus spread in computer networks, etc. Besides, the prevalence of online social media has been witnessed in the past decades where people are more and more likely to exchange ideas, share information, and even adopt innovations or new products. Thus a rich body of the research has been devoted to analyzing the propagation of information, opinion, social behavior, and innovation. This kind of research may help people to understand how the information or opinion propagates in social networks and how to convince people to adopt an innovation or follow a new idea. To model such propagation, Kempe et al. [20] firstly proposed two main discrete diffusion models, namely the Linear Threshold Model (LTM) and the Independent Cascade Model (ICM). Both models consist in directed graphs denoted by G(V, E), where each node represents a user or an individual and has two alternative states at a given time step, namely active (if it has adopted the innovation) and inactive (if it has not adopted the innovation). Initially, all the nodes are inactive. At time step t = 0, a subset of nodes S ⊆ V is activated in order to start the diffusion process and other nodes stay inactive.Propagation phenomena can be observed in many complex systems as diverse as diffusion of innovation, belief, and information in social networks, epidemics spread in human and animal physical contact networks, cascading failures in infrastructure networks, virus spread in computer networks, etc. Besides, the prevalence of online social media has been witnessed in the past decades where people are more and more likely to exchange ideas, share information, and even adopt innovations or new products. Thus a rich body of the research has been devoted to analyzing the propagation of information, opinion, social behavior, and innovation. This kind of research may help people to understand how the information or opinion propagates in social networks and how to convince people to adopt an innovation or follow a new idea. To model such propagation, Kempe et al. [20] firstly proposed two main discrete diffusion models, namely the Linear Threshold Model (LTM) and the Independent Cascade Model (ICM). Both models consist in directed graphs denoted by G(V, E), where each node represents a user or an individual and has two alternative states at a given time step, namely active (if it has adopted the innovation) and inactive (if it has not adopted the innovation). Initially, all the nodes are inactive. At time step t = 0, a subset of nodes S ⊆ V is activated in order to start the diffusion process and other nodes stay inactive.</p>
        <p>The most widely studied problem considering propagation in social networks is the influence maximization problem. This is a problem of identifying a small subset of early adopters to maximize the total influence propagation for a given diffusion model and has a clear practical motivation in many applications including budget allocation in viral marketing [1,11,20,27,34,41,46], controlling the rumor spread [17,40,48], opinion formation [14,33,38,49], information spread forecasting [26], etc. The influence maximization problem was firstly formalized by Kempe et al. [20] as an optimization problem and is proved to be NP-hard under both the ICM and LTM. The authors then presented a greedy algorithm to solve the problem that can achieve a good sub-optimal solution. Following this work, improved greedy algorithms [8,9,13,24], community based approaches [7,23,36], new centrality measures [35,37] and efficient heuristics [15,25,31,45] have been proposed to solve the problem aiming to balance the time complexity of algorithms and the influence propagation and trying to make them scalable to large datasets. In recent years, researchers have studied the influence maximization problem in more complex networks by taking the heterogeneity of individual relationships [18] or multiplexity [42] into consideration.The most widely studied problem considering propagation in social networks is the influence maximization problem. This is a problem of identifying a small subset of early adopters to maximize the total influence propagation for a given diffusion model and has a clear practical motivation in many applications including budget allocation in viral marketing [1,11,20,27,34,41,46], controlling the rumor spread [17,40,48], opinion formation [14,33,38,49], information spread forecasting [26], etc. The influence maximization problem was firstly formalized by Kempe et al. [20] as an optimization problem and is proved to be NP-hard under both the ICM and LTM. The authors then presented a greedy algorithm to solve the problem that can achieve a good sub-optimal solution. Following this work, improved greedy algorithms [8,9,13,24], community based approaches [7,23,36], new centrality measures [35,37] and efficient heuristics [15,25,31,45] have been proposed to solve the problem aiming to balance the time complexity of algorithms and the influence propagation and trying to make them scalable to large datasets. In recent years, researchers have studied the influence maximization problem in more complex networks by taking the heterogeneity of individual relationships [18] or multiplexity [42] into consideration.</p>
        <p>Influence maximization problems are to maximize the spread of good things such as positive information and innovation. Undesirable things, such as failures, rumors, epidemics, etc., may also spread in a similar fashion and could produce significant damages to the society. For instance, the rumor "Two explosions in White House and Obama is injured" occurred in April 23, 2013 caused 10 billion USD losses before the rumor was clarified [32]. Therefore, the problem of containing or controlling the undesirable things spread is nonnegligible. Recently, Yang et al. [44] addressed two different classes of influence minimization problems. The first one, called loss minimization with disruption, aims to minimize the spread due to an unavoidable disturbance. The second one, called diffusion minimization with guaranteed target, aims to minimize the spread under the constraint that the spread should reach a given target set.Influence maximization problems are to maximize the spread of good things such as positive information and innovation. Undesirable things, such as failures, rumors, epidemics, etc., may also spread in a similar fashion and could produce significant damages to the society. For instance, the rumor "Two explosions in White House and Obama is injured" occurred in April 23, 2013 caused 10 billion USD losses before the rumor was clarified [32]. Therefore, the problem of containing or controlling the undesirable things spread is nonnegligible. Recently, Yang et al. [44] addressed two different classes of influence minimization problems. The first one, called loss minimization with disruption, aims to minimize the spread due to an unavoidable disturbance. The second one, called diffusion minimization with guaranteed target, aims to minimize the spread under the constraint that the spread should reach a given target set.</p>
        <p>In this paper, we focus on containing the rumor spread in social networks. Rumor control strategies can be divided into two categories: network disruption strategies and counterbalance strategies. Network disruption strategies can be carried out by removing some critical nodes and edges of the underlying network and were used in [21,22] to suppress the misinformation spread. However, such a strategy is not viable in practice since (1) interfering with the network structure may be impossible for a control agent and (2) removing critical nodes is a form of censorship that may violate ethical standards. Counterbalance strategies, on the contrary, aim to reduce the diffusion of rumors by spreading correct information. This is the approach that we will consider in this paper.In this paper, we focus on containing the rumor spread in social networks. Rumor control strategies can be divided into two categories: network disruption strategies and counterbalance strategies. Network disruption strategies can be carried out by removing some critical nodes and edges of the underlying network and were used in [21,22] to suppress the misinformation spread. However, such a strategy is not viable in practice since (1) interfering with the network structure may be impossible for a control agent and (2) removing critical nodes is a form of censorship that may violate ethical standards. Counterbalance strategies, on the contrary, aim to reduce the diffusion of rumors by spreading correct information. This is the approach that we will consider in this paper.</p>
        <p>The basic diffusion models -such as the one we considered in [44]-assume that there is only one item propagating in the network. For this reason they are not suitable to model the competitive propagation phenomenon that characterizes the use of a counterbalance strategy to control the rumor spread. Several competitive diffusion models have been proposed [3,4,5,16,29,47] being different in the mechanisms describing how an individual chooses an item to adopt when two competitive items reach him/her at the same step. Under the competitive diffusion models, a meaningful problem, i.e., competitive influence maximization, is that of choosing a suitable set of nodes adopting an item initially, so as to maximize the influence spread of such an item. It is usually assumed that the seeding strategy of the competitors has already been fixed and is known. Nash equilibrium analysis has been proposed in the case in which all competitors may adapt their strategy in a game theoretic perspective [10].The basic diffusion models -such as the one we considered in [44]-assume that there is only one item propagating in the network. For this reason they are not suitable to model the competitive propagation phenomenon that characterizes the use of a counterbalance strategy to control the rumor spread. Several competitive diffusion models have been proposed [3,4,5,16,29,47] being different in the mechanisms describing how an individual chooses an item to adopt when two competitive items reach him/her at the same step. Under the competitive diffusion models, a meaningful problem, i.e., competitive influence maximization, is that of choosing a suitable set of nodes adopting an item initially, so as to maximize the influence spread of such an item. It is usually assumed that the seeding strategy of the competitors has already been fixed and is known. Nash equilibrium analysis has been proposed in the case in which all competitors may adapt their strategy in a game theoretic perspective [10].</p>
        <p>In this paper, we also consider the competitive propagation between two types of information, e.g., rumor and truth (from now on for the sake of simplicity we will use "truth" instead of "correct information") on a topic or an activity. Instead of studying the competitive influence maximization problem, we address the problem of minimizing rumor spread by choosing a suitable set of nodes to spread the truth once the rumor is detected.In this paper, we also consider the competitive propagation between two types of information, e.g., rumor and truth (from now on for the sake of simplicity we will use "truth" instead of "correct information") on a topic or an activity. Instead of studying the competitive influence maximization problem, we address the problem of minimizing rumor spread by choosing a suitable set of nodes to spread the truth once the rumor is detected.</p>
        <p>Similar work has been done in [5] and [16]. Specifically, in [5], minimizing rumor spread was studied considering an independent cascade model where it is assumed that if truth and rumor reach an individual at the same step then truth prevails. In [16], He et al. formalized the influence blocking maximization problem under an extension of the linear threshold model where rumor prevails if an individual can be activated by both rumor and truth at the same time step. However, the above two models are limited in two aspects.Similar work has been done in [5] and [16]. Specifically, in [5], minimizing rumor spread was studied considering an independent cascade model where it is assumed that if truth and rumor reach an individual at the same step then truth prevails. In [16], He et al. formalized the influence blocking maximization problem under an extension of the linear threshold model where rumor prevails if an individual can be activated by both rumor and truth at the same time step. However, the above two models are limited in two aspects.</p>
        <p>• The probability of a user accepting the truth when rumor and truth reach him/her simultaneously is either 0 or 1. However, in realistic cases this probability of individuals accepting the truth varies with many complex social factors. As an example, sometimes he/she may doubt the source of the truth. • In addition, all the mentioned competitive diffusion models assume that once an individual is activated by one type of information, he/she keeps like that forever and never changes his/her mind. This assumption works well for product adoption that is associated with purchase behaviors which typically are not easily reversible, but not for information spread or opinion formation since people's attitude towards a politic activity or a news event changes according to new information gathered from the network.• The probability of a user accepting the truth when rumor and truth reach him/her simultaneously is either 0 or 1. However, in realistic cases this probability of individuals accepting the truth varies with many complex social factors. As an example, sometimes he/she may doubt the source of the truth. • In addition, all the mentioned competitive diffusion models assume that once an individual is activated by one type of information, he/she keeps like that forever and never changes his/her mind. This assumption works well for product adoption that is associated with purchase behaviors which typically are not easily reversible, but not for information spread or opinion formation since people's attitude towards a politic activity or a news event changes according to new information gathered from the network.</p>
        <p>In this work, there are three main contributions.In this work, there are three main contributions.</p>
        <p>First, a Linear Threshold model with One Direction state Transition (LT1DT) is presented to overcome the shortcomings of previous models.First, a Linear Threshold model with One Direction state Transition (LT1DT) is presented to overcome the shortcomings of previous models.</p>
        <p>• We introduce two thresholds for each individual: influence threshold and decision threshold which take effect in different stages when activating an inactive node or convincing a rumor activated node to switch its belief to the truth. • The model allows a reconsideration for nodes that have already accepted the rumor but not for nodes that have already accepted the truth.• We introduce two thresholds for each individual: influence threshold and decision threshold which take effect in different stages when activating an inactive node or convincing a rumor activated node to switch its belief to the truth. • The model allows a reconsideration for nodes that have already accepted the rumor but not for nodes that have already accepted the truth.</p>
        <p>Such a model is consistent with behavioral patterns that many of us have personally observed: people who have unintentionally contributed to the rumor spread may later apologize for the mistakes. On the other hand, an individual which knowingly accepts the truth will most likely disregard the rumor [40].Such a model is consistent with behavioral patterns that many of us have personally observed: people who have unintentionally contributed to the rumor spread may later apologize for the mistakes. On the other hand, an individual which knowingly accepts the truth will most likely disregard the rumor [40].</p>
        <p>The LT1DT turns out to be non-progressive due to the reconsideration process. However, by analyzing the steady state, we can provide an upper bound of the number of nodes that will eventually adopt the rumor and a lower bound of the number of nodes that will eventually adopt the truth.The LT1DT turns out to be non-progressive due to the reconsideration process. However, by analyzing the steady state, we can provide an upper bound of the number of nodes that will eventually adopt the rumor and a lower bound of the number of nodes that will eventually adopt the truth.</p>
        <p>Second, under the framework of the LT1DT model, we address the issue of minimizing rumor spread adopting a counterbalance strategy. We show that this problem is NP-hard and propose a novel heuristic called ContrId which is based on the diffusion dynamics to solve the problem. We compare ContrId with two different heuristics which are adaptations of well known ones. One is solely based on the network structure and uses a PageRank algorithm to select nodes with higher centrality score and the other one uses a greedy framework called 
            <rs type="software">MinGreedy</rs>. ContrId outperforms PageRank and has the same level of computation complexity, which grows linearly with the number of nodes n in the network. ContrId performs not as well as 
            <rs type="software">MinGreedy</rs> in terms of rumor containment but runs three orders of magnitude faster than 
            <rs type="software">MinGreedy</rs>.
        </p>
        <p>Third, we study the proximity effect, i.e., the effect of seeding truth in the proximity of rumor seeds, in combination with the algorithms ContrId, 
            <rs type="software">PageRank</rs>, and 
            <rs type="software">MinGreedy</rs>. The corresponding heuristics are called ProxContrId, 
            <rs type="software">ProxPageRank</rs>, and 
            <rs type="software">ProxMinGreedy</rs>. Such restriction significantly reduces the computation complexity of the heuristics especially for MinGreedy and brings better effectiveness of rumor containment. The experimental results also show that 
            <rs type="software">ProxContrId</rs> performs as well as 
            <rs type="software">ProxMinGreedy</rs> in scale-free and small-world networks and runs three orders of magnitude faster than 
            <rs type="software">ProxMinGreedy</rs>. Furthermore, ContrId and ProxContrId can guarantee that adding nodes to the truth seed set will not increase the rumor spread. This cannot be guaranteed if the truth seed set is selected by other approaches such as PageRank and 
            <rs type="software">ProxPageRank</rs>.
        </p>
        <p>Some preliminary results on this topic were presented in [43]. This paper is substantially different: an analysis of the steady state is provided; a greedy approach and its constrained version are presented as well to solve the problem of minimizing rumor spread in order to compare ContrId and the greedy approach; complete analysis of computation complexity and monotonicity guarantee of all presented approaches are clarified; the issue of scalability of the approaches are discussed; a more comprehensive simulation on both synthetic datasets generated by some popular models (e.g., Barabási-Albert model [2] and Watts-Strogatz model [39]) and real-world datasets is given.Some preliminary results on this topic were presented in [43]. This paper is substantially different: an analysis of the steady state is provided; a greedy approach and its constrained version are presented as well to solve the problem of minimizing rumor spread in order to compare ContrId and the greedy approach; complete analysis of computation complexity and monotonicity guarantee of all presented approaches are clarified; the issue of scalability of the approaches are discussed; a more comprehensive simulation on both synthetic datasets generated by some popular models (e.g., Barabási-Albert model [2] and Watts-Strogatz model [39]) and real-world datasets is given.</p>
        <p>The organization of this paper is the following. Section 2 proposes a new competitive diffusion model, i.e., Linear Threshold model with One Direction state Transition. Section 3 presents the minimizing rumor spread problem (MRS) and its hardness. Section 4 lists two categories of heuristics to solve the MRS problem. A series of experimental study are presented in Section 5. Section 6 concludes the paper and discusses the future work.The organization of this paper is the following. Section 2 proposes a new competitive diffusion model, i.e., Linear Threshold model with One Direction state Transition. Section 3 presents the minimizing rumor spread problem (MRS) and its hardness. Section 4 lists two categories of heuristics to solve the MRS problem. A series of experimental study are presented in Section 5. Section 6 concludes the paper and discusses the future work.</p>
        <p>In this section, we generally introduce the Linear Threshold model with One Direction state Transition (LT1DT for short) to describe the competitive influence propagation of two items (e.g., two similar products with different qualities, two opposite beliefs on a topic, etc.), say R and T, in the same network.In this section, we generally introduce the Linear Threshold model with One Direction state Transition (LT1DT for short) to describe the competitive influence propagation of two items (e.g., two similar products with different qualities, two opposite beliefs on a topic, etc.), say R and T, in the same network.</p>
        <p>A LT1DT network N is a 4-tuple (G(V, E), W, θ, θ R ) where G(V, E) is a directed graph with V = {1, 2, ..., n} denoting the set of nodes and E ⊆ V × V denoting a set of directed arcs, i.e., we write (u, v) ∈ E when there is a directed arc from node u to v. Functions θ, θ R : V → (0, 1] are mappings that assign an influence threshold θ u ∈ (0, 1] and a decision thresholdA LT1DT network N is a 4-tuple (G(V, E), W, θ, θ R ) where G(V, E) is a directed graph with V = {1, 2, ..., n} denoting the set of nodes and E ⊆ V × V denoting a set of directed arcs, i.e., we write (u, v) ∈ E when there is a directed arc from node u to v. Functions θ, θ R : V → (0, 1] are mappings that assign an influence threshold θ u ∈ (0, 1] and a decision threshold</p>
        <p>The influence threshold θ u intuitively represents the tendency of node u to be influenced to participate into an activity or adopt a type of information or innovation when their neighbors do [20] (the smaller θ u is, the easier node u can be influenced) and the decision threshold θ R u represents the tendency of node u to adopt item R after being influenced (the smaller θ R u is, the easier node u will adopt item R). We define the in-neighbor set of node u ∈ V as N in u = {v|(v, u) ∈ E} and out-neighbor set as N out u = {v|(u, v) ∈ E}. Arc (u, v) represents that node u has direct influence on node v.The influence threshold θ u intuitively represents the tendency of node u to be influenced to participate into an activity or adopt a type of information or innovation when their neighbors do [20] (the smaller θ u is, the easier node u can be influenced) and the decision threshold θ R u represents the tendency of node u to adopt item R after being influenced (the smaller θ R u is, the easier node u will adopt item R). We define the in-neighbor set of node u ∈ V as N in u = {v|(v, u) ∈ E} and out-neighbor set as N out u = {v|(u, v) ∈ E}. Arc (u, v) represents that node u has direct influence on node v.</p>
        <p>In this paper we assume that the parameters of the network are given. In reality, it may not be easy to learn them from real social network data. This identification problem goes beyond the scope of this paper but we refer to [12] for the studies on learning network parameters.In this paper we assume that the parameters of the network are given. In reality, it may not be easy to learn them from real social network data. This identification problem goes beyond the scope of this paper but we refer to [12] for the studies on learning network parameters.</p>
        <p>In the LT1DT model, each node has three alternative states at each step: inactive, R-active (adopting R), and T-active (adopting T) and one transient state: influenced. Let S R denote the seed set of R which represents a set of nodes that adopt R at time step t = 0. Such an adoption starting from the seed set propagates to the network in discrete steps. We denote by φ T t the set of nodes that adopt T at step t. The set of nodes T-active at step t, i.e., those which adopt T in the interval [0, t], is denoted byIn the LT1DT model, each node has three alternative states at each step: inactive, R-active (adopting R), and T-active (adopting T) and one transient state: influenced. Let S R denote the seed set of R which represents a set of nodes that adopt R at time step t = 0. Such an adoption starting from the seed set propagates to the network in discrete steps. We denote by φ T t the set of nodes that adopt T at step t. The set of nodes T-active at step t, i.e., those which adopt T in the interval [0, t], is denoted by</p>
        <p>The notations S R , φ R t will be similarly adopted for item R. Let φ R→T t denote the set of nodes changing from R-active to T-active at step t. Then, the set of nodes R-active at step t, i.e., those which adopt R and do not change the decision in the interval [0, t], is denoted by Φ When a node is inactive, event a (the node is influenced) occurs if Eq. ( 1) holds, otherwise event ā (remains inactive) occurs. When a node is influenced, event b (the node adopts R) occurs if Eq. ( 2) holds, otherwise event c (the node adopts T) occurs. When a node is R-active, event d (the node remains R-active) occurs if Eq. ( 2) holds, otherwise event d (the node changes its mind to T-active) occurs.The notations S R , φ R t will be similarly adopted for item R. Let φ R→T t denote the set of nodes changing from R-active to T-active at step t. Then, the set of nodes R-active at step t, i.e., those which adopt R and do not change the decision in the interval [0, t], is denoted by Φ When a node is inactive, event a (the node is influenced) occurs if Eq. ( 1) holds, otherwise event ā (remains inactive) occurs. When a node is influenced, event b (the node adopts R) occurs if Eq. ( 2) holds, otherwise event c (the node adopts T) occurs. When a node is R-active, event d (the node remains R-active) occurs if Eq. ( 2) holds, otherwise event d (the node changes its mind to T-active) occurs.</p>
        <p>Different with the LTM, in the LT1DT at each step, each node uses its own node-level automaton to decide to which state it transits. The state transition depends on its current state and the influence it received and compared to its thresholds. The node-level automaton is shown in Fig. 1 where each state is indicated by a circle with label and the influenced state framed by the dotted line is transient.Different with the LTM, in the LT1DT at each step, each node uses its own node-level automaton to decide to which state it transits. The state transition depends on its current state and the influence it received and compared to its thresholds. The node-level automaton is shown in Fig. 1 where each state is indicated by a circle with label and the influenced state framed by the dotted line is transient.</p>
        <p>Precisely, at step t = 1, 2, • • • , two processes occur concurrently, i.e., activation process (for each inactive node u ∈ V \ Φ t-1 ) and reconsideration process (for R-active nodes except the seeding nodesPrecisely, at step t = 1, 2, • • • , two processes occur concurrently, i.e., activation process (for each inactive node u ∈ V \ Φ t-1 ) and reconsideration process (for R-active nodes except the seeding nodes</p>
        <p>The process of activating an inactive node takes place in two stages: influence stage which depends on the influence threshold and decision stage which depends on the decision threshold. In the influence stage, an inactive node u is influenced to participate into the activity if the total weight from its active in-neighbors is greater than or equal to θ u , i.e., ∀u ∈The process of activating an inactive node takes place in two stages: influence stage which depends on the influence threshold and decision stage which depends on the decision threshold. In the influence stage, an inactive node u is influenced to participate into the activity if the total weight from its active in-neighbors is greater than or equal to θ u , i.e., ∀u ∈</p>
        <p>In the decision stage a node's decision depends on its decision threshold θ R u . Node u will adopt R if the ratio of the sum of the influence weights from its R-active in-neighbors to the total weight from its active in-neighbors is greater than or equal to θ R u , i.e.,In the decision stage a node's decision depends on its decision threshold θ R u . Node u will adopt R if the ratio of the sum of the influence weights from its R-active in-neighbors to the total weight from its active in-neighbors is greater than or equal to θ R u , i.e.,</p>
        <p>Otherwise, it will adopt T, i.e., u ∈ φ T t .Otherwise, it will adopt T, i.e., u ∈ φ T t .</p>
        <p>At each step t, an R-active node u ∈ V \ (Φ T t-1 ∪ S R ) reconsiders its active states due to the influence of its in-neighbors. It remains R-active if the ratio of the sum of the influence weights from its R-active in-neighbors to the total weight from its active in-neighbors is greater than or equal to θ R u , i.e., Eq. ( 2) holds. Otherwise, it becomes T-active, i.e., u ∈ φ R→T t .At each step t, an R-active node u ∈ V \ (Φ T t-1 ∪ S R ) reconsiders its active states due to the influence of its in-neighbors. It remains R-active if the ratio of the sum of the influence weights from its R-active in-neighbors to the total weight from its active in-neighbors is greater than or equal to θ R u , i.e., Eq. ( 2) holds. Otherwise, it becomes T-active, i.e., u ∈ φ R→T t .</p>
        <p>The evolution propagates until no more individual can be influenced or reconsider his decision. In this case the network enters a steady state. The sets of R-final adopters and T-final adopters are denoted by Note that the LT1DT can be directly reduced to the simple LTM model when there is only one type of item propagating through the network.The evolution propagates until no more individual can be influenced or reconsider his decision. In this case the network enters a steady state. The sets of R-final adopters and T-final adopters are denoted by Note that the LT1DT can be directly reduced to the simple LTM model when there is only one type of item propagating through the network.</p>
        <p>In the following two parts, we discuss the properties of the LT1DT model in terms of the transient phase and the steady state.In the following two parts, we discuss the properties of the LT1DT model in terms of the transient phase and the steady state.</p>
        <p>We say that a set function f (S) : given S R , that is, adding nodes to the seed set of T may not always decrease the spread of its competitor R. This property means that in this setting the choice of the seed set of item T requires particular consideration if the objective is that of minimizing the number of adopters of item R. This phenomenon cannot be avoided in some scenarios because spreading a competitive product boosts the awareness of such type of product or innovation, while the type of product adopted depends on the human decision making. However, we will show that if S T is selected by some particular strategies (e.g., ContrId and ProxContrId presented in Section 4), |Φ * R (S R , S T )| is guaranteed to be non-increasing w.r.t. S T .We say that a set function f (S) : given S R , that is, adding nodes to the seed set of T may not always decrease the spread of its competitor R. This property means that in this setting the choice of the seed set of item T requires particular consideration if the objective is that of minimizing the number of adopters of item R. This phenomenon cannot be avoided in some scenarios because spreading a competitive product boosts the awareness of such type of product or innovation, while the type of product adopted depends on the human decision making. However, we will show that if S T is selected by some particular strategies (e.g., ContrId and ProxContrId presented in Section 4), |Φ * R (S R , S T )| is guaranteed to be non-increasing w.r.t. S T .</p>
        <p>We show the non-monotonicity in the general case by giving an example. Consider the network in Fig. 2. spreading T from node 6 (i.e., S T = {6}), node 5 will reconsider its decision to adopt T, which results in Φ * R = {1, 2} and Φ * T = {5, 6}. Such an addition of S T decreases the spread of R. However, if set S T = {4}, we have Φ * R = {1, 2, 5, 6, 3} and Φ * T = {4}. Node 3 gets an additional influence from node 4 but adopts R based on its decision threshold. This implies that adding nodes to S T may increase the spread of R.We show the non-monotonicity in the general case by giving an example. Consider the network in Fig. 2. spreading T from node 6 (i.e., S T = {6}), node 5 will reconsider its decision to adopt T, which results in Φ * R = {1, 2} and Φ * T = {5, 6}. Such an addition of S T decreases the spread of R. However, if set S T = {4}, we have Φ * R = {1, 2, 5, 6, 3} and Φ * T = {4}. Node 3 gets an additional influence from node 4 but adopts R based on its decision threshold. This implies that adding nodes to S T may increase the spread of R.</p>
        <p>In this part, we first present a characterization of the steady state based on the notion of cohesiveness which was formalized in [1] for the LTM. We can see from the state transition graph from Fig. 1 that, each influenced node will become active (either R-active or T-active) eventually. Therefore, the influence stage is exactly equivalent to the activation process of the LTM. Then, if we define the total seed set S = S R ∪ S T , the set of final adopters can be characterized based on the notion of cohesiveness.In this part, we first present a characterization of the steady state based on the notion of cohesiveness which was formalized in [1] for the LTM. We can see from the state transition graph from Fig. 1 that, each influenced node will become active (either R-active or T-active) eventually. Therefore, the influence stage is exactly equivalent to the activation process of the LTM. Then, if we define the total seed set S = S R ∪ S T , the set of final adopters can be characterized based on the notion of cohesiveness.</p>
        <p>⋄ This states that a set X ⊆ V is cohesive if for all u ∈ X, the sum of the influence coming from set X exceeds 1θ u , which is equivalent to say that the sum of the influence that does not come from set X is below its influence threshold, i.e.,⋄ This states that a set X ⊆ V is cohesive if for all u ∈ X, the sum of the influence coming from set X exceeds 1θ u , which is equivalent to say that the sum of the influence that does not come from set X is below its influence threshold, i.e.,</p>
        <p>Given a cohesive set X, if no node in X belongs to the total seed set S = S R ∪S T , then all nodes in X will never become active (or influenced) at the following steps. This leads to the following characterization of the set of final adopters.Given a cohesive set X, if no node in X belongs to the total seed set S = S R ∪S T , then all nodes in X will never become active (or influenced) at the following steps. This leads to the following characterization of the set of final adopters.</p>
        <p>The set of final adopters is:The set of final adopters is:</p>
        <p>Example 2.1 Consider again the simple LT1DT shown in Fig. 2, where setExample 2.1 Consider again the simple LT1DT shown in Fig. 2, where set</p>
        <p>The set of final adopters Φ * can be computed by simulating the evolution. Here, Lemma 2.1 provides a direct way to compute Φ * without necessity to determine the evolution of the network. We refer to [44] for the computation of Φ * by solving an integer linear programming.The set of final adopters Φ * can be computed by simulating the evolution. Here, Lemma 2.1 provides a direct way to compute Φ * without necessity to determine the evolution of the network. We refer to [44] for the computation of Φ * by solving an integer linear programming.</p>
        <p>Based on the characterization of the steady state, we can extract an active subgraph Ĝ( V , Ê) from the original graph G(V, E) by keeping all nodes in Φ * and their relationships such that The LT1DT model is a competitive diffusion model that allows a state transition from R-active to Tactive but not in the opposite direction. We believe that this model can be used to describe many different practical cases, e.g., product adoption, rumor spread, etc.Based on the characterization of the steady state, we can extract an active subgraph Ĝ( V , Ê) from the original graph G(V, E) by keeping all nodes in Φ * and their relationships such that The LT1DT model is a competitive diffusion model that allows a state transition from R-active to Tactive but not in the opposite direction. We believe that this model can be used to describe many different practical cases, e.g., product adoption, rumor spread, etc.</p>
        <p>For example, in product adoption, items R and T can be interpreted as two similar products with low quality and high quality, respectively. A user adopting the low quality product may change its mind and pass to the high quality product when he compares them. However, it is hard to influence a user who uses a high quality product to adopt a low quality product. After studying a series of product choices, Macdonald and Sharp [28] found that consumers tend to select the high-quality brand among several totally unknown brands.For example, in product adoption, items R and T can be interpreted as two similar products with low quality and high quality, respectively. A user adopting the low quality product may change its mind and pass to the high quality product when he compares them. However, it is hard to influence a user who uses a high quality product to adopt a low quality product. After studying a series of product choices, Macdonald and Sharp [28] found that consumers tend to select the high-quality brand among several totally unknown brands.</p>
        <p>Similarly in the case of rumor spread, R represents the rumor and T represents the truth. An individual that adopts the rumor may reconsider his belief, while an individual that adopts the truth will become immune to the rumor [40]. We should mention here that in this case, the term rumor seeds, is not equivalent to rumor sources, which however means that the set of nodes has adopted the rumor when the rumor is detected.Similarly in the case of rumor spread, R represents the rumor and T represents the truth. An individual that adopts the rumor may reconsider his belief, while an individual that adopts the truth will become immune to the rumor [40]. We should mention here that in this case, the term rumor seeds, is not equivalent to rumor sources, which however means that the set of nodes has adopted the rumor when the rumor is detected.</p>
        <p>In the following part, we focus on the application of rumor spread, a problem of rumor containment. Rumors may cause panic or lead people to wrong decisions, therefore it is vital to study how to control the rumor spread. Rather than cutting some connections in the network or censoring the opinions expressed by the individuals, we identify individuals to seed the truth so as to reduce people's vulnerabilities to rumor. Under the framework of the LT1DT, in this section we study the problem of minimizing rumor spread.In the following part, we focus on the application of rumor spread, a problem of rumor containment. Rumors may cause panic or lead people to wrong decisions, therefore it is vital to study how to control the rumor spread. Rather than cutting some connections in the network or censoring the opinions expressed by the individuals, we identify individuals to seed the truth so as to reduce people's vulnerabilities to rumor. Under the framework of the LT1DT, in this section we study the problem of minimizing rumor spread.</p>
        <p>The problem of rumor containment is to select a suitable set of nodes for spreading truth to minimize the number of nodes eventually accepting the rumor. We then formalize the problem as follows.The problem of rumor containment is to select a suitable set of nodes for spreading truth to minimize the number of nodes eventually accepting the rumor. We then formalize the problem as follows.</p>
        <p>Problem 3.1 (MRS: Minimizing Rumor Spread) Consider a LT1DT model represented by a network N = (G(V, E), W, θ, θ R ) with rumor seed set S R . Given an integer k, find in V \ S R a seed set for the truth S T = X of cardinality less than or equal to k such that the cardinality of R-final adopters is minimized, i.e., minProblem 3.1 (MRS: Minimizing Rumor Spread) Consider a LT1DT model represented by a network N = (G(V, E), W, θ, θ R ) with rumor seed set S R . Given an integer k, find in V \ S R a seed set for the truth S T = X of cardinality less than or equal to k such that the cardinality of R-final adopters is minimized, i.e., min</p>
        <p>The MRS problem has a combinatorial nature and finding the optimal solution requires an exhaustive search. In the following we show the hardness of the MRS problem. PROOF. To prove the NP-hardness of the MRS problem, it is sufficient to show that the classical Maximum Coverage Problem (MCP) which is known to be NP-hard can be reduced to the MRS problem under the LT1DT. To do this, we employ a similar approach in [47] to construct an instance of MRS following the definition of MCP.The MRS problem has a combinatorial nature and finding the optimal solution requires an exhaustive search. In the following we show the hardness of the MRS problem. PROOF. To prove the NP-hardness of the MRS problem, it is sufficient to show that the classical Maximum Coverage Problem (MCP) which is known to be NP-hard can be reduced to the MRS problem under the LT1DT. To do this, we employ a similar approach in [47] to construct an instance of MRS following the definition of MCP.</p>
        <p>and a collection of sets X = {X 1 , X 2 , • • • , X p } where X i is a set of elements o j ∈ O. The sets may have some elements in common. Given a positive constant l, find a subset X ′ ⊂ X of cardinality less than or equal to l such that the number of elementsand a collection of sets X = {X 1 , X 2 , • • • , X p } where X i is a set of elements o j ∈ O. The sets may have some elements in common. Given a positive constant l, find a subset X ′ ⊂ X of cardinality less than or equal to l such that the number of elements</p>
        <p>The decision version of the MCP is to answer whether there exists a subset X ′ ⊂ X of size l which can cover at least λ elements in O where λ ≤ q is a positive integer. The decision version of the MRS problem is to answer whether there exists a subset S T ⊂ V of size k such that the number of R-active nodes is at most ρ where ρ is a positive integer. In the following we show that the MCP problem can be reduced to the MRS problem. To prove the result, we show that for any instance of the MCP, an equivalent instance of the MRS can be constructed. Given an instance I = (O, X , l, λ) of the MCP, we construct a corresponding instance M = (V, E, θ, θ R , W, S R , k, ρ) of the MRS as follows. A simple example shown in Fig. 4 is used to explain the construction. Beginning with 0 node, we add a node u i for each subset X i ∈ X , a node o j for each element in O, and a special node x. Then we connect x to each node o j and add an edge (u i , o j ) for each o j ∈ X i . Take node o 3 as an example. It has at least three incoming arcs from u 1 , u 2 , u p which means that o i exists in the corresponding subsets X 1 , X 2 , X p at least. All nodes o i are given the same influence threshold θ oi = 1/q and the decision threshold θ R oi = do i q-1 where the positive integer d oi is the number of subsets X i to which element o i belongs. We do not care about the thresholds of the source nodes u i and x. The weights of arcs from node x to node o i are set to 1/q, i.e., W (x, o i ) = 1/q. The weights of arcs from u j to o i are homogeneous and set to (1 -1/q)/d oi , i.e., W (u j , o i ) = (1 -1/q)/d oi . Then, for each o i , the sum of the weights incoming from x and u j is 1. Finally, set S R = {x}, k = l, and ρ = qλ + 1. We then show the equivalence between the instances I and M.The decision version of the MCP is to answer whether there exists a subset X ′ ⊂ X of size l which can cover at least λ elements in O where λ ≤ q is a positive integer. The decision version of the MRS problem is to answer whether there exists a subset S T ⊂ V of size k such that the number of R-active nodes is at most ρ where ρ is a positive integer. In the following we show that the MCP problem can be reduced to the MRS problem. To prove the result, we show that for any instance of the MCP, an equivalent instance of the MRS can be constructed. Given an instance I = (O, X , l, λ) of the MCP, we construct a corresponding instance M = (V, E, θ, θ R , W, S R , k, ρ) of the MRS as follows. A simple example shown in Fig. 4 is used to explain the construction. Beginning with 0 node, we add a node u i for each subset X i ∈ X , a node o j for each element in O, and a special node x. Then we connect x to each node o j and add an edge (u i , o j ) for each o j ∈ X i . Take node o 3 as an example. It has at least three incoming arcs from u 1 , u 2 , u p which means that o i exists in the corresponding subsets X 1 , X 2 , X p at least. All nodes o i are given the same influence threshold θ oi = 1/q and the decision threshold θ R oi = do i q-1 where the positive integer d oi is the number of subsets X i to which element o i belongs. We do not care about the thresholds of the source nodes u i and x. The weights of arcs from node x to node o i are set to 1/q, i.e., W (x, o i ) = 1/q. The weights of arcs from u j to o i are homogeneous and set to (1 -1/q)/d oi , i.e., W (u j , o i ) = (1 -1/q)/d oi . Then, for each o i , the sum of the weights incoming from x and u j is 1. Finally, set S R = {x}, k = l, and ρ = qλ + 1. We then show the equivalence between the instances I and M.</p>
        <p>Assume that X * is a solution to the instance I, i.e., |X * | ≤ l and it can cover at least λ elements in O. By our construction, we can select all the nodes u j corresponding to subset X j ∈ X * as truth seed set S T . Therefore, |S T | = k = l. Since X * can cover at least λ elements o i in O, then from S T there will be at least λ nodes in O believing the truth. This is because for any covered o i , let d * oi be the number of subsets X j ∈ X * to which o i belongs, then we have 1 ≤ d * oi ≤ d oi . Then, the total influence from both rumor and truth is 1/q + d * oi ( 1-1/q do i ) ≥ θ oi = 1/q. The sum of weights from its R-active neighbors is 1/q.Assume that X * is a solution to the instance I, i.e., |X * | ≤ l and it can cover at least λ elements in O. By our construction, we can select all the nodes u j corresponding to subset X j ∈ X * as truth seed set S T . Therefore, |S T | = k = l. Since X * can cover at least λ elements o i in O, then from S T there will be at least λ nodes in O believing the truth. This is because for any covered o i , let d * oi be the number of subsets X j ∈ X * to which o i belongs, then we have 1 ≤ d * oi ≤ d oi . Then, the total influence from both rumor and truth is 1/q + d * oi ( 1-1/q do i ) ≥ θ oi = 1/q. The sum of weights from its R-active neighbors is 1/q.</p>
        <p>Then, o i will believe the truth sinceThen, o i will believe the truth since</p>
        <p>Therefore, the cardinality of T-final adopter set is at least λ + k in the MRS problem and the cardinality of R-final adopter set is at most ρ = qλ + 1.Therefore, the cardinality of T-final adopter set is at least λ + k in the MRS problem and the cardinality of R-final adopter set is at most ρ = qλ + 1.</p>
        <p>T is a solution to the instance M, i.e., |S * T | = k such that the cardinality of R-final adopter set is at most ρ. This implies that the cardinality of T-final adopter set is at least q -(ρ -1) + k. Then X * can be a collection of subset X i corresponding to those u i ∈ S * T . Therefore, X * has size k since l = k according to the assumption and it can cover at least qρ + 1 elements in O.T is a solution to the instance M, i.e., |S * T | = k such that the cardinality of R-final adopter set is at most ρ. This implies that the cardinality of T-final adopter set is at least q -(ρ -1) + k. Then X * can be a collection of subset X i corresponding to those u i ∈ S * T . Therefore, X * has size k since l = k according to the assumption and it can cover at least qρ + 1 elements in O.</p>
        <p>Given that the MRS problem is NP-hard, we present some heuristic approaches to solve it. They can be classified into two categories, unconstrained and constrained, according to the search space for choosing truth seeds. We first present three different unconstrained heuristics and then give their constrained versions where we restrict the search space to be a subnetwork instead of the whole network.Given that the MRS problem is NP-hard, we present some heuristic approaches to solve it. They can be classified into two categories, unconstrained and constrained, according to the search space for choosing truth seeds. We first present three different unconstrained heuristics and then give their constrained versions where we restrict the search space to be a subnetwork instead of the whole network.</p>
        <p>The unconstrained approaches can select any node to be a truth seed in set V \ S R according to specific judgements.The unconstrained approaches can select any node to be a truth seed in set V \ S R according to specific judgements.</p>
        <p>A greedy approach (also called hill-climbing approach) is a heuristic optimization paradigm that iteratively makes the locally optimal choice with the hope of finding a global optimal solution.A greedy approach (also called hill-climbing approach) is a heuristic optimization paradigm that iteratively makes the locally optimal choice with the hope of finding a global optimal solution.</p>
        <p>In the MinGreedy shown in Algorithm 1, at each iteration we add to the truth seed set S T the node u which maximally decreases rumor spread (line 5). The node selection process stops when k nodes have been selected or when the addition of a node to S T does not reduce the rumor spread (line 7). In each iteration, for each candidate node w ∈ V \ S R we need to compute the corresponding set of final adopters which may require to check every node if it is activated and this can be done in time O(nd). Therefore, the time complexity of 
            <rs type="software">MinGreedy</rs> is O(kdn 2 ).
        </p>
        <p>In network science, it is of interest to determine the relative importance of nodes which can be measured by centrality scores [6]. There are varieties of centrality scores, e.g., degree centrality, eigenvector centrality, pagerank centrality, etc. In this paper, we use pagerank centrality which is a well-known algorithm adopted by 
            <rs type="software">GOOGLE</rs> for ranking web pages. It is also widely used to solve influence maximization problems in social networks. We use the teleportation model [19] to compute pagerank values of all nodes in a network according to Eq. ( 6) where p ∈ (0, 1) n denotes the pagerank vector such that n i=1 p i = 1, p i denoting the pagerank value of node i. And Â in Eq. ( 6) is the scaled adjacency matrix in which Â(i, j) = A(i, j)/1 T A(:, j) where A is the adjacency matrix of a given graph. In the model, the restart probability γ is set to 0.15.
        </p>
        <p>In order to contain the rumor spread, PageRank chooses k nodes in V \ S R with highest pagerank values Algorithm 1 MinGreedyIn order to contain the rumor spread, PageRank chooses k nodes in V \ S R with highest pagerank values Algorithm 1 MinGreedy</p>
        <p>if ∆ &gt; 0 then 8:if ∆ &gt; 0 then 8:</p>
        <p>S T ← S T ∪ {u}. break.S T ← S T ∪ {u}. break.</p>
        <p>end if 12: end while 13: Return S T .end if 12: end while 13: Return S T .</p>
        <p>to serve as the truth seeds.to serve as the truth seeds.</p>
        <p>Since the scaled adjacency matrix Â is a sparse matrix with average d non-zero elements in each row (so called average degree of the network), the multiplication of the matrix and a vector can be done in time O(nd). Therefore, the computation of pagerank values requires time O(n(d + 1)I) where I is the number of iterations for p converging to a reasonable approximation. Selecting the first k nodes with highest pagerank values in V \ S R requires time O(kn). Overall, the time complexity of PageRank is O(In(d + 1) + kn).Since the scaled adjacency matrix Â is a sparse matrix with average d non-zero elements in each row (so called average degree of the network), the multiplication of the matrix and a vector can be done in time O(nd). Therefore, the computation of pagerank values requires time O(n(d + 1)I) where I is the number of iterations for p converging to a reasonable approximation. Selecting the first k nodes with highest pagerank values in V \ S R requires time O(kn). Overall, the time complexity of PageRank is O(In(d + 1) + kn).</p>
        <p>
            <rs type="software">PageRank</rs>, regardless of the diffusion dynamics of the considered diffusion model, solely depends on the network structure. Here, we present a novel heuristic ContrId (short for Contributors Identification) which, based on the dynamics of rumor spread, tries to identify which nodes contribute most (called contributors) to the rumor spread and interrupt the important paths through which the rumor will spread from the rumor seeds to the remaining network.
        </p>
        <p>The following proposed way to measure a node's contribution to the rumor spread is motivated by observations under the LTM model. The spread of rumor evolves in discrete steps till no more nodes can be activated. A node activated at time step t immediately spreads its influence to its out-neighbors which may be activated in later steps. Therefore, the contribution of node v which is activated at time t v can be defined as the number of its out-neighbors that are activated at any time t &gt; t v .The following proposed way to measure a node's contribution to the rumor spread is motivated by observations under the LTM model. The spread of rumor evolves in discrete steps till no more nodes can be activated. A node activated at time step t immediately spreads its influence to its out-neighbors which may be activated in later steps. Therefore, the contribution of node v which is activated at time t v can be defined as the number of its out-neighbors that are activated at any time t &gt; t v .</p>
        <p>We first simulate the rumor spreads from S R with S T = ∅ and record the set of nodes activated at every step from step 1 to step T s at which the network enters a steady state, i.e., φ R t for all t = 1, 2, • • • , T s . Let L denote the length of the longest simple path in the network, we then have T s ≤ L since the diffusion process requires at most L time steps. Now, for each node v ∈ φ R t , its contribution denoted as Ctr(v) can be formalized asWe first simulate the rumor spreads from S R with S T = ∅ and record the set of nodes activated at every step from step 1 to step T s at which the network enters a steady state, i.e., φ R t for all t = 1, 2, • • • , T s . Let L denote the length of the longest simple path in the network, we then have T s ≤ L since the diffusion process requires at most L time steps. Now, for each node v ∈ φ R t , its contribution denoted as Ctr(v) can be formalized as</p>
        <p>For the completeness of the definition on node's contribution, we set the contribution of all inactive nodes as 0.For the completeness of the definition on node's contribution, we set the contribution of all inactive nodes as 0.</p>
        <p>ContrId selects the first k contributors ranked by their contributions to rumor spread Ctr(v) and this can be done in time O(kn). Computation time O(nd) is required to simulate the rumor spread from S R . Therefore, the time complexity of ContrId is O(n(d + k)).ContrId selects the first k contributors ranked by their contributions to rumor spread Ctr(v) and this can be done in time O(kn). Computation time O(nd) is required to simulate the rumor spread from S R . Therefore, the time complexity of ContrId is O(n(d + k)).</p>
        <p>In the previous part, we present three heuristic approaches that select k truth seeds in V \S R . In this part, we also consider their constrained versions (called 
            <rs type="software">ProxMinGreedy</rs>, 
            <rs type="software">ProxPageRank</rs>, and 
            <rs type="software">ProxContrId</rs>) by restricting the search space to the proximity of the rumor seed set. We call this space S R -proximity space and denote it as
        </p>
        <p>The idea is that of blocking the influential paths from the rumor seeds to the remaining network. In other words, this measure may reduce the number of nodes which are reachable from S R in corresponding active subgraphs. For instance, consider Example 2.3, if S T = {3} which is the out-neighbor set of S R = {1} then R SR ( Ĝ) = {1} instead of {1,2,3} (when S T = {4}). We will see from experimental results presented in Section 5 that the constrained versions perform better than the unconstrained approaches in terms of both computation speed and rumor containment.The idea is that of blocking the influential paths from the rumor seeds to the remaining network. In other words, this measure may reduce the number of nodes which are reachable from S R in corresponding active subgraphs. For instance, consider Example 2.3, if S T = {3} which is the out-neighbor set of S R = {1} then R SR ( Ĝ) = {1} instead of {1,2,3} (when S T = {4}). We will see from experimental results presented in Section 5 that the constrained versions perform better than the unconstrained approaches in terms of both computation speed and rumor containment.</p>
        <p>
            <rs type="software">ProxMinGreedy</rs> iteratively selects k nodes in N out (S R ) with the minimal gain of rumor spread to serve as the truth seeds. We use Eq. ( 8) to replace line 5 in Algorithm 1, i.e.,
        </p>
        <p>The resulting ProxMinGreedy has lower time complexity than 
            <rs type="software">MinGreedy</rs>. The time complexity in average should be O(k|S R |d 2 n) where |S R | denotes the size of rumor seed set and d denotes the average degree of the network, therefore |S R |d is the size of the S R -proximity space.
        </p>
        <p>
            <rs type="software">ProxPageRank</rs> selects k nodes in N out (S R ) with highest pagerank values to serve as the truth seeds, which results in time complexity O(Rn(d + 1) + k|S R |d).
        </p>
        <p>ProxContrId selects k nodes in N out (S R ) with highest contributions to serve as the truth seeds, which results in time complexity O(nd + k|S R |d). The constrained approaches have lower time complexity than their unconstrained version thanks to the smaller search space. The time complexity of all the above proposed approaches is summarized in Table 1. Besides MinGreedy, the others have the same level of time complexity which grows linearly with n. Introducing the proximity effect can reduce the time complexity of greedy approach from O(n 2 ) to O(n). The idea of restricting the search space to S R -proximity space can be also applied to restricting the search space to any possible subset of nodes, e.g., the set of nodes that can be easily convinced to adopt the truth.ProxContrId selects k nodes in N out (S R ) with highest contributions to serve as the truth seeds, which results in time complexity O(nd + k|S R |d). The constrained approaches have lower time complexity than their unconstrained version thanks to the smaller search space. The time complexity of all the above proposed approaches is summarized in Table 1. Besides MinGreedy, the others have the same level of time complexity which grows linearly with n. Introducing the proximity effect can reduce the time complexity of greedy approach from O(n 2 ) to O(n). The idea of restricting the search space to S R -proximity space can be also applied to restricting the search space to any possible subset of nodes, e.g., the set of nodes that can be easily convinced to adopt the truth.</p>
        <p>In Section 2.3, we have shown that, given a rumor seed set S R , the R-adoption function may increase as nodes are added to the truth seed set S T . In this subsection, we show that the R-adoption function is guaranteed to be non-increasing by some particular truth seed set selection strategies. PROOF. This result follows from the constraint shown in line 7 of Algorithm 1 which ensures that a candidate seed can only be added to S T if adding this seed decreases the rumor spread. PROOF. What we need to prove is that for any two seed sets S 1 T and S 2 T selected by ContrId (or ProxContrId) such that S 1In Section 2.3, we have shown that, given a rumor seed set S R , the R-adoption function may increase as nodes are added to the truth seed set S T . In this subsection, we show that the R-adoption function is guaranteed to be non-increasing by some particular truth seed set selection strategies. PROOF. This result follows from the constraint shown in line 7 of Algorithm 1 which ensures that a candidate seed can only be added to S T if adding this seed decreases the rumor spread. PROOF. What we need to prove is that for any two seed sets S 1 T and S 2 T selected by ContrId (or ProxContrId) such that S 1</p>
        <p>Assume that Ĝ0 ( V 0 , Ê0 ) denotes the active subgraph extracted from G(V, E) given S R and S T = ∅. Since ContrId (or ProxContrId) chooses truth seeds in Ĝ0 , the addition of a seed set S T selected by ContrId will not change the active subgraph, i.e., Φ * (S R , ∅) = Φ * (S R , S T ). Therefore, it is equivalent to prove that for any However, such monotonicity guarantee cannot be achieved by PageRank and 
            <rs type="software">ProxPageRank</rs>. This will be confirmed by the experimental results in Section 5.
        </p>
        <p>We performed a series of experiments on two synthetic datasets and two real-world datasets to evaluate the effectiveness of the heuristics solving the MRS problem under the proposed LT1DT. The synthetic datasets are the following.We performed a series of experiments on two synthetic datasets and two real-world datasets to evaluate the effectiveness of the heuristics solving the MRS problem under the proposed LT1DT. The synthetic datasets are the following.</p>
        <p>• Scale-free network: A scale-free network is a network with power-law degree distribution. A few examples of networks claimed to be scale-free include collaboration networks, protein-protein interaction networks, etc. We adopt the Barabási-Albert model [2] to generate a scale-free network with 500 nodes. • Small-world network: A small-world network is a network where most nodes are not linked with others, but the neighbors of a certain node are likely to be linked with each other. Besides, most nodes in the network can reach any other node through a few steps or hops. Many real-world networks exhibit small-world properties, e.g., electronic power grids, neural networks, social influence networks, etc. A small-world network with 500 nodes is generated by adopting the Watts-Strogatz model [39] and setting the mean degree of a regular lattice to 4 and the rewiring probability β = 0.2.• Scale-free network: A scale-free network is a network with power-law degree distribution. A few examples of networks claimed to be scale-free include collaboration networks, protein-protein interaction networks, etc. We adopt the Barabási-Albert model [2] to generate a scale-free network with 500 nodes. • Small-world network: A small-world network is a network where most nodes are not linked with others, but the neighbors of a certain node are likely to be linked with each other. Besides, most nodes in the network can reach any other node through a few steps or hops. Many real-world networks exhibit small-world properties, e.g., electronic power grids, neural networks, social influence networks, etc. A small-world network with 500 nodes is generated by adopting the Watts-Strogatz model [39] and setting the mean degree of a regular lattice to 4 and the rewiring probability β = 0.2.</p>
        <p>The real-world datasets are the following.The real-world datasets are the following.</p>
        <p>• NetScience: NetScience is the co-authorship of researchers who work on network theory and experiments, compiled by Newman [30]. • US-power: US-power is the topology of the Western States power grid of USA, compiled by Watts and Strogatz [39].• NetScience: NetScience is the co-authorship of researchers who work on network theory and experiments, compiled by Newman [30]. • US-power: US-power is the topology of the Western States power grid of USA, compiled by Watts and Strogatz [39].</p>
        <p>We summarize in Table 2 the statistics of the benchmarks. The networks are all undirected, and thus we considered the arcs in both directions. For achieving a good estimate of the effectiveness of the tested approaches, we run each experiment on 100 different randomly generated LT1DT networks with the same network structure G(V, E) and influence weights W but different influence and decision threshold values θ u and θ R u that are selected in (0, 1] uniformly at random. We set the influence weight W (u, v) = 1/|N in v | for all u ∈ N in v and v ∈ V . Then we take the average cardinality of Φ * R and Φ * T over the 100 runs. In addition, the set of original spreaders for the rumor should be given. On all networks, we set |S R | = 3 and let |S T | range from 1 to 10. To determine the rumor seeds, we adopt the following two different selection strategies.We summarize in Table 2 the statistics of the benchmarks. The networks are all undirected, and thus we considered the arcs in both directions. For achieving a good estimate of the effectiveness of the tested approaches, we run each experiment on 100 different randomly generated LT1DT networks with the same network structure G(V, E) and influence weights W but different influence and decision threshold values θ u and θ R u that are selected in (0, 1] uniformly at random. We set the influence weight W (u, v) = 1/|N in v | for all u ∈ N in v and v ∈ V . Then we take the average cardinality of Φ * R and Φ * T over the 100 runs. In addition, the set of original spreaders for the rumor should be given. On all networks, we set |S R | = 3 and let |S T | range from 1 to 10. To determine the rumor seeds, we adopt the following two different selection strategies.</p>
        <p>• Random: rumor spreads from three nodes selected randomly.• Random: rumor spreads from three nodes selected randomly.</p>
        <p>• Degree: rumor spreads from three nodes with highest degrees.• Degree: rumor spreads from three nodes with highest degrees.</p>
        <p>All experiments are performed on a 2.5 GHz Intel(R) Core(TM) i5-6300U CPU and 8GB memory and all 
            <rs type="software">code</rs> is written in C++.
        </p>
        <p>We evaluate the performance of the approaches presented in Section 4 in terms of rumor containment, computation time and scalability. Note that since the MinGreedy is time-consuming in large networks, we do not test it on network US-power. ank outperforms PageRank by 29% (resp., 37%, 41%, 36%) and ProxContrId outperforms ContrId by 22% (resp., 26%, 28%, 30%). • When S R is selected by Degree, in Scale-free (resp., Small-world, NetScience, US-power), ProxPageRank outperforms PageRank by 2% (resp., 21%, 21.7%, 10.8%) and ProxContrId outperforms ContrId by 12% (resp., 16.5%, 11.9%, 12.6%).We evaluate the performance of the approaches presented in Section 4 in terms of rumor containment, computation time and scalability. Note that since the MinGreedy is time-consuming in large networks, we do not test it on network US-power. ank outperforms PageRank by 29% (resp., 37%, 41%, 36%) and ProxContrId outperforms ContrId by 22% (resp., 26%, 28%, 30%). • When S R is selected by Degree, in Scale-free (resp., Small-world, NetScience, US-power), ProxPageRank outperforms PageRank by 2% (resp., 21%, 21.7%, 10.8%) and ProxContrId outperforms ContrId by 12% (resp., 16.5%, 11.9%, 12.6%).</p>
        <p>However, the MinGreedy and ProxMinGreedy almost perform the same. We can explain this phenomenon by comparing the truth seeds placement between MinGreedy and ProxMinGreedy. Let us take network Scale-free as an example on selecting 10 truth seeds, set all θ v = 0.5, θ R v = 0.3, and let S R be selected by Degree. By 
            <rs type="software">ProxMinGreedy</rs>, we have S T = {85, 319, 5, 9, 16, 54, 87, 95, 100, 147} where the number is node's label. Then by MinGreedy, we have S T = {85, 319, 5, 9, 16, 54, 87, 95, 100, 147} which is the same as selected by 
            <rs type="software">ProxMinGreedy</rs>. The result shows that MinGreedy prefers to locate the truth seeds at the S R -proximity space as well.
        </p>
        <p>Diffusion dynamics based approach performs better than centrality based approach: PageRank performs not as well as ContrId and MinGreedy and even sometimes does not help to contain the rumor spread. This fact can be seen from up-and-down lines for PageRank in Figs. 5 and6, which reflects the non-monotonicity of the LT1DT model. This is because 
            <rs type="software">PageRank</rs> directly exploits the network structure and ignores the location of the rumor seeds. The nodes with high pagerank values sometimes are far away from the rumor seeds and then rumor and truth spread in different parts of the network.
        </p>
        <p>• When S R is selected by Random, ContrId performs better than PageRank, i.e., 47% (resp., 56%, 55%, 54%) in Scale-free (resp., Small-world, NetScience, US-power), since it tries to target the nodes that play important role in rumor spreading. ProxContrId outperforms ProxPageRank by 40% (resp., 46%, 45%, 50%) in Scale-free (resp., Small-world, NetScience, US-power). In Scale-free, ProxContrId performs as well as ProxMinGreedy. In Small-world (resp., NetScience, US-power) ProxMinGreedy outperforms ProxContrId 5.7% (resp., 16.6%, 14%). • When S R is selected by Degree, ContrId performs better than PageRank, i.e., 10% (resp., 47%, 28.9%, 25.2%) in Scale-free (resp., Small-world, NetScience, US-power). ProxContrId outperforms ProxPageRank by 19.6% (resp., 42.5%, 19.1%, 27%) in Scale-free (resp., Small-world, NetScience, US-power). In Scale-free, ProxContrId performs as well as ProxMinGreedy. In Small-world (resp., NetScience, USpower) ProxMinGreedy outperforms ProxContrId 5% (resp., 13.5%, 8%).• When S R is selected by Random, ContrId performs better than PageRank, i.e., 47% (resp., 56%, 55%, 54%) in Scale-free (resp., Small-world, NetScience, US-power), since it tries to target the nodes that play important role in rumor spreading. ProxContrId outperforms ProxPageRank by 40% (resp., 46%, 45%, 50%) in Scale-free (resp., Small-world, NetScience, US-power). In Scale-free, ProxContrId performs as well as ProxMinGreedy. In Small-world (resp., NetScience, US-power) ProxMinGreedy outperforms ProxContrId 5.7% (resp., 16.6%, 14%). • When S R is selected by Degree, ContrId performs better than PageRank, i.e., 10% (resp., 47%, 28.9%, 25.2%) in Scale-free (resp., Small-world, NetScience, US-power). ProxContrId outperforms ProxPageRank by 19.6% (resp., 42.5%, 19.1%, 27%) in Scale-free (resp., Small-world, NetScience, US-power). In Scale-free, ProxContrId performs as well as ProxMinGreedy. In Small-world (resp., NetScience, USpower) ProxMinGreedy outperforms ProxContrId 5% (resp., 13.5%, 8%).</p>
        <p>The comparisons of the approaches on the performance of rumor containment are summarized in Table 3.The comparisons of the approaches on the performance of rumor containment are summarized in Table 3.</p>
        <p>From Figs. 5 and6, it can also be observed that it is much harder to contain rumor when the rumor spreads from nodes with large degrees compared with rumor spreading from nodes randomly selected.From Figs. 5 and6, it can also be observed that it is much harder to contain rumor when the rumor spreads from nodes with large degrees compared with rumor spreading from nodes randomly selected.</p>
        <p>As we can see in Fig. 5a, spreading truth from 5 nodes selected by ProxContrId and 
            <rs type="software">ProxMinGreedy</rs> can completely contain the rumor spread. However, in Fig. 6a, the rumor spread can only be reduced by about 37.5% spreading truth from 10 nodes selected by ProxContrId and 
            <rs type="software">ProxMinGreedy</rs> with the best performance.
        </p>
        <p>From the truth spread in Figs. 7 and8, spreading truth from the nodes selected by PageRank normally produces the largest set of nodes that adopt the truth, which reflects the fact that PageRank performs well in solving influence maximization problem. Note, however, that the goal of our study is not truth maximization but rumor minimization. We can also observe that information can spread further in networks with lower clustering coefficient, which is consistent with the results in [1]. on the left of / is for the case when SR is selected by Random, while the time on the right is for the case when SR is selected by Degree.)From the truth spread in Figs. 7 and8, spreading truth from the nodes selected by PageRank normally produces the largest set of nodes that adopt the truth, which reflects the fact that PageRank performs well in solving influence maximization problem. Note, however, that the goal of our study is not truth maximization but rumor minimization. We can also observe that information can spread further in networks with lower clustering coefficient, which is consistent with the results in [1]. on the left of / is for the case when SR is selected by Random, while the time on the right is for the case when SR is selected by Degree.)</p>
        <p>The average running time over 100 runs for all the heuristics are illustrated in Table 4. Selecting truth seeds in S R -proximity space obviously speeds up the seed location process, for instance, 
            <rs type="software">ProxMinGreedy</rs> runs 40 times faster than 
            <rs type="software">MinGreedy</rs> in NetScience when the rumor seed set is selected by Degree. We believe that the gap must increase with n. In terms of rumor containment, the 
            <rs type="software">ProxMinGreedy</rs> outperforms the ProxContrId a bit in some networks, but it is three orders of magnitude slower than the ProxContrId.
        </p>
        <p>Finally, an experimental study on synthetic small-world networks with different number of nodes is carried out to test the scalability of the constrained approaches which outperform their unconstrained versions in terms of both the computation speed and the effectiveness of rumor containment. The networks are generated by Watts-Strogatz model [39] with the number of nodes from 0.5K to 4K where the mean degree and rewiring probability are set to 4 and 0.2, respectively. We select 3 rumor seeds selected by Degree in every network and choose 10 nodes as the truth seeds to contain the rumor spread. We average the running time over 100 runs with different threshold values. The result is shown in Fig. 9, which suggests that the ProxContrId are two and three orders of magnitude faster than the 
            <rs type="software">ProxPageRank</rs> and 
            <rs type="software">ProxMinGreedy</rs>.
        </p>
        <p>We have proposed a competitive and generalized version of the simple Linear Threshold model which captures practical situations in which rumor and truth compete in a same network. Based on the notion of cohesiveness, we have provided a lower bound for the T-adoption function and an upper bound for the R-adoption function. We have addressed the problem of minimizing rumor spread (MRS) which is proved to be NP-hard under our generalized model. We have also presented three different heuristics and defined their constrained versions to highlight the proximity effect for solving the MRS problem. The novel heuristic approaches ContrId and ProxContrId can guarantee the monotonicity for the LT1DT. Finally, simulations were carried out under four different networks. Experimental results have shown that diffusion dynamics based approach (ContrId) outperforms centrality based approach (PageRank) with the same level of computation complexity which grows linearly with the number of nodes n, and therefore can scale well to large networks. By introducing the proximity effect, ContrId performs as well as MinGreedy but runs much faster than MinGreedy.We have proposed a competitive and generalized version of the simple Linear Threshold model which captures practical situations in which rumor and truth compete in a same network. Based on the notion of cohesiveness, we have provided a lower bound for the T-adoption function and an upper bound for the R-adoption function. We have addressed the problem of minimizing rumor spread (MRS) which is proved to be NP-hard under our generalized model. We have also presented three different heuristics and defined their constrained versions to highlight the proximity effect for solving the MRS problem. The novel heuristic approaches ContrId and ProxContrId can guarantee the monotonicity for the LT1DT. Finally, simulations were carried out under four different networks. Experimental results have shown that diffusion dynamics based approach (ContrId) outperforms centrality based approach (PageRank) with the same level of computation complexity which grows linearly with the number of nodes n, and therefore can scale well to large networks. By introducing the proximity effect, ContrId performs as well as MinGreedy but runs much faster than MinGreedy.</p>
        <p>Among future directions for maximizing rumor containment we mention the problem of containing the rumor spread in finite time. This is motivated by the fact that the propagation of influence from one person to his friends may have a certain time delay due to the heterogeneity in human activities and the influence between individuals may also decay with time passing. Another interesting topic or trend is to analyze diffusion dynamics in signed social networks, i.e., networks where arcs are associated positive or negative signs. Social individuals are likely to make the same decision with their friends (connected with positive arcs) and make the opposite decision with their foes (connected with negative arcs).Among future directions for maximizing rumor containment we mention the problem of containing the rumor spread in finite time. This is motivated by the fact that the propagation of influence from one person to his friends may have a certain time delay due to the heterogeneity in human activities and the influence between individuals may also decay with time passing. Another interesting topic or trend is to analyze diffusion dynamics in signed social networks, i.e., networks where arcs are associated positive or negative signs. Social individuals are likely to make the same decision with their friends (connected with positive arcs) and make the opposite decision with their foes (connected with negative arcs).</p>
        <p>The reconsideration of the R's seeds is not allowed since normally initial spreaders are given free samples or benefits and it is hard to change their mind.The reconsideration of the R's seeds is not allowed since normally initial spreaders are given free samples or benefits and it is hard to change their mind.</p>
        <p>⋆ This work was supported partially by the National Key R&amp;D Program of China under Grant 2018YFB1700104, the National Natural Science Foundation of China under Grant Nos. 61673309 and 61873342, the Science and Technology Development Fund, MSAR, under Grant No. 122/2017/A3, and the Project PHC CAI YUANPEI 2017 from the Chinese Scholarship Council under Project No. 38908TK.⋆ This work was supported partially by the National Key R&amp;D Program of China under Grant 2018YFB1700104, the National Natural Science Foundation of China under Grant Nos. 61673309 and 61873342, the Science and Technology Development Fund, MSAR, under Grant No. 122/2017/A3, and the Project PHC CAI YUANPEI 2017 from the Chinese Scholarship Council under Project No. 38908TK.</p>
        <p>14% / 8% (The outperformance on the left of / is for the case when SR is selected by Random, while the outperformance on the right is for the case when SR is selected by Degree.)14% / 8% (The outperformance on the left of / is for the case when SR is selected by Random, while the outperformance on the right is for the case when SR is selected by Degree.)</p>
        <p>The rumor spread, truth spread on the four networks under the proposed heuristic approaches are shown in Figs. 5,6 and Figs. 7,8. From the rumor spread in Figs. 5 and6 we have the following observations.The rumor spread, truth spread on the four networks under the proposed heuristic approaches are shown in Figs. 5,6 and Figs. 7,8. From the rumor spread in Figs. 5 and6 we have the following observations.</p>
        <p>Proximity effect works well: 
            <rs type="software">ProxPageRank</rs>, and 
            <rs type="software">ProxContrId</rs> outperform their unconstrained versions in terms of rumor containment, which well reflects the good property of the proximity effect.
        </p>
        <p>• When S R is selected by Random, in Scale-free (resp., Small-world, NetScience, US-power), 
            <rs type="software">ProxPageR</rs>-
        </p>
    </text>
</tei>
