<?xml version="1.0" encoding="UTF-8"?>
<tei xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader>
        <fileDesc xml:id="_1"/>
        <encodingDesc>
            <appInfo>
                <application version="0.8.1-SNAPSHOT" ident="GROBID" when="2024-06-14T14:38+0000">
                    <ref target="https://github.com/kermitt2/grobid">A machine learning software for extracting information from scholarly documents</ref>
                </application>
            </appInfo>
        </encodingDesc>
    </teiHeader>
    <text xml:lang="en">
        <p>Observed galaxy clustering exhibits local transverse statistical isotropy around the lineof-sight (LOS). The variation of the LOS across a galaxy survey complicates the measurement of the observed clustering as a function of the angle to the LOS, as fast Fourier transforms (FFTs) based on Cartesian grids, cannot individually allow for this. Recent advances in methodology for calculating LOS-dependent clustering in Fourier space include the realization that power spectrum LOS-dependent moments can be constructed from sums over galaxies, based on approximating the LOS to each pair of galaxies by the LOS to one of them. We show that we can implement this method using multiple FFTs, each measuring the LOS-weighted clustering along different axes. The N log N nature of FFTs means that the computational speed-up is a factor of &gt; 1000 compared with summing over galaxies. This development should be beneficial for future projects such as DESI and Euclid which will provide an order of magnitude more galaxies than current surveys.Observed galaxy clustering exhibits local transverse statistical isotropy around the lineof-sight (LOS). The variation of the LOS across a galaxy survey complicates the measurement of the observed clustering as a function of the angle to the LOS, as fast Fourier transforms (FFTs) based on Cartesian grids, cannot individually allow for this. Recent advances in methodology for calculating LOS-dependent clustering in Fourier space include the realization that power spectrum LOS-dependent moments can be constructed from sums over galaxies, based on approximating the LOS to each pair of galaxies by the LOS to one of them. We show that we can implement this method using multiple FFTs, each measuring the LOS-weighted clustering along different axes. The N log N nature of FFTs means that the computational speed-up is a factor of &gt; 1000 compared with summing over galaxies. This development should be beneficial for future projects such as DESI and Euclid which will provide an order of magnitude more galaxies than current surveys.</p>
        <p>Although the Universe is predicted to be statistically homogeneous and isotropic, observational effects including the Alcock-Paczynsky effect (AP; Alcock &amp; Paczynski 1979) and redshiftspace distortions (RSD; Kaiser 1987) mean that the observed clustering, when translated into comoving coordinates using a fiducial distance-redshift relation exhibits local transverse statistical isotropy around the line-of-sight (LOS). The key measurement to be made from a galaxy survey is consequently the clustering as a function of the angle to the LOS. If we consider the clustering in configuration-space, then the base 'unit' is a pair of galaxies, and it is common to treat a pair as having a single LOS, usually defined as the direction to the pair centre. Any effects because the galaxies within the pair have different LOSs are called 'wide-angle effect' (Szalay, Matsubara &amp; Landy 1998;Szapudi 2004) and are small of the scales of interest (Beutler et al. 2012;Samushia, Percival &amp; Raccanelli 2012;Yoo &amp; Seljak 2015). Thus in configuration space, measuring clustering with respect to the LOS can be easily incorporated into pair-counting algorithms (Landy &amp; Szalay 1993) with a different LOS for each pair.Although the Universe is predicted to be statistically homogeneous and isotropic, observational effects including the Alcock-Paczynsky effect (AP; Alcock &amp; Paczynski 1979) and redshiftspace distortions (RSD; Kaiser 1987) mean that the observed clustering, when translated into comoving coordinates using a fiducial distance-redshift relation exhibits local transverse statistical isotropy around the line-of-sight (LOS). The key measurement to be made from a galaxy survey is consequently the clustering as a function of the angle to the LOS. If we consider the clustering in configuration-space, then the base 'unit' is a pair of galaxies, and it is common to treat a pair as having a single LOS, usually defined as the direction to the pair centre. Any effects because the galaxies within the pair have different LOSs are called 'wide-angle effect' (Szalay, Matsubara &amp; Landy 1998;Szapudi 2004) and are small of the scales of interest (Beutler et al. 2012;Samushia, Percival &amp; Raccanelli 2012;Yoo &amp; Seljak 2015). Thus in configuration space, measuring clustering with respect to the LOS can be easily incorporated into pair-counting algorithms (Landy &amp; Szalay 1993) with a different LOS for each pair.</p>
        <p>In Fourier-space, dealing with the varying LOS is more difficult, as fast Fourier methods do not, in general, allow for the variation of LOS. One option is to use a basis built up from spherical harmonics and Bessel functions, which naturally separates clusdavide.bianchi@port.ac.uk tering with respect to the varying LOS (Fisher, Scharf &amp; Lahav 1994;Heavens &amp; Taylor 1995). In recent works, Yamamoto et al. (2006) and Blake et al. (2011) considered the Fourier decomposition as a sum over pairs of galaxies, and showed that this can be simplified (and speeded up) by assuming that the LOS to the pair is equivalent to the LOS to a single galaxy (the method is described in § 2). This approximately doubles the 'wide-angle effect' (Samushia, Branchini &amp; Percival 2015), but that is small anyway. In this Letter we consider how to implement the transform with this approximation, showing that we can use multiple fast Fourier transforms (FFTs) to perform this sum for power-law moments in µ ≡ k • rLOS, the cosine of the angle to the LOS (this is described in § 3). In § 4 we present the results of tests of three implementations of the method, summing over galaxies, grid cells or using FFTs. We show that they provide consistent results, and compare the computational burden of each. By decomposing any moment into a sum over Legendre polynomials, we can construct any power spectrum moment using this method ( § 5). Such developments are necessary as one often wants to measure the power spectrum moments, not only in the data, but also in a large numbers of mock catalogues used to estimate and test for errors: for example, Anderson et al. (2014) analysed the Baryon Oscillation Spectroscopic Survey (BOSS; Dawson et al. 2013) data and 1000 mock catalogues. Thus the computational burden of measuring LOS-dependent clustering is high.In Fourier-space, dealing with the varying LOS is more difficult, as fast Fourier methods do not, in general, allow for the variation of LOS. One option is to use a basis built up from spherical harmonics and Bessel functions, which naturally separates clusdavide.bianchi@port.ac.uk tering with respect to the varying LOS (Fisher, Scharf &amp; Lahav 1994;Heavens &amp; Taylor 1995). In recent works, Yamamoto et al. (2006) and Blake et al. (2011) considered the Fourier decomposition as a sum over pairs of galaxies, and showed that this can be simplified (and speeded up) by assuming that the LOS to the pair is equivalent to the LOS to a single galaxy (the method is described in § 2). This approximately doubles the 'wide-angle effect' (Samushia, Branchini &amp; Percival 2015), but that is small anyway. In this Letter we consider how to implement the transform with this approximation, showing that we can use multiple fast Fourier transforms (FFTs) to perform this sum for power-law moments in µ ≡ k • rLOS, the cosine of the angle to the LOS (this is described in § 3). In § 4 we present the results of tests of three implementations of the method, summing over galaxies, grid cells or using FFTs. We show that they provide consistent results, and compare the computational burden of each. By decomposing any moment into a sum over Legendre polynomials, we can construct any power spectrum moment using this method ( § 5). Such developments are necessary as one often wants to measure the power spectrum moments, not only in the data, but also in a large numbers of mock catalogues used to estimate and test for errors: for example, Anderson et al. (2014) analysed the Baryon Oscillation Spectroscopic Survey (BOSS; Dawson et al. 2013) data and 1000 mock catalogues. Thus the computational burden of measuring LOS-dependent clustering is high.</p>
        <p>We start by defining the function (Feldman, Kaiser &amp; Peacock 1994),We start by defining the function (Feldman, Kaiser &amp; Peacock 1994),</p>
        <p>where n and ns are, respectively, the observed number density of galaxies and the number density of a synthetic catalog of randoms, Poisson sampled with the same mask and selection function as the survey with no other cosmological correlations, and w is the weight. α normalizes the weighted random catalogue to match the weighted galaxy catalogue. The factor I normalizes the amplitude of the observed power in accordance with its definition in a universe with no survey selection, I ≡ dr w 2 n2 (r). From Eq. ( 1) we can define the multipole power spectrum estimator as (Feldman, Kaiser &amp; Peacock 1994;Yamamoto et al. 2006),where n and ns are, respectively, the observed number density of galaxies and the number density of a synthetic catalog of randoms, Poisson sampled with the same mask and selection function as the survey with no other cosmological correlations, and w is the weight. α normalizes the weighted random catalogue to match the weighted galaxy catalogue. The factor I normalizes the amplitude of the observed power in accordance with its definition in a universe with no survey selection, I ≡ dr w 2 n2 (r). From Eq. ( 1) we can define the multipole power spectrum estimator as (Feldman, Kaiser &amp; Peacock 1994;Yamamoto et al. 2006),</p>
        <p>where r h ≡ (r1 + r2)/2 denotes the LOS of the pair of galaxies r1 and r2, dΩ k is the solid angle element in k-space, L is the -th order Legendre polynomial and P noise is the shot noise term given bywhere r h ≡ (r1 + r2)/2 denotes the LOS of the pair of galaxies r1 and r2, dΩ k is the solid angle element in k-space, L is the -th order Legendre polynomial and P noise is the shot noise term given by</p>
        <p>For multipoles of order &gt; 0, P noise P , and consequently the shot noise correction is negligible.For multipoles of order &gt; 0, P noise P , and consequently the shot noise correction is negligible.</p>
        <p>Denoting the number of k-modes that we want to evaluate by N k and the number of elements that we use to perform the integral over r1 or r2 by N , we see that the computation of Eq. (2) will be of order N k × N 2 , as the integrals in r1 and r2 are not separable. In effect this approach performs a pair-wise clustering analysis and translates into Fourier-space. As N increases the total time needed to evaluate Eq. ( 2) grows dramatically.Denoting the number of k-modes that we want to evaluate by N k and the number of elements that we use to perform the integral over r1 or r2 by N , we see that the computation of Eq. (2) will be of order N k × N 2 , as the integrals in r1 and r2 are not separable. In effect this approach performs a pair-wise clustering analysis and translates into Fourier-space. As N increases the total time needed to evaluate Eq. ( 2) grows dramatically.</p>
        <p>The FKP-estimator (Feldman, Kaiser &amp; Peacock 1994) uses the fact that the monopole is independent of the LOS, so the ri integrals are separable and FFTs are trivial to apply. Consequently, the N k × N 2 process becomes a N k log(N ) one, which it is easier to handle: here N is the number of grid cells at which we sample F , so for a FFT N = N k . This estimator has been successfully applied in many galaxy surveys to estimate the power spectrum and bispectrum monopoles (see e.g. Gil-Marín et al. 2015, and references therein).The FKP-estimator (Feldman, Kaiser &amp; Peacock 1994) uses the fact that the monopole is independent of the LOS, so the ri integrals are separable and FFTs are trivial to apply. Consequently, the N k × N 2 process becomes a N k log(N ) one, which it is easier to handle: here N is the number of grid cells at which we sample F , so for a FFT N = N k . This estimator has been successfully applied in many galaxy surveys to estimate the power spectrum and bispectrum monopoles (see e.g. Gil-Marín et al. 2015, and references therein).</p>
        <p>The Yamamoto estimator (Yamamoto et al. 2006;Beutler et al. 2014) keeps the relevant LOS information by approximating the LOS of each pair of galaxies with the LOS of one of the two galaxies,The Yamamoto estimator (Yamamoto et al. 2006;Beutler et al. 2014) keeps the relevant LOS information by approximating the LOS of each pair of galaxies with the LOS of one of the two galaxies,</p>
        <p>This is a reliable approximation on the scale of interest, which clearly improves on assuming a single fixed LOS for the whole survey for l &gt; 0, but will eventually break down at very large scales (Samushia, Branchini &amp; Percival 2015;Yoo &amp; Seljak 2015). The integrals over r1 and r2 in Eq. ( 4) are separable, so P Yama becomes a N k × N process if the integrals are solved using sums (as in Beutler et al. 2014). In this Letter, we show that the efficiency of this estimator can be further improved by making use of FFT algorithms, such as FFTW1 .This is a reliable approximation on the scale of interest, which clearly improves on assuming a single fixed LOS for the whole survey for l &gt; 0, but will eventually break down at very large scales (Samushia, Branchini &amp; Percival 2015;Yoo &amp; Seljak 2015). The integrals over r1 and r2 in Eq. ( 4) are separable, so P Yama becomes a N k × N process if the integrals are solved using sums (as in Beutler et al. 2014). In this Letter, we show that the efficiency of this estimator can be further improved by making use of FFT algorithms, such as FFTW1 .</p>
        <p>Here we show how to write the Yamamoto algorithm in terms of N k log(N ) processes for any multipoles. For simplicity and with no loss of generality, we focus on the monopole (which, as discussed in §2, reduces to the standard FKP description), the quadrupole and the hexadecapole. We proceed by defining the convenient function,Here we show how to write the Yamamoto algorithm in terms of N k log(N ) processes for any multipoles. For simplicity and with no loss of generality, we focus on the monopole (which, as discussed in §2, reduces to the standard FKP description), the quadrupole and the hexadecapole. We proceed by defining the convenient function,</p>
        <p>With this, Eq. ( 4) reads,With this, Eq. ( 4) reads,</p>
        <p>Note that the expressions for A2 and A4 include a k-dependent term ( k•r) n in the integrand, which means that in this form Fourier transforms cannot directly be applied. This is the standard problem of dealing with a varying LOS across a survey. However, by means of the trivial decompositionNote that the expressions for A2 and A4 include a k-dependent term ( k•r) n in the integrand, which means that in this form Fourier transforms cannot directly be applied. This is the standard problem of dealing with a varying LOS across a survey. However, by means of the trivial decomposition</p>
        <p>A2 can be easily re-written into a combination of smaller building blocks,A2 can be easily re-written into a combination of smaller building blocks,</p>
        <p>wherewhere</p>
        <p>Similarly, for A4 we obtain,Similarly, for A4 we obtain,</p>
        <p>wherewhere</p>
        <p>A0, Bij and C ijl are all N k log(N ) processes by the use of any FFT algorithm. This provides the value of monopole, quadrupole and hexadecapole with only 1, 7 (= 1 + 6) and 22 (= 1 + 6 + 15)A0, Bij and C ijl are all N k log(N ) processes by the use of any FFT algorithm. This provides the value of monopole, quadrupole and hexadecapole with only 1, 7 (= 1 + 6) and 22 (= 1 + 6 + 15)</p>
        <p>FFTs, respectively. Similar decompositions are possible for higher order multipoles.FFTs, respectively. Similar decompositions are possible for higher order multipoles.</p>
        <p>It is important to remark that, from an analytical point of view, the above decomposition is completely equivalent to Eq. ( 4), i.e. it does not involve any further approximation. In essence, the symmetry encoded in the Yamamoto estimator of Eq. ( 4) is exactly captured by including the variation of the LOS in the relative weighting of different galaxies to FFTs, each covering a different axis direction, Eqs. ( 10) and ( 12).It is important to remark that, from an analytical point of view, the above decomposition is completely equivalent to Eq. ( 4), i.e. it does not involve any further approximation. In essence, the symmetry encoded in the Yamamoto estimator of Eq. ( 4) is exactly captured by including the variation of the LOS in the relative weighting of different galaxies to FFTs, each covering a different axis direction, Eqs. ( 10) and ( 12).</p>
        <p>In this section we test the following three implementations of the Yamamoto estimator, solving Eq. ( 4) using the following.In this section we test the following three implementations of the Yamamoto estimator, solving Eq. ( 4) using the following.</p>
        <p>(i) A sum over galaxies and randoms (the total number of points is N ) and the N k k-modes of interest. We will refer to this as sumgal.(i) A sum over galaxies and randoms (the total number of points is N ) and the N k k-modes of interest. We will refer to this as sumgal.</p>
        <p>(ii) A sum over a gridded representation of F with N grid cells, and the N k k-modes. We will only consider N = N k although this is not fixed as for an FFT, and refer to this as sum-grid.(ii) A sum over a gridded representation of F with N grid cells, and the N k k-modes. We will only consider N = N k although this is not fixed as for an FFT, and refer to this as sum-grid.</p>
        <p>(iii) An FFT-based implementation using a gridded representation of F with N grid cells and the N k = N k-modes. We will refer to this as FFT-based.(iii) An FFT-based implementation using a gridded representation of F with N grid cells and the N k = N k-modes. We will refer to this as FFT-based.</p>
        <p>For the methods using sums we have optimised our code, minimizing the computations performed within the inner most loops, and using the Hermitian symmetry in k-space to reduce the number of k-modes summed over. We also only compute power spectrum moments for k 0.3hMpc -1 for these methods. Additionally, for the sum-grid method we only include filled grid cells in the sum. We therefore consider that time taken by these algorithms is indicative of that achieved by most algorithms performing the transform using a sum.For the methods using sums we have optimised our code, minimizing the computations performed within the inner most loops, and using the Hermitian symmetry in k-space to reduce the number of k-modes summed over. We also only compute power spectrum moments for k 0.3hMpc -1 for these methods. Additionally, for the sum-grid method we only include filled grid cells in the sum. We therefore consider that time taken by these algorithms is indicative of that achieved by most algorithms performing the transform using a sum.</p>
        <p>We will test these three options using the public mock galaxy catalogues matched to the CMASS galaxy sample of the Sloan Digital Sky Survey (SDSS-III; Eisenstein et al. 2011), BOSS Data Release 11 North Galactic Cap (Manera et al. 2013). These catalogues each contain approximately 525,000 galaxies. We use the random catalogue provided with the galaxy mocks and we take the number density of the randoms to be 10 times higher than the number density of the galaxies, i.e., α -1 10. For the implementations that use a grid, we place the galaxies and randoms in a cubic box of size L b = 3500 Mpch -1 using the Cloud-in-Cell (CiC) prescription, to obtain the quantity F (r) of Eq. (1). In order to correct for the effects of the grid left by the CiC scheme we have corrected appropriately by the deconvolution window proposed in Jing (2005).We will test these three options using the public mock galaxy catalogues matched to the CMASS galaxy sample of the Sloan Digital Sky Survey (SDSS-III; Eisenstein et al. 2011), BOSS Data Release 11 North Galactic Cap (Manera et al. 2013). These catalogues each contain approximately 525,000 galaxies. We use the random catalogue provided with the galaxy mocks and we take the number density of the randoms to be 10 times higher than the number density of the galaxies, i.e., α -1 10. For the implementations that use a grid, we place the galaxies and randoms in a cubic box of size L b = 3500 Mpch -1 using the Cloud-in-Cell (CiC) prescription, to obtain the quantity F (r) of Eq. (1). In order to correct for the effects of the grid left by the CiC scheme we have corrected appropriately by the deconvolution window proposed in Jing (2005).</p>
        <p>Fig. 1 displays the average power spectrum multipoles: monopole (red), quadrupole (blue) and hexadecapole (green) calculated from 50 mocks. The solid lines represent the FFT-based method, the dashed lines the sum-grid, and the dotted lines the sumgal. The plot shows an almost exact agreement between the three implementations of Eq. ( 4). The results of the sum-grid algorithm show a few percent deviation at small scales. The origin of this is aliasing, which we have not corrected for. The aliasing effect for a 1024 3 grid is negligible for scales k 0.4hMpc -1 , and consequently does not appear for the FFT-based scheme. For comparison, adopting a 2048 3 grid we expect the aliasing to be negligible for wave numbers up to ∼ 0.6hMpc -1 . Due to its small amplitude, at small k the hexadecapole is affected by numerical noise, which results in a general instability of the ratio between different methods.Fig. 1 displays the average power spectrum multipoles: monopole (red), quadrupole (blue) and hexadecapole (green) calculated from 50 mocks. The solid lines represent the FFT-based method, the dashed lines the sum-grid, and the dotted lines the sumgal. The plot shows an almost exact agreement between the three implementations of Eq. ( 4). The results of the sum-grid algorithm show a few percent deviation at small scales. The origin of this is aliasing, which we have not corrected for. The aliasing effect for a 1024 3 grid is negligible for scales k 0.4hMpc -1 , and consequently does not appear for the FFT-based scheme. For comparison, adopting a 2048 3 grid we expect the aliasing to be negligible for wave numbers up to ∼ 0.6hMpc -1 . Due to its small amplitude, at small k the hexadecapole is affected by numerical noise, which results in a general instability of the ratio between different methods.</p>
        <p>. Top panel: power spectrum multipoles: monopole (blue lines), quadrupole (red lines) and hexadecapole (green lines), obtained from the average of 50 realization of PTHALOS mocks corresponding to the BOSS DR11 CMASS NGC survey geometry. The solid lines display the computation of Eq. ( 4) using the FFT-based method using 1024 3 grid cells. The dashed and dotted lines display the computation of the Yamamoto estimator using the sum-grid (with 512 3 cells) and sum-gal methods, respectively. In both these cases an orthonormal base of 512 3 k-vectors has been used. The bottom panels show the corresponding sum-gal and sum-grid multipoles divided by the FFT-based multipoles to highlight differences among these implementations.. Top panel: power spectrum multipoles: monopole (blue lines), quadrupole (red lines) and hexadecapole (green lines), obtained from the average of 50 realization of PTHALOS mocks corresponding to the BOSS DR11 CMASS NGC survey geometry. The solid lines display the computation of Eq. ( 4) using the FFT-based method using 1024 3 grid cells. The dashed and dotted lines display the computation of the Yamamoto estimator using the sum-grid (with 512 3 cells) and sum-gal methods, respectively. In both these cases an orthonormal base of 512 3 k-vectors has been used. The bottom panels show the corresponding sum-gal and sum-grid multipoles divided by the FFT-based multipoles to highlight differences among these implementations.</p>
        <p>In Table 1 we show a comparison between the computation times of the different algorithms of Fig. 1 for the monopole, quadrupole and hexadecapole of one realization of the DR11 CMASS NGC mocks. For the FFT-based implementation, we also show the computation times for different number of cells used. If we relax our assumption of 10 times randoms, and use Xran times as many randoms as galaxies (for example, Anderson et al. 2014 used Xran = 50), then the computational time taken for sum-gal scales by approximately (Xran + 1)/11. For multiple measurements for different catalogues that use the same randoms, then the time in the table reduces by a factor 1/11 for each catalogue where the randoms do not have to be reused. However, note that in the post-reconstruction analyses of Anderson et al. (2014), the randoms are uniquely matched to each galaxy catalogue and so have to be calculated for each mock. The sum-grid method does not scale with the number of randoms, and is therefore faster than sum-gal when the number of randoms to be analysed is larger. Finally, when comparing run times, note that for sum-gal there is no aliasing as the galaxies and randoms are not placed on a grid, so we can use the same N k to push to smaller k than the grid-based routines. Even allowing for these scalings, it is clear that the FFT-based method is significantly faster (approximately 1000 times) than either sum-gal or sum-grid for reasonable assumptions of grid size and number of randoms.In Table 1 we show a comparison between the computation times of the different algorithms of Fig. 1 for the monopole, quadrupole and hexadecapole of one realization of the DR11 CMASS NGC mocks. For the FFT-based implementation, we also show the computation times for different number of cells used. If we relax our assumption of 10 times randoms, and use Xran times as many randoms as galaxies (for example, Anderson et al. 2014 used Xran = 50), then the computational time taken for sum-gal scales by approximately (Xran + 1)/11. For multiple measurements for different catalogues that use the same randoms, then the time in the table reduces by a factor 1/11 for each catalogue where the randoms do not have to be reused. However, note that in the post-reconstruction analyses of Anderson et al. (2014), the randoms are uniquely matched to each galaxy catalogue and so have to be calculated for each mock. The sum-grid method does not scale with the number of randoms, and is therefore faster than sum-gal when the number of randoms to be analysed is larger. Finally, when comparing run times, note that for sum-gal there is no aliasing as the galaxies and randoms are not placed on a grid, so we can use the same N k to push to smaller k than the grid-based routines. Even allowing for these scalings, it is clear that the FFT-based method is significantly faster (approximately 1000 times) than either sum-gal or sum-grid for reasonable assumptions of grid size and number of randoms.</p>
        <p>The trick of splitting µ n into Cartesian components employed in Eq. ( 9) will not work directly on moments of more general functions of µ. However we can still use a FFT-based method by decomposing the functions into Legendre polynomials and summing Table 1. Computation times (in minutes, using 16 processors) for the power spectrum monopole, quadrupole and hexadecapole for the three different implementations of the Yamamoto algorithm. For the FFT-based implementation we show the number of grid cells used: 512 3 , 1024 3 and 2048 3 . For the sum-gal algorithm the computation times are assuming α -1 ∼ 10 and for both sum-gal and sum-grid algorithms only computing for k 0.3hMpc -1 . Figure 2. Top panel: power spectrum 'Wedges': perpendicular-to-the-LOS power spectrum monopole, P ⊥ (blue lines) and parallel-to-the-LOS power spectrum monopole (red lines) obtained from the average of 50 realization of PTHALOS mocks corresponding to the BOSS DR11 CMASS NGC survey geometry. The solid lines display the approximation presented by Eq. (16-17) using the monopole, quadrupole and hexadecapole computed by using the FFT-based method described in §3 placing the particles in 1024 3 grid cells. The dashed lines display the computation of the "Wedges" using sum-gal and Eq. (14-15), so the sum is exact. In this case an orthonormal base of 512 3 k-vector have been used. The bottom panels show the fractional differences between the sum-gal and the FFT-based method, for P ⊥ and P as labeled.The trick of splitting µ n into Cartesian components employed in Eq. ( 9) will not work directly on moments of more general functions of µ. However we can still use a FFT-based method by decomposing the functions into Legendre polynomials and summing Table 1. Computation times (in minutes, using 16 processors) for the power spectrum monopole, quadrupole and hexadecapole for the three different implementations of the Yamamoto algorithm. For the FFT-based implementation we show the number of grid cells used: 512 3 , 1024 3 and 2048 3 . For the sum-gal algorithm the computation times are assuming α -1 ∼ 10 and for both sum-gal and sum-grid algorithms only computing for k 0.3hMpc -1 . Figure 2. Top panel: power spectrum 'Wedges': perpendicular-to-the-LOS power spectrum monopole, P ⊥ (blue lines) and parallel-to-the-LOS power spectrum monopole (red lines) obtained from the average of 50 realization of PTHALOS mocks corresponding to the BOSS DR11 CMASS NGC survey geometry. The solid lines display the approximation presented by Eq. (16-17) using the monopole, quadrupole and hexadecapole computed by using the FFT-based method described in §3 placing the particles in 1024 3 grid cells. The dashed lines display the computation of the "Wedges" using sum-gal and Eq. (14-15), so the sum is exact. In this case an orthonormal base of 512 3 k-vector have been used. The bottom panels show the fractional differences between the sum-gal and the FFT-based method, for P ⊥ and P as labeled.</p>
        <p>over the multipole-moments. For example, one proposed alternative to using multipoles is to use "Wedges" (Kazin, Sánchez &amp; Blanton 2012), where we replace L (µ) in Eq. ( 4) by top hat funcin µ covering 0 µ 0.5, whose moment we denote P ⊥ and 0.5 &lt; µ 1 whose moment we denote P :over the multipole-moments. For example, one proposed alternative to using multipoles is to use "Wedges" (Kazin, Sánchez &amp; Blanton 2012), where we replace L (µ) in Eq. ( 4) by top hat funcin µ covering 0 µ 0.5, whose moment we denote P ⊥ and 0.5 &lt; µ 1 whose moment we denote P :</p>
        <p>where ϕ is the azimuthal angle. Then, as discussed in Kazin, Sánchez &amp; Blanton (2012), we can approximate these functions using the first three even Legendre polynomials as,where ϕ is the azimuthal angle. Then, as discussed in Kazin, Sánchez &amp; Blanton (2012), we can approximate these functions using the first three even Legendre polynomials as,</p>
        <p>In Fig. 2 we show the comparison between the P ⊥ (blue lines) and P (red lines) computed using the sum-gal algorithm (dashed lines), i.e. the definition of Eq. (14-15), and the combination of Eq. (16-17) computed using the FFT-based algorithm (solid lines).In Fig. 2 we show the comparison between the P ⊥ (blue lines) and P (red lines) computed using the sum-gal algorithm (dashed lines), i.e. the definition of Eq. (14-15), and the combination of Eq. (16-17) computed using the FFT-based algorithm (solid lines).</p>
        <p>The agreement between the definition of P ⊥ and P and the ap-proximation of Eq. (16-17) is very good for the range of scales studied. This suggest that the Yamamoto implementation based on FFTs presented in this Letter is also suitable to be used to compute the wedges power spectral moments.The agreement between the definition of P ⊥ and P and the ap-proximation of Eq. (16-17) is very good for the range of scales studied. This suggest that the Yamamoto implementation based on FFTs presented in this Letter is also suitable to be used to compute the wedges power spectral moments.</p>
        <p>We have explored methods for implementing the calculation of LOS-dependent moments of the galaxy power spectrum. Following on from developments in Yamamoto et al. (2006) and Blake et al. (2011) we have shown that the resulting equation can be solved using multiple FFTs, thus providing a fast method to measure LOS-dependent clustering. We have shown that this is faster than previous methods using sums over galaxies, and this will also be faster than pair-counting algorithms based on the Landy &amp; Szalay (1993) algorithms to calculate configuration-space monopole, quadrupole and hexadecapole moments of the correlation function.We have explored methods for implementing the calculation of LOS-dependent moments of the galaxy power spectrum. Following on from developments in Yamamoto et al. (2006) and Blake et al. (2011) we have shown that the resulting equation can be solved using multiple FFTs, thus providing a fast method to measure LOS-dependent clustering. We have shown that this is faster than previous methods using sums over galaxies, and this will also be faster than pair-counting algorithms based on the Landy &amp; Szalay (1993) algorithms to calculate configuration-space monopole, quadrupole and hexadecapole moments of the correlation function.</p>
        <p>Developments such as this are necessary given the next generation of galaxy redshift surveys, including DESI (Levi et al. 2013) and Euclid (Laureijs et al. 2011), will provide an order of magnitude more galaxies than current surveys, and therefore make computations more challenging. Developments such as that presented here should also find application in the measurement of the bispectrum, and contribute to our ability to fully exploit galaxy surveys to provide cosmological information. After submission of our Letter and publication on the archive, a similar derivation appeared (Scoccimarro 2015). This additionally showed that the hexadecapole can be calculated from the FFTs used to estimate the quadrupole, using relationships of Legendre polynomials and a slightly different LOS approximation.Developments such as this are necessary given the next generation of galaxy redshift surveys, including DESI (Levi et al. 2013) and Euclid (Laureijs et al. 2011), will provide an order of magnitude more galaxies than current surveys, and therefore make computations more challenging. Developments such as that presented here should also find application in the measurement of the bispectrum, and contribute to our ability to fully exploit galaxy surveys to provide cosmological information. After submission of our Letter and publication on the archive, a similar derivation appeared (Scoccimarro 2015). This additionally showed that the hexadecapole can be calculated from the FFTs used to estimate the quadrupole, using relationships of Legendre polynomials and a slightly different LOS approximation.</p>
        <p>Fastest Fourier Transform in the West: http://fftw.org c 0000 RAS, MNRAS 000, 000-000Fastest Fourier Transform in the West: http://fftw.org c 0000 RAS, MNRAS 000, 000-000</p>
        <p>c 0000 RAS, MNRAS 000, 000-000c 0000 RAS, MNRAS 000, 000-000</p>
        <p>DB, RR and WJP acknowledge support from the European Research Council through grant Darksurvey. HGM and WJP acknowledge support from the UK Science &amp; Technology Facilities Council through the consolidated grant ST/K0090X/1, and WJP also acknowledges support from the UK Space Agency through grant ST/K00283X/1. Numerical computations were performed using the SCIAMA High Performance Compute (HPC) cluster which is supported by the ICG, SEPNet and the University of Portsmouth.DB, RR and WJP acknowledge support from the European Research Council through grant Darksurvey. HGM and WJP acknowledge support from the UK Science &amp; Technology Facilities Council through the consolidated grant ST/K0090X/1, and WJP also acknowledges support from the UK Space Agency through grant ST/K00283X/1. Numerical computations were performed using the SCIAMA High Performance Compute (HPC) cluster which is supported by the ICG, SEPNet and the University of Portsmouth.</p>
    </text>
</tei>
