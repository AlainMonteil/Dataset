<?xml version="1.0" encoding="UTF-8"?>
<tei xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader>
        <fileDesc xml:id="_1"/>
        <encodingDesc>
            <appInfo>
                <application version="0.8.1-SNAPSHOT" ident="GROBID" when="2024-06-13T15:15+0000">
                    <ref target="https://github.com/kermitt2/grobid">A machine learning software for extracting information from scholarly documents</ref>
                </application>
            </appInfo>
        </encodingDesc>
    </teiHeader>
    <text xml:lang="en">
        <p>The recent technological advent of cryptocurrencies and their respective benefits have been shrouded with a number of illegal activities operating over the network such as money laundering, bribery, phishing, fraud, among others. In this work we focus on the Ethereum network, which has seen over 400 million transactions since its inception. Using 2179 accounts flagged by the Ethereum community for their illegal activity coupled with 2502 normal accounts, we seek to detect illicit accounts based on their transaction history using the 
            <rs type="software">XGBoost</rs> classifier. Using 10 fold cross-validation, 
            <rs type="software">XGBoost</rs> achieved an average accuracy of 0.963 ( ± 0.006) with an average AUC of 0.994 ( ± 0.0 0 07). The top three features with the largest impact on the final model output were established to be 'Time diff between first and last (Mins)', 'Total Ether balance' and 'Min value received'. Based on the results we conclude that the proposed approach is highly effective in detecting illicit accounts over the Ethereum network. Our contribution is multi-faceted; firstly, we propose an effective method to detect illicit accounts over the Ethereum network; secondly, we provide insights about the most important features; and thirdly, we publish the compiled data set as a benchmark for future related works.
        </p>
        <p>Banks, as well as government entities and corporations managing and overseeing the transfer of funds, have invested sizeable amounts of money in detecting any anomaly transactions occurring over their network. These transactions may form part of money laundering, bribery, fraud and crime related schemes.Banks, as well as government entities and corporations managing and overseeing the transfer of funds, have invested sizeable amounts of money in detecting any anomaly transactions occurring over their network. These transactions may form part of money laundering, bribery, fraud and crime related schemes.</p>
        <p>Money laundering has been a great concern for banks dealing with fiat currencies. Till this day and age, even though a number of preventive measures have been implemented to detect any suspicious transaction behavior occurring over their network, numerous reports suggest that users are still able to circumvent these controls ( Godspower-Akpomiemie &amp; Ojah, 2019 ). The problem is also not country specific but witnessed on a global scale, with some banks closing up after authorities identified the banks inability to carry out the necessary procedures and inform the relevant authorities ( Levi, 2002 ).Money laundering has been a great concern for banks dealing with fiat currencies. Till this day and age, even though a number of preventive measures have been implemented to detect any suspicious transaction behavior occurring over their network, numerous reports suggest that users are still able to circumvent these controls ( Godspower-Akpomiemie &amp; Ojah, 2019 ). The problem is also not country specific but witnessed on a global scale, with some banks closing up after authorities identified the banks inability to carry out the necessary procedures and inform the relevant authorities ( Levi, 2002 ).</p>
        <p>Similar activity is also present over the Ethereum network, with entities and users utilizing the anonymity provided by Ethereum to hide their illicit intentions. The internal security mechanisms defined by blockchain technology (hash functions) are able to solve issues such as the double spending problem, but no tools are in place to detect or flag any suspicious behavior or transactions occurring over the network automatically. Smart contracts deployed over the network may also be hiding illegal schemes for which users are unaware of due to their misrepresented intentions of 'high-yielding' investment opportunities ( Bartoletti, Carta, Cimoli, &amp; Saia, 2020 ). An example of such deployed contracts include smart contract ponzi schemes -solely created with the intent of benefiting the contract creator and possible a few users who invested in the scheme initially. This may all be done while the identity of the aforementioned smart contract creator remains anonymous. Rubixi, a Smart contract ponzi scheme stated to provide a dynamic multiplying factor to ones Ethereum investment, guaranteed quick profits. Further analysis determined that only 22 out of 112 participants who contributed towards the scheme made a profit, with only 2 making a 40% profit margin ( Bartoletti et al., 2020 ).Similar activity is also present over the Ethereum network, with entities and users utilizing the anonymity provided by Ethereum to hide their illicit intentions. The internal security mechanisms defined by blockchain technology (hash functions) are able to solve issues such as the double spending problem, but no tools are in place to detect or flag any suspicious behavior or transactions occurring over the network automatically. Smart contracts deployed over the network may also be hiding illegal schemes for which users are unaware of due to their misrepresented intentions of 'high-yielding' investment opportunities ( Bartoletti, Carta, Cimoli, &amp; Saia, 2020 ). An example of such deployed contracts include smart contract ponzi schemes -solely created with the intent of benefiting the contract creator and possible a few users who invested in the scheme initially. This may all be done while the identity of the aforementioned smart contract creator remains anonymous. Rubixi, a Smart contract ponzi scheme stated to provide a dynamic multiplying factor to ones Ethereum investment, guaranteed quick profits. Further analysis determined that only 22 out of 112 participants who contributed towards the scheme made a profit, with only 2 making a 40% profit margin ( Bartoletti et al., 2020 ).</p>
        <p>Other anomalous behavior over the network has also been discovered in February 2019, following an account which paid over 450,0 0 0$ spread out over 3 transactions in order to transfer a tohttps://doi.org/10.1016/j.eswa.2020.113318 0957-4174/© 2020 Elsevier Ltd. All rights reserved. tal of 0.1 ETH ( Garg, 2019 ). Such activity has raised concerns on the actual intentions of the executed transactions; which raises the question on whether they were genuine mistakes whereby the account owner mistook the transaction fee to be the Ether to be transferred or whether it is part of some larger money laundering scheme.Other anomalous behavior over the network has also been discovered in February 2019, following an account which paid over 450,0 0 0$ spread out over 3 transactions in order to transfer a tohttps://doi.org/10.1016/j.eswa.2020.113318 0957-4174/© 2020 Elsevier Ltd. All rights reserved. tal of 0.1 ETH ( Garg, 2019 ). Such activity has raised concerns on the actual intentions of the executed transactions; which raises the question on whether they were genuine mistakes whereby the account owner mistook the transaction fee to be the Ether to be transferred or whether it is part of some larger money laundering scheme.</p>
        <p>These two form part of a larger already existing suspicious behavior which is presently available over the Ethereum network. Having the correct tools to detect and flag such behavior would help improve the trust over the network; hindering and interrupting illegal activity from being carried out.These two form part of a larger already existing suspicious behavior which is presently available over the Ethereum network. Having the correct tools to detect and flag such behavior would help improve the trust over the network; hindering and interrupting illegal activity from being carried out.</p>
        <p>The recent shift towards decentralised digital assets has led to a rapid development in cryptocurrencies seeking to offer something other than just transferring funds between accounts. Vitalik Buterin earlier in 2013 proposed the Ethereum blockchain, which addressed this desire through the introduction of smartcontracts ( Rudlang, 2017 ). When coupled with enhanced security through hash functions, decentralisation of computational logic and the largest ensemble of developers in the cryptocurrency domain ( Porru, Pinna, Marchesi, &amp; Tonelli, 2017 ), Ethereum manifests the potential for widespread applicability.The recent shift towards decentralised digital assets has led to a rapid development in cryptocurrencies seeking to offer something other than just transferring funds between accounts. Vitalik Buterin earlier in 2013 proposed the Ethereum blockchain, which addressed this desire through the introduction of smartcontracts ( Rudlang, 2017 ). When coupled with enhanced security through hash functions, decentralisation of computational logic and the largest ensemble of developers in the cryptocurrency domain ( Porru, Pinna, Marchesi, &amp; Tonelli, 2017 ), Ethereum manifests the potential for widespread applicability.</p>
        <p>Ethereum, like other cryptocurrency networks, has been subject to a number of entities/users carrying out illegal activity over the network, some of which includes smart-Ponzi schemes, phishing, money laundering, fraud and crime related activity ( Juels, Kosba, &amp; Shi, 2016 ). Even though pseudo-anonymity over the network is enforced and defined to be one of the fundamental features of such systems, this functionality has been exploited by users carrying out illicit behaviour over the network. Although cryptocurrency technology is constantly evolving and improving in order to provide a defect-less decentralised system for their intended uses, the overall reputation has been negatively impacted due to such aforementioned activities ( Ermakova, Fabian, Baumann, Izmailov, &amp; Krasnova, 2017 ). This has inadvertently led to the development of methodologies and techniques to detect such operations.Ethereum, like other cryptocurrency networks, has been subject to a number of entities/users carrying out illegal activity over the network, some of which includes smart-Ponzi schemes, phishing, money laundering, fraud and crime related activity ( Juels, Kosba, &amp; Shi, 2016 ). Even though pseudo-anonymity over the network is enforced and defined to be one of the fundamental features of such systems, this functionality has been exploited by users carrying out illicit behaviour over the network. Although cryptocurrency technology is constantly evolving and improving in order to provide a defect-less decentralised system for their intended uses, the overall reputation has been negatively impacted due to such aforementioned activities ( Ermakova, Fabian, Baumann, Izmailov, &amp; Krasnova, 2017 ). This has inadvertently led to the development of methodologies and techniques to detect such operations.</p>
        <p>The distributed ledger made publicly available by the Ethereum blockchain network supports more than a total of 400M transactions and 7.3M blocks as of March 2019. 1 Smart contracts deployed over the network may also be hiding illegal schemes for which users are unaware of due to their misrepresented intentions of 'high-yielding' investment opportunities ( Bartoletti et al., 2020 ). An example of such deployed contracts include smart contract Ponzi schemes -solely created with the intent of benefiting the contract creator and possibly a few users who invested in the scheme initially ( Iyer &amp; Dannen, 2018 ). Although it is difficult to provide a specific value on the whole economic impact attributed to such activities, some Ponzi schemes performing on Ethereum have accumulated over $43 million worth of Ether ( Vasek &amp; Moore, 2019 ). This may all be done while the identity of the aforementioned smart contract creator remains anonymous.The distributed ledger made publicly available by the Ethereum blockchain network supports more than a total of 400M transactions and 7.3M blocks as of March 2019. 1 Smart contracts deployed over the network may also be hiding illegal schemes for which users are unaware of due to their misrepresented intentions of 'high-yielding' investment opportunities ( Bartoletti et al., 2020 ). An example of such deployed contracts include smart contract Ponzi schemes -solely created with the intent of benefiting the contract creator and possibly a few users who invested in the scheme initially ( Iyer &amp; Dannen, 2018 ). Although it is difficult to provide a specific value on the whole economic impact attributed to such activities, some Ponzi schemes performing on Ethereum have accumulated over $43 million worth of Ether ( Vasek &amp; Moore, 2019 ). This may all be done while the identity of the aforementioned smart contract creator remains anonymous.</p>
        <p>Stopping such anomalous behavior is vital for cryptocurrencies as this would help instil the idea of being a legitimate alternative to the current traditionally used fiat currency ( Meng, Tischhauser, Wang, Wang, &amp; Han, 2018 ). Having to sift through all these transactions, manually trying to identify any transactions believed to exhibit anomaly characteristics would be both impossible and never ending. The rate at which such blocks, specifically transactions and smart contracts, are being produced on the network 1 https://etherscan.io/ .Stopping such anomalous behavior is vital for cryptocurrencies as this would help instil the idea of being a legitimate alternative to the current traditionally used fiat currency ( Meng, Tischhauser, Wang, Wang, &amp; Han, 2018 ). Having to sift through all these transactions, manually trying to identify any transactions believed to exhibit anomaly characteristics would be both impossible and never ending. The rate at which such blocks, specifically transactions and smart contracts, are being produced on the network 1 https://etherscan.io/ .</p>
        <p>would naturally suggest the implementation of machine learning (ML) techniques to help identify any patterns related to anomalous behavior.would naturally suggest the implementation of machine learning (ML) techniques to help identify any patterns related to anomalous behavior.</p>
        <p>Given that labelled data was available for this work and keeping in mind the computational resources available, future scalability, ability to rank the features by order of their importance and necessity to achieve a high level of accuracy, we utilize a supervised learning classifier known as Extreme Gradient Boosting (
            <rs type="software">XGBoost</rs>). The 
            <rs type="software">XGBoost</rs> classifier, through the use of boosting, is capable of integrating a high quantity of tree models with weak performance (base classifiers) resulting in a remarkably accurate classification model ( Chen, Jiang, et al., 2018 ). With automatic parallel computation capabilities, 
            <rs type="software">XGBoost</rs> has shown to be 20 times faster than gradient boosting machines (GBM) with the same architecture ( Chen, He, Benesty, Khotilovich, &amp; Tang, 2015 ). This is not to mention the additional efficiency achieved through translating data into a D-matrix format during the pre-processing stage. The algorithm is also fully capable of scaling to billions of instances while keeping the required resources sparse relative to other existing systems ( Chen &amp; Guestrin, 2016 ). During a machine learning competition made available by Kaggle in 2015, XG-Boost was used throughout more than half of the winning solutions ( Zhang et al., 2018 ).
        </p>
        <p>Whilst in this work we have focused on demonstrating the applicability of such algorithms towards the detection of illicit activity (given the dataset available which provides for known illicit accounts), this work could be applied to specific finer grained illicit activities, such as detecting money laundering specifically (this would require such a dataset to be built and/or be available).Whilst in this work we have focused on demonstrating the applicability of such algorithms towards the detection of illicit activity (given the dataset available which provides for known illicit accounts), this work could be applied to specific finer grained illicit activities, such as detecting money laundering specifically (this would require such a dataset to be built and/or be available).</p>
        <p>The application of the work presented herein can be used by investigative and enforcement agencies and authorities to detect illicit activity. More so, it can be applied to any specific finer grained activity, say to combat money laundering and funding of terrorism. It is not just a nice to have feature, but a mandate by the European Union to enforce and combat such illicit activity including money laundering and funding of terrorismeven if using cryptocurrencies (or 'virtual' currencies). 2 Besides the work that regulators, enforcement and investigative agencies must undertake, due diligence on transactions must be undertaken by all subject persons associated with such economic activity including banks, corporate and financial service providers, and any intermediaries connected to the setup, oversight or operational aspects of associated transactions. Banks and cryptocurrency exchanges are required to undertake such due diligence to ensure that their clients' transactions are in no way related to such illicit activity -and could be held liable if they fail to detect such activity. Similar requirements are being laid out by the Financial Action Task Force (FATF)3 which aim to mandate global implementation.The application of the work presented herein can be used by investigative and enforcement agencies and authorities to detect illicit activity. More so, it can be applied to any specific finer grained activity, say to combat money laundering and funding of terrorism. It is not just a nice to have feature, but a mandate by the European Union to enforce and combat such illicit activity including money laundering and funding of terrorismeven if using cryptocurrencies (or 'virtual' currencies). 2 Besides the work that regulators, enforcement and investigative agencies must undertake, due diligence on transactions must be undertaken by all subject persons associated with such economic activity including banks, corporate and financial service providers, and any intermediaries connected to the setup, oversight or operational aspects of associated transactions. Banks and cryptocurrency exchanges are required to undertake such due diligence to ensure that their clients' transactions are in no way related to such illicit activity -and could be held liable if they fail to detect such activity. Similar requirements are being laid out by the Financial Action Task Force (FATF)3 which aim to mandate global implementation.</p>
        <p>We contribute to this area of research by investigating whether illicit accounts may be detected based on their transaction history using the XGBoost classification model. The proposed mechanism may be utilized by government entities, developers, researchers, news agencies as well as private entities/corporations.We contribute to this area of research by investigating whether illicit accounts may be detected based on their transaction history using the XGBoost classification model. The proposed mechanism may be utilized by government entities, developers, researchers, news agencies as well as private entities/corporations.</p>
        <p>In 2013, Henderson et al. (2012) using K-means and Role Extraction (RolX) were able to identify users which conducted transactions over the Bitcoin network in an abnormal manner which is typically associated with money laundering. Having acquired all transactions enacted from the networks inception till May 2013, 15 features pertaining to interactions and transaction values were extracted on accounts having a minimum of 650 transactions. Following 10 0 0 iterations of random cluster sizes, k = 5 was deemed to be the optimal number of groups with respect to the error produced. The mean node degree and variance node degree, determined by accounts which transacted with one another, were identified as the most two important features.In 2013, Henderson et al. (2012) using K-means and Role Extraction (RolX) were able to identify users which conducted transactions over the Bitcoin network in an abnormal manner which is typically associated with money laundering. Having acquired all transactions enacted from the networks inception till May 2013, 15 features pertaining to interactions and transaction values were extracted on accounts having a minimum of 650 transactions. Following 10 0 0 iterations of random cluster sizes, k = 5 was deemed to be the optimal number of groups with respect to the error produced. The mean node degree and variance node degree, determined by accounts which transacted with one another, were identified as the most two important features.</p>
        <p>Delving deeper into the 5 main clusters, the least common contained a large variance in transaction amount. This implied that these accounts participated in transactions worth small values up to thousands of bitcoins. Using RolX, the authors were able to provide a visual depiction of the account interactions in an apparent money laundering scheme, highlighting how the bitcoins are recursively split and directed to two new addresses.Delving deeper into the 5 main clusters, the least common contained a large variance in transaction amount. This implied that these accounts participated in transactions worth small values up to thousands of bitcoins. Using RolX, the authors were able to provide a visual depiction of the account interactions in an apparent money laundering scheme, highlighting how the bitcoins are recursively split and directed to two new addresses.</p>
        <p>Seeking to mitigate illegal activity over the Ethereum network through the identification of Ponzi schemes deployed as smart contracts, Chen, Zheng, Ngai, Zheng, and Zhou (2019) classified accounts based on their operation code (Opcode) using supervised learning algorithms. Following parameter tuning, the superior Random Forest was able to classify 305 out of 394 identified smart-Ponzi schemes with a probabilistic certainty of over 90% -taking into consideration that these may include experimentally deployed contracts.Seeking to mitigate illegal activity over the Ethereum network through the identification of Ponzi schemes deployed as smart contracts, Chen, Zheng, Ngai, Zheng, and Zhou (2019) classified accounts based on their operation code (Opcode) using supervised learning algorithms. Following parameter tuning, the superior Random Forest was able to classify 305 out of 394 identified smart-Ponzi schemes with a probabilistic certainty of over 90% -taking into consideration that these may include experimentally deployed contracts.</p>
        <p>Analyzing 200 smart contracts, 'CREATE' was identified as the least used opcode, appearing in only 20 of them. This makes sense since the aforementioned opcode is utilized when creating a new account along with some associated code, and Ponzi schemes have almost no reason to create new accounts. Considering the recall and precision achieved by their model, the authors estimate that over 500 smart-Ponzi schemes are available on the Ethereum network.Analyzing 200 smart contracts, 'CREATE' was identified as the least used opcode, appearing in only 20 of them. This makes sense since the aforementioned opcode is utilized when creating a new account along with some associated code, and Ponzi schemes have almost no reason to create new accounts. Considering the recall and precision achieved by their model, the authors estimate that over 500 smart-Ponzi schemes are available on the Ethereum network.</p>
        <p>In order to detect fraudulent activity on the Ethereum network, OKane (2018) examined transactions enacted by 40 0 0 scams available on Etherscamdb along with token and exchange addresses. The scam addresses, falling under the phishing scam category, were either the sender or receiver of a transaction. The most prevalent was identified as the OmiseGo site asking for private keys. In less than 36h, between 5:50 p.m. on the 9 th and 11:30 p.m. on the 10 th of January, 74 addresses had been affected.In order to detect fraudulent activity on the Ethereum network, OKane (2018) examined transactions enacted by 40 0 0 scams available on Etherscamdb along with token and exchange addresses. The scam addresses, falling under the phishing scam category, were either the sender or receiver of a transaction. The most prevalent was identified as the OmiseGo site asking for private keys. In less than 36h, between 5:50 p.m. on the 9 th and 11:30 p.m. on the 10 th of January, 74 addresses had been affected.</p>
        <p>Using principal component analysis (PCA), K-means and random forest, 13 clusters produced a maximum Davies-Bouldin Index of 81.2%. Nine features, having a mean decrease in Gini less than 600, were retained. The 'toAcc' feature, defining the account ID which sent the Ether, was identified as the most important feature. Using these results to detect anomalies in their data, 5 outliers were detected based on their Euclidean distance from the cluster centers.Using principal component analysis (PCA), K-means and random forest, 13 clusters produced a maximum Davies-Bouldin Index of 81.2%. Nine features, having a mean decrease in Gini less than 600, were retained. The 'toAcc' feature, defining the account ID which sent the Ether, was identified as the most important feature. Using these results to detect anomalies in their data, 5 outliers were detected based on their Euclidean distance from the cluster centers.</p>
        <p>
            <rs type="software">XGBoost</rs> is a decision-tree ensemble Machine Learning (ML) algorithm which utilizes the gradient boosting architecture. It's foundation stems from the well-known structured decision tree methodology. Bootstrap aggregating or bagging , similar to boosting, exploits the training dataset available so as to generate varying classifiers ( Quinlan, 1996 ). In simple terms, bagging generates diverse training sets through sampling with replacement from the available training examples -also known as bootstrapping. Using the training set samples, the learning systems allows for an ensemble of classifiers. A given test sample can then be processed by all classifiers and the decisions are aggregated, for instance, by majority vote.
        </p>
        <p>The next layer, random forests , alters the approach by which the decision or regression trees are constructed. Introducing itself as a supplementary layer of randomness on top of bagging ( Liaw, Wiener et al., 2002 ), each tree is assembled through a varied bootstrap sample of the dataset. Whereas in the traditional decision trees the variable on which a split occurs is determined through the largest contribution of information gain for all features, each tree is provided with only a bootstrap random subset of the available features on which the best split is carried out. This retrospectively counteracts issues such as overfitting -an issue commonly encountered and requiring attention in the machine learning domain.The next layer, random forests , alters the approach by which the decision or regression trees are constructed. Introducing itself as a supplementary layer of randomness on top of bagging ( Liaw, Wiener et al., 2002 ), each tree is assembled through a varied bootstrap sample of the dataset. Whereas in the traditional decision trees the variable on which a split occurs is determined through the largest contribution of information gain for all features, each tree is provided with only a bootstrap random subset of the available features on which the best split is carried out. This retrospectively counteracts issues such as overfitting -an issue commonly encountered and requiring attention in the machine learning domain.</p>
        <p>One may compress the algorithm, both in classification and regression terms, into three key stages. Initially n tree bootstrap samples are acquired from the available training dataset. For each respective sample an unpruned classification or regression tree is built. Last but not least, the final output provided new data is obtained by aggregating the predictions provided by each tree. In classification, this is a majority vote as opposed to averaging in regression.One may compress the algorithm, both in classification and regression terms, into three key stages. Initially n tree bootstrap samples are acquired from the available training dataset. For each respective sample an unpruned classification or regression tree is built. Last but not least, the final output provided new data is obtained by aggregating the predictions provided by each tree. In classification, this is a majority vote as opposed to averaging in regression.</p>
        <p>Boosting was later introduced and amalgamated with random forest implementations. A variant of the committee method, boosting is comprised of training multiple 'base' classifiers in a sequential manner ( Bishop, 2006 ). The error function corresponding to the training of a specific model fully depends on the performance of all the previous models in the 'chain'. The intuition behind boosting stems from the weighting coefficient assigned to each available instance which is determined by the performance achieved by previous base classifiers on each respective instance. Specifically, instances which have been misclassified by one of the classifiers are assigned a larger weight. This will have adverse affects on the next available classifier in the sequence.Boosting was later introduced and amalgamated with random forest implementations. A variant of the committee method, boosting is comprised of training multiple 'base' classifiers in a sequential manner ( Bishop, 2006 ). The error function corresponding to the training of a specific model fully depends on the performance of all the previous models in the 'chain'. The intuition behind boosting stems from the weighting coefficient assigned to each available instance which is determined by the performance achieved by previous base classifiers on each respective instance. Specifically, instances which have been misclassified by one of the classifiers are assigned a larger weight. This will have adverse affects on the next available classifier in the sequence.</p>
        <p>The next improvement was the introduction of Gradient Boosting , which may also be considered as the implementation of gradient descent algorithms through the use of boosting ( Boehmke, 2018 ). Given the loss function, gradient boosting seeks to minimize the overall error through measuring the local gradient of the loss function for the available set of parameters, iteratively tweaking them in the direction of the descending gradient.The next improvement was the introduction of Gradient Boosting , which may also be considered as the implementation of gradient descent algorithms through the use of boosting ( Boehmke, 2018 ). Given the loss function, gradient boosting seeks to minimize the overall error through measuring the local gradient of the loss function for the available set of parameters, iteratively tweaking them in the direction of the descending gradient.</p>
        <p>Short for Extreme Gradient Boosting, 
            <rs type="software">XGBoost</rs> offers a scalable and efficient implementation of the aforementioned gradient boosting framework ( Chen et al., 2015 ). In particular, 
            <rs type="software">XGBoost</rs> offers a number of advantages, some of which include: (i) The ability to address missing values present within the training set, (ii) scale to the demands of the dataset size (iii) offer an improved computationally effective alternative to that provided by gradient boosting algorithms, (iv) known to perform well in a number of varied competitions and studies ( Torlay, Perrone-Bertolotti, Thomas, &amp; Baciu, 2017 ) and (v) rank the features by order of their importance.
        </p>
        <p>These benefits are mostly attributed to a number of system and algorithmic optimizations ( Chen et al., 2015 ). System improvements are primarily attributed to three main enhancements which include (i) parallelizing the building of the 
            <rs type="software">XGBoost</rs> across multiple threads for an improved overall computation time, (ii) pruning backwards using the max-depth parameter to limit the tree depth instead of the greedy stopping criterion which is used in Gradient Boosting Models (GBM) to determine the features to be split on (tree spitting) and (iii) optimizing hardware utilisation of resources -specifically cache use for storing gradient related data. The algorithm also introduces a number of enhancements, namely (i) automatically catering for different variations in sparsity patterns presently available within the dataset in an efficient manner, (ii) out-of-the-box cross-validation to enhance the models capability and reduce development time as well as (iii) penalizing more complex models via L1 and L2 regularization to avoid overfitting.
        </p>
        <p>The dataset was obtained through a combination of two sources; the Etherscamdb and a local Geth client connected to the Ethereum network for scam and normal accounts, respectively.The dataset was obtained through a combination of two sources; the Etherscamdb and a local Geth client connected to the Ethereum network for scam and normal accounts, respectively.</p>
        <p>Accounts were flagged by the Ethereum community for illicit behavior for a number of cases, some of which include (i) trying to imitate other contract addresses providing tokens, (ii) scam lotteries, (iii) fake initial coin offerings (ICO), (iv) imitating other users, (v) Ponzi schemes, (vi) phishing and (vii) mirroring websites. All illicit accounts listed on the 17 th of April 2019 were collected from Etherscamdb, 4 a publicly available dataset containing community provided Ethereum account IDs deemed to have carried out illicit activity, via a GET Request, parsing the addresses available in the returned JSON object. A total of 2179 fraudulent accounts were acquired. No preprocessing was necessary during the data preparation stage since no missing values and no transformations were required. The full list of attributes is listed in the Appendix.Accounts were flagged by the Ethereum community for illicit behavior for a number of cases, some of which include (i) trying to imitate other contract addresses providing tokens, (ii) scam lotteries, (iii) fake initial coin offerings (ICO), (iv) imitating other users, (v) Ponzi schemes, (vi) phishing and (vii) mirroring websites. All illicit accounts listed on the 17 th of April 2019 were collected from Etherscamdb, 4 a publicly available dataset containing community provided Ethereum account IDs deemed to have carried out illicit activity, via a GET Request, parsing the addresses available in the returned JSON object. A total of 2179 fraudulent accounts were acquired. No preprocessing was necessary during the data preparation stage since no missing values and no transformations were required. The full list of attributes is listed in the Appendix.</p>
        <p>Using the functional tool developed by Sokolowska (2018) , we randomly selected 30 0 0 normal accounts which conducted transactions during block range 3,80 0,0 0 0 and 3,805,0 0 0. 5 After filtering out non-unique accounts, the final count was that of 2502 unique ones. These accounts were active during the period of mid-July 2017 -a period which saw an increase in Ethereum network usage. All accounts were cross-referenced with the illicit account IDs to ensure that no documented illicit activity has been executed by any of the obtained accounts.Using the functional tool developed by Sokolowska (2018) , we randomly selected 30 0 0 normal accounts which conducted transactions during block range 3,80 0,0 0 0 and 3,805,0 0 0. 5 After filtering out non-unique accounts, the final count was that of 2502 unique ones. These accounts were active during the period of mid-July 2017 -a period which saw an increase in Ethereum network usage. All accounts were cross-referenced with the illicit account IDs to ensure that no documented illicit activity has been executed by any of the obtained accounts.</p>
        <p>All normal and illicit account IDs, resulting in a total of 4681 accounts combined, were then passed to the 
            <rs type="software">Etherscan</rs> application programming interface (API) to obtain all the corresponding transactions the account engaged in. The API supported the retrieval of the latest 10,0 0 0 transactions carried out by an ERC20 contract account (CA) (CA following the ERC20 interface standard) or externally owned account (EOA). The API takes the following structure for (1) normal transactions and (2) internal transactions, respectively;
        </p>
        <p>1. http://api.etherscan.io/api?module=account&amp;action=txlist&amp; address=0xddbd2b932c763ba5b1b7ae3b362eac3e8d40121 a&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey= YourApiKeyToken . 2. http://api.etherscan.io/api?module=account&amp;action=txlist internal&amp;address=0x2c1ba59d6f58433fb1eaee7d20b26ed1. http://api.etherscan.io/api?module=account&amp;action=txlist&amp; address=0xddbd2b932c763ba5b1b7ae3b362eac3e8d40121 a&amp;startblock=0&amp;endblock=99999999&amp;sort=asc&amp;apikey= YourApiKeyToken . 2. http://api.etherscan.io/api?module=account&amp;action=txlist internal&amp;address=0x2c1ba59d6f58433fb1eaee7d20b26ed</p>
        <p>4 https://etherscamdb.info/scams . 5 Original code: 
            <rs type="url">https://bit.ly/2zGhppS</rs> . 83bda51a3&amp;startblock=0&amp;endblock=2702578&amp;sort= asc&amp;apikey=YourApiKeyToken .
        </p>
        <p>The API parameter address was set to the 4681 account identifiers collected for which the respective transactions were retrieved for all accounts. Features were extracted on all transactions executed by an account prior to being appended to the CSV file for model classification.The API parameter address was set to the 4681 account identifiers collected for which the respective transactions were retrieved for all accounts. Features were extracted on all transactions executed by an account prior to being appended to the CSV file for model classification.</p>
        <p>The simplest form of transactions within the Ethereum network are between EOA. These executed transactions involve the transfer of Ether from the sender to the recipient ( Cao, Zhang, Liu, Zhang, &amp; Neri, 2019 ). Other plausible transactions may involve contributions towards a Crowdsale of contract tokens in exchange for a quantity of the respective tokens ( Rouhani &amp; Deters, 2017 ). In this respect, the value transferred is most of the time 0 and are referred to as functions for which the end user calls a 'claim' contract function to collect the due tokens.The simplest form of transactions within the Ethereum network are between EOA. These executed transactions involve the transfer of Ether from the sender to the recipient ( Cao, Zhang, Liu, Zhang, &amp; Neri, 2019 ). Other plausible transactions may involve contributions towards a Crowdsale of contract tokens in exchange for a quantity of the respective tokens ( Rouhani &amp; Deters, 2017 ). In this respect, the value transferred is most of the time 0 and are referred to as functions for which the end user calls a 'claim' contract function to collect the due tokens.</p>
        <p>Normal transactions contain an 'ISERROR' field which dictates whether a transaction was successful or not. An unsuccessful transaction may be due to many possible reasons, some of which include the lack of necessary funds, exceeding the gas limit or incorrect recipient account address ( Sturm, Schnig, Szalanczi, &amp; Jablonski, 2019 ). For the purposes of this research, we are only interested in the transactions which were successfully executed by ascertaining that the 'ISERROR' field is set to 0 and discarding the rest. For these successful transactions, we acquire the respective fields identified in Table 1 in order to carry out feature extraction.Normal transactions contain an 'ISERROR' field which dictates whether a transaction was successful or not. An unsuccessful transaction may be due to many possible reasons, some of which include the lack of necessary funds, exceeding the gas limit or incorrect recipient account address ( Sturm, Schnig, Szalanczi, &amp; Jablonski, 2019 ). For the purposes of this research, we are only interested in the transactions which were successfully executed by ascertaining that the 'ISERROR' field is set to 0 and discarding the rest. For these successful transactions, we acquire the respective fields identified in Table 1 in order to carry out feature extraction.</p>
        <p>ERC20 transactions are solely related to the transfer of tokens which support/fall under the ERC20 interface standard ( Ikeda &amp; Hamid, 2018 ). Therefore the transferable token must support these standards and only then are these tokens listed as transfer tokens. Contrary to the 'Normal Transactions', any listed transactions were successful and therefore no transaction filtering must be carried out. Acquiring the transaction fields mentioned in Table 2 per transaction, allowed for feature extraction to take place for the provided account IDs.ERC20 transactions are solely related to the transfer of tokens which support/fall under the ERC20 interface standard ( Ikeda &amp; Hamid, 2018 ). Therefore the transferable token must support these standards and only then are these tokens listed as transfer tokens. Contrary to the 'Normal Transactions', any listed transactions were successful and therefore no transaction filtering must be carried out. Acquiring the transaction fields mentioned in Table 2 per transaction, allowed for feature extraction to take place for the provided account IDs.</p>
        <p>A total of 42 features were extracted per account using the transactions gathered.6 A small subset of extracted features were similar to those acquired in similar work using graph analysis ( Chen, Zhu, et al., 2018 ;Hirshman, Huang, &amp; Macke, 2013 ). Feature extraction was carried out in conjunction with the 
            <rs type="software">Etherscan</rs> transaction request API; generating the respective fields for each account. We have made the extracted dataset and code publicly available7
        </p>
        <p>Figs. 1 and2 , corresponding to the non-linear transformation applied to the original feature space using t-SNE, were generated with respect to the account class label (normal or illicit) showing the 2D and 3D t-SNE plots, respectively. From the 2D scatter plot in Fig. 1 , we note that a few distinguishable clusters from both classes, noticeably the three red clusters available near the bottom right region of the plot. Nevertheless, there is still a substantial overlap of different class data points present throughout.Figs. 1 and2 , corresponding to the non-linear transformation applied to the original feature space using t-SNE, were generated with respect to the account class label (normal or illicit) showing the 2D and 3D t-SNE plots, respectively. From the 2D scatter plot in Fig. 1 , we note that a few distinguishable clusters from both classes, noticeably the three red clusters available near the bottom right region of the plot. Nevertheless, there is still a substantial overlap of different class data points present throughout.</p>
        <p>Providing a 30 • tilt representation in a three-dimensional scatter plot, Fig. 2 provides an alternative representation of the 'illicit' account clusters which are evident in Fig. 1 . The two figures highlight the necessity of machine learning techniques to help in distinguishing the two binary classes while providing a visual representation of the data at hand. This was then followed by the implementation of the XGBoost classification model involving a sequential three-step process; (i) declaring the model along with all the respective parameters to be considered, (ii) training the classifier on the training set and (iii) predicting on the test data using the model trained in the previous step. Cross-validation was used to assess the model's performance.Providing a 30 • tilt representation in a three-dimensional scatter plot, Fig. 2 provides an alternative representation of the 'illicit' account clusters which are evident in Fig. 1 . The two figures highlight the necessity of machine learning techniques to help in distinguishing the two binary classes while providing a visual representation of the data at hand. This was then followed by the implementation of the XGBoost classification model involving a sequential three-step process; (i) declaring the model along with all the respective parameters to be considered, (ii) training the classifier on the training set and (iii) predicting on the test data using the model trained in the previous step. Cross-validation was used to assess the model's performance.</p>
        <p>We assessed the following three main XGBoost parameters using grid-search; (i) learning rate, (ii) the number of estimators (n_estimators) and (iii) the maximum depth (max_depth).We assessed the following three main XGBoost parameters using grid-search; (i) learning rate, (ii) the number of estimators (n_estimators) and (iii) the maximum depth (max_depth).</p>
        <p>The best parameters were determined using the Receiver Operating Characteristic (ROC) curve which presents us with the area under the curve (AUC) measure ( Bradley, 1997 ). Classifiers during the prediction phase produce a measurable quantity of instances which have been assigned a correct and incorrect class. These are usually documented in the form of a confusion matrix; listing the number of True Positives (TP), True Negatives (TN), False Positives (FP) and False Negatives (FN). Although these measures provide an indication of the model's performance, more meaningful measures may be formulated to highlight the performance of the model in Accuracy is one of the simplest measures to determine the performance of a classification model. In simple terms, its the number of correct predictions with respect to all the available examples being tested.The best parameters were determined using the Receiver Operating Characteristic (ROC) curve which presents us with the area under the curve (AUC) measure ( Bradley, 1997 ). Classifiers during the prediction phase produce a measurable quantity of instances which have been assigned a correct and incorrect class. These are usually documented in the form of a confusion matrix; listing the number of True Positives (TP), True Negatives (TN), False Positives (FP) and False Negatives (FN). Although these measures provide an indication of the model's performance, more meaningful measures may be formulated to highlight the performance of the model in Accuracy is one of the simplest measures to determine the performance of a classification model. In simple terms, its the number of correct predictions with respect to all the available examples being tested.</p>
        <p>where CN = T N + F P and CP = F N + T P . Sensitivity allows us to derive the proportion of real positives which have been correctly identified. It is also commonly known as recall and True Positive Rate (TPR). The TP and TN in the given situation are the 'illicit' or 'normal' accounts ( Altman &amp; Bland, 1994 ), respectively.where CN = T N + F P and CP = F N + T P . Sensitivity allows us to derive the proportion of real positives which have been correctly identified. It is also commonly known as recall and True Positive Rate (TPR). The TP and TN in the given situation are the 'illicit' or 'normal' accounts ( Altman &amp; Bland, 1994 ), respectively.</p>
        <p>(2)(2)</p>
        <p>All three measures produce a value ranging between 0 and 1.All three measures produce a value ranging between 0 and 1.</p>
        <p>Using the specificity to calculate the false positive rate (FPR) which is equal to 1 -Speci f icity, we are able to plot the ROC curve Table 3 Results for 3-, 4-, 5-and 10-fold cross-validation. Each row reports the best parameters of XGBoost along with the respective average performance measurements. The values in the brackets are the standard deviations of the respective performance measurements across all folds. The last column specifies the total execution time measured on a regular laptop with a core i7-7700HQ 2.8GHz (turbo up to 3.8GHz) and 16GB available RAM using Python v
            <rs type="version">3.6</rs>.
        </p>
        <p>Optimal and obtain the AUC measure ( Fan, Upadhye, &amp; Worster, 2006 ). The ROC represents the measure of separability, expressing the models capability of differentiating between classes. 
            <rs type="software">XGBoost</rs> provides the probability that an account forms part of the illicit class. By varying the probability threshold with which a class output is determined, variant pairs of sensitivity and specificity are generated, which we use to build an ROC curve and compute the corresponding area under the curve (AUC) ( Choi et al., 2018 ). The higher the AUC is the better the accuracy of our model is.
        </p>
        <p>Given the risk attributed to the incorrect classification of accounts as well as its ability to encompass all criteria surrounding the model's performance, we deem the AUC as the preferred measurement for identifying the optimal model of XGBoost with different configurations.Given the risk attributed to the incorrect classification of accounts as well as its ability to encompass all criteria surrounding the model's performance, we deem the AUC as the preferred measurement for identifying the optimal model of XGBoost with different configurations.</p>
        <p>
            <rs type="software">XGBoost</rs> provides three main importance metrics to quantify the importance of all features trained on by the model, namely; (i) Weight, (ii) Gain and (iii) Cover. Weight specifies the number of times a particular feature crops up in the trees defined by the model ( Shi, Wong, Li, Palanisamy, &amp; Chai, 2019 ). Gain corresponds to the relative improvement in accuracy achieved by a feature to the branches it forms part of. Cover or coverage relates to the number of observations with respect to the feature in question. The resultant output is a matrix; with the first column listing the features and the other columns defining the importance value with regards to the importance metric provided.
        </p>
        <p>Since we are also interested in the overall model rigidity/stability, we also assessed how the model performed when provided with varying training/testing sizes. Therefore, we analyze how the features vary in their rank with respect to the three importance metrics on the train-test splits executed.Since we are also interested in the overall model rigidity/stability, we also assessed how the model performed when provided with varying training/testing sizes. Therefore, we analyze how the features vary in their rank with respect to the three importance metrics on the train-test splits executed.</p>
        <p>Using grid search cross-validation we identify the optimal values for the three parameters of interest; (i) learning rate, (ii) number of trees (n_estimators) and (iii) max tree depth (max_depth). The AUC measure was used to determine the optimal model performance with respect to the provided parameter values. Table 3 presents the cross-validation variation results, with 10-fold crossvalidation achieving an optimum AUC of 0.994 (STD of 0.0 0 07) with a tree depth of four, 150 trees and a learning rate of 0.2. From Fig. 3 we may note that the boosted trees performance is sub-optimal for combinations of low depth and n_estimators when assessed over 10-folds.Using grid search cross-validation we identify the optimal values for the three parameters of interest; (i) learning rate, (ii) number of trees (n_estimators) and (iii) max tree depth (max_depth). The AUC measure was used to determine the optimal model performance with respect to the provided parameter values. Table 3 presents the cross-validation variation results, with 10-fold crossvalidation achieving an optimum AUC of 0.994 (STD of 0.0 0 07) with a tree depth of four, 150 trees and a learning rate of 0.2. From Fig. 3 we may note that the boosted trees performance is sub-optimal for combinations of low depth and n_estimators when assessed over 10-folds.</p>
        <p>Seeking to understand further the models learning capabilities, we also provide the logarithmic loss as well as the classification error with respect to the number of iterations executed by 
            <rs type="software">XGBoost</rs> in Figs. 4 and5 , respectively. The logarithmic loss function indicates the price paid for inaccuracy on the predictions made with the intent of finding a direct mapping between the vector space and the target function. From the two figures we may note that the learning algorithm is converging after approximately 100 iterations.
        </p>
        <p>The confusion matrix in Fig. 6 , produced from the execution of 10-fold cross-validation, states that the model on average produced 6 False Positive (also Type-2 errors) and 7 False Negatives (also Type-1 errors). These represent the number of accounts the model classified as normal instead of illicit or illicit instead of normal, respectively. In retrospect, although not ideal, we are mostly interested in ensuring that illicit accounts are detected; therefore the 'False Negatives'.The confusion matrix in Fig. 6 , produced from the execution of 10-fold cross-validation, states that the model on average produced 6 False Positive (also Type-2 errors) and 7 False Negatives (also Type-1 errors). These represent the number of accounts the model classified as normal instead of illicit or illicit instead of normal, respectively. In retrospect, although not ideal, we are mostly interested in ensuring that illicit accounts are detected; therefore the 'False Negatives'.</p>
        <p>Comparing the three feature importance parameters mentioned in Section 3.3 , we conclude that the 'Weight' parameter delivers similar feature importance order, especially for the top 10 features. The features retained their respective order, moving 1 or 2 places up or down respectively but remaining in the top 10 features. Whenever features were not displayed in the top 10, due to them being 9 th or 10 th usually, they were present in the top 15 features. The feature pertaining to the time difference between the first and large transaction consistently held the largest frequency score. This was followed by the 'Total Ether balance' field determined by the total available Ether value present in the account following the enacted transactions as well as the minimum value in Ether received ( Fig. 7 ).Comparing the three feature importance parameters mentioned in Section 3.3 , we conclude that the 'Weight' parameter delivers similar feature importance order, especially for the top 10 features. The features retained their respective order, moving 1 or 2 places up or down respectively but remaining in the top 10 features. Whenever features were not displayed in the top 10, due to them being 9 th or 10 th usually, they were present in the top 15 features. The feature pertaining to the time difference between the first and large transaction consistently held the largest frequency score. This was followed by the 'Total Ether balance' field determined by the total available Ether value present in the account following the enacted transactions as well as the minimum value in Ether received ( Fig. 7 ).</p>
        <p>We provide additional information pertaining to a few of the incorrectly classified accounts, namely three of each FP and FN category. These incorrectly classified accounts were derived from one of the 10-fold results for which we presented the results in Table 4 . Using the Etherscan.io search functionality we may present readily available analytics and information on any existing Ethereum 20byte account address.We provide additional information pertaining to a few of the incorrectly classified accounts, namely three of each FP and FN category. These incorrectly classified accounts were derived from one of the 10-fold results for which we presented the results in Table 4 . Using the Etherscan.io search functionality we may present readily available analytics and information on any existing Ethereum 20byte account address.</p>
        <p>• '4c15af13F6D4 95044 8104D9B97387A03dA6f9' Account was active for a period of 3 hrs in total, carrying out 5 transactions; 3 incoming and 2 outgoing on the 25 th of September 2018. All transactions were sent to or received from unique addresses.• '4c15af13F6D4 95044 8104D9B97387A03dA6f9' Account was active for a period of 3 hrs in total, carrying out 5 transactions; 3 incoming and 2 outgoing on the 25 th of September 2018. All transactions were sent to or received from unique addresses.</p>
        <p>Account shows signs of an externally owned account (EOA).Account shows signs of an externally owned account (EOA).</p>
        <p>Similar research in the domain address the problem from alternative perspectives; with the majority of works looking to detect Ponzi schemes masked as smart contracts, anomaly transactions associated with illegal activity as well as money laundering schemes. While these approaches positively contribute towards mitigating illicit activity over blockchain networks, they do not provide an approach capable of detecting such behavior at an 'account level' with a high level of accuracy.Similar research in the domain address the problem from alternative perspectives; with the majority of works looking to detect Ponzi schemes masked as smart contracts, anomaly transactions associated with illegal activity as well as money laundering schemes. While these approaches positively contribute towards mitigating illicit activity over blockchain networks, they do not provide an approach capable of detecting such behavior at an 'account level' with a high level of accuracy.</p>
        <p>Amalgamating various ideas and approaches used in similar work, mainly feature extraction and feature importance, we present a novel approach capable of detecting illicit activity on the Ethereum network at an account level using the state of the art 
            <rs type="software">XGBoost</rs> classification model. Using a balanced dataset, with 'normal' and 'illicit' accounts the model proved to be highly effective, with an average AUC of 0.994 and standard deviation of 0.0 0 07 over 10-fold cross-validation. We also note that the model manifests generalization capabilities while also being resilient towards overfitting; determined by (i) the low standard deviations in AUC and accuracy, as well as (ii) the results obtained from smaller number of k-folds for cross-validation. This was all achieved with a total execution time of less than 4 minutes (core i7-7700HQ 2.8GHz with turbo boost up to 3.8GHz and 16GB available RAM). Although efficiency is not a primary concern for such applications, the resources required in order to generate the aforementioned results are indicative of a highly scalable system.
        </p>
        <p>Assessing the rank of the feature importance, we note that the time between the first and last transaction (representing the total duration of account usage) has the largest impact on the account class. On further inspection we realise that the average time for normal and illicit accounts is 136.9 and 38.4 days, respectively. This might suggest that illicit accounts are established for the sole purpose of engaging in their respective illegal activities. The average minimum Ether sent was also 18% higher for normal accounts. A large disparity was also present in the average available total balance, with illicit accounts retaining a median of 0.0 0 0861 Ether compared to 0.001908 Ether held by normal accounts. Additionally, we also observe that the number of created contracts by an account as well as the number of unique address to which tokens were sent via ERC20 standard contracts were the least important features.Assessing the rank of the feature importance, we note that the time between the first and last transaction (representing the total duration of account usage) has the largest impact on the account class. On further inspection we realise that the average time for normal and illicit accounts is 136.9 and 38.4 days, respectively. This might suggest that illicit accounts are established for the sole purpose of engaging in their respective illegal activities. The average minimum Ether sent was also 18% higher for normal accounts. A large disparity was also present in the average available total balance, with illicit accounts retaining a median of 0.0 0 0861 Ether compared to 0.001908 Ether held by normal accounts. Additionally, we also observe that the number of created contracts by an account as well as the number of unique address to which tokens were sent via ERC20 standard contracts were the least important features.</p>
        <p>There are various possibilities for future work. One direction may be to investigate the adaptability of our proposed approach for the detection of illicit activity on other blockchain networks. Another approach would be to explore whether the described methodology may be altered to detect illicit activity at a 'transactional level'. Additionally, one may also look into other potential features which may further contribute towards improved classification results. For instance, internal transactions which do not appear on the Ethereum blockchain but are brought about through the execution of a contract (known as internal message calls) may also be analysed and included as additional features for the XG-Boost classification model. These additional message calls may provide more discriminative features which would further aid the classification model in identifying the target class (normal or illicit account).There are various possibilities for future work. One direction may be to investigate the adaptability of our proposed approach for the detection of illicit activity on other blockchain networks. Another approach would be to explore whether the described methodology may be altered to detect illicit activity at a 'transactional level'. Additionally, one may also look into other potential features which may further contribute towards improved classification results. For instance, internal transactions which do not appear on the Ethereum blockchain but are brought about through the execution of a contract (known as internal message calls) may also be analysed and included as additional features for the XG-Boost classification model. These additional message calls may provide more discriminative features which would further aid the classification model in identifying the target class (normal or illicit account).</p>
        <p>Account level detection mechanisms, however, may fall short of detecting smart contract computational logic that attempts to hide its activity from such algorithms. Therefore, future work should be undertaken to perform dynamic analysis of smart contract code in aim of detecting illicit smart contracts that both are static in nature, as well as those that aim to hide away from such detective measures. Such future work is complementary to the work undertaken in this paper.Account level detection mechanisms, however, may fall short of detecting smart contract computational logic that attempts to hide its activity from such algorithms. Therefore, future work should be undertaken to perform dynamic analysis of smart contract code in aim of detecting illicit smart contracts that both are static in nature, as well as those that aim to hide away from such detective measures. Such future work is complementary to the work undertaken in this paper.</p>
        <p>The relevant authoritative bodies are also placing a higher emphasis on activity at an account level. Authorities may also like to focus on certain types of accounts and the activity of such accounts; (i) potentially looking into dormant account activity, (ii) acquisition streams and distribution of funds and (iii) comparisons with other accounts which exhibit similar transaction patterns. Retrospectively transaction level analysis can not justify or provide sufficient reasoning towards this, and may therefore be an alternate/supportive approach to detect such illicit/abnormal activity.The relevant authoritative bodies are also placing a higher emphasis on activity at an account level. Authorities may also like to focus on certain types of accounts and the activity of such accounts; (i) potentially looking into dormant account activity, (ii) acquisition streams and distribution of funds and (iii) comparisons with other accounts which exhibit similar transaction patterns. Retrospectively transaction level analysis can not justify or provide sufficient reasoning towards this, and may therefore be an alternate/supportive approach to detect such illicit/abnormal activity.</p>
        <p>Based on the numerous tests conducted, we deduce that the illicit behavior over the Ethereum network at an 'account level' may be detected efficiently and effectively via the XGBoost classification model that takes input from past transactions and account properties. The proposed approach also presents us with insight on the importance of the input features. The time difference between the first and last transaction, the total available Ether balance and the minimum value in Ether received by an account were established to be the most important three features. Moreover, the proposed approach is conceptually simple and may be adapted to other similar problems.Based on the numerous tests conducted, we deduce that the illicit behavior over the Ethereum network at an 'account level' may be detected efficiently and effectively via the XGBoost classification model that takes input from past transactions and account properties. The proposed approach also presents us with insight on the importance of the input features. The time difference between the first and last transaction, the total available Ether balance and the minimum value in Ether received by an account were established to be the most important three features. Moreover, the proposed approach is conceptually simple and may be adapted to other similar problems.</p>
        <p>statusstatus</p>
        <p>Determines whether account executed any transactions Boolean (1 = Yes, 0 = No) resultDetermines whether account executed any transactions Boolean (1 = Yes, 0 = No) result</p>
        <p>Wrapper containing all transactions. If 'status' field is '1' then transactions are available in 'result'Wrapper containing all transactions. If 'status' field is '1' then transactions are available in 'result'</p>
        <p>https://ec.europa.eu/info/policies/justice-and-fundamental-rights/ criminal-justice/anti-money-laundering-and-counter-terrorist-financing _ en .https://ec.europa.eu/info/policies/justice-and-fundamental-rights/ criminal-justice/anti-money-laundering-and-counter-terrorist-financing _ en .</p>
        <p>http://www.fatf-gafi.org/media/fatf/documents/recommendations/ RBA-VA-VASPs.pdf .http://www.fatf-gafi.org/media/fatf/documents/recommendations/ RBA-VA-VASPs.pdf .</p>
        <p>Complete list is available in the Appendix, TableA1.Complete list is available in the Appendix, TableA1.</p>
        <p>https://bit.ly/32pmC2A .https://bit.ly/32pmC2A .</p>
        <p>https://www.originprotocol.com/en .https://www.originprotocol.com/en .</p>
        <p>The research work disclosed in this publication is partially funded by the Endeavour Scholarship Scheme (Malta). Scholarships are part-financed by the European Union -European Social Fund (ESF) -Operational Programme II Cohesion Policy 2014-2020.The research work disclosed in this publication is partially funded by the Endeavour Scholarship Scheme (Malta). Scholarships are part-financed by the European Union -European Social Fund (ESF) -Operational Programme II Cohesion Policy 2014-2020.</p>
        <p>The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper.The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper.</p>
        <p>Steven Farrugia: Methodology, Software, Validation, Formal analysis, Investigation, Data curation, Writing -original draft, Writing -review &amp; editing, Visualization, Funding acquisition. Joshua Ellul: Conceptualization, Methodology, Formal analysis, Resources, Writing -original draft, Writing -review &amp; editing, Supervision. George Azzopardi: Conceptualization, Methodology, Formal analysis, Resources, Writing -original draft, Writing -review &amp; editing, Supervision, Project administration.Steven Farrugia: Methodology, Software, Validation, Formal analysis, Investigation, Data curation, Writing -original draft, Writing -review &amp; editing, Visualization, Funding acquisition. Joshua Ellul: Conceptualization, Methodology, Formal analysis, Resources, Writing -original draft, Writing -review &amp; editing, Supervision. George Azzopardi: Conceptualization, Methodology, Formal analysis, Resources, Writing -original draft, Writing -review &amp; editing, Supervision, Project administration.</p>
        <p>Supplementary material associated with this article can be found, in the online version, at doi: 10.1016/j.eswa.2020.113318 .Supplementary material associated with this article can be found, in the online version, at doi: 10.1016/j.eswa.2020.113318 .</p>
    </text>
</tei>
