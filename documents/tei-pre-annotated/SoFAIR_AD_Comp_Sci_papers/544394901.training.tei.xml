<?xml version="1.0" encoding="UTF-8"?>
<tei xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader>
        <fileDesc xml:id="_1"/>
        <encodingDesc>
            <appInfo>
                <application version="0.8.1-SNAPSHOT" ident="GROBID" when="2024-06-13T15:16+0000">
                    <ref target="https://github.com/kermitt2/grobid">A machine learning software for extracting information from scholarly documents</ref>
                </application>
            </appInfo>
        </encodingDesc>
    </teiHeader>
    <text xml:lang="en">
        <p>To meet the requirement of social influence analytics in various applications, the problem of influence maximization has been studied in recent years. The aim is to find a limited number of nodes (i.e., users) which can activate (i.e. influence) the maximum number of nodes in social networks. However, the community diversity of influenced users is largely ignored even though it has unique value in practice. For example, the higher community diversity reduces the risk of marketing campaigns as you should not put all your eggs in one basket; the diversity can also prolong the effect of a marketing campaign in the future promotion. Motivated by this observation, this paper investigates Community-diversified Influence Maximization (CDIM) problem to efficiently find k nodes such that, if a message is initiated and spread by the k nodes, the number as well as the community diversity of the activated nodes will be maximized at the end of propagation process. This work proposes a metric to measure the community-diversified influence and addresses a series of computational challenges. Two algorithms and an innovative CPSP-Tree index have been developed. This study also investigates the situation that community definition is not specified. The effectiveness and efficiency of the proposed solutions have been verified through extensive experimental studies on five real-world social network datasets.To meet the requirement of social influence analytics in various applications, the problem of influence maximization has been studied in recent years. The aim is to find a limited number of nodes (i.e., users) which can activate (i.e. influence) the maximum number of nodes in social networks. However, the community diversity of influenced users is largely ignored even though it has unique value in practice. For example, the higher community diversity reduces the risk of marketing campaigns as you should not put all your eggs in one basket; the diversity can also prolong the effect of a marketing campaign in the future promotion. Motivated by this observation, this paper investigates Community-diversified Influence Maximization (CDIM) problem to efficiently find k nodes such that, if a message is initiated and spread by the k nodes, the number as well as the community diversity of the activated nodes will be maximized at the end of propagation process. This work proposes a metric to measure the community-diversified influence and addresses a series of computational challenges. Two algorithms and an innovative CPSP-Tree index have been developed. This study also investigates the situation that community definition is not specified. The effectiveness and efficiency of the proposed solutions have been verified through extensive experimental studies on five real-world social network datasets.</p>
        <p>Social media has become an essential platform for organizations to broadcast their policies, for companies to advertise their products, and for people to propagate their opinions. This stimulates the study of influence maximization (IM) problem. The intuition is to select k influential nodes (a node represents a social media user) in social networks, known as seeds, convince them to adopt a product (or a service, an idea, a political opinion, etc.), and utilize the "word-of-mouth" effect to spread the information with attempt to activate other nodes in the social networks to adopt it as well. The IM problem is to decide which k nodes in the social networks should be selected such that the number of nodes activated (or influenced) in the social networks are maximized [7] [18]. A large body of recent works have studied the IM problem with additional considerations. Topic-aware IM problem considers the topics of information to be spread. The possibility that a node adopts the information is affected by the interest of the node to the topic [2] [1] [5]. Competitor-aware IM problem models the propagation rate of information over social networks in order to activate more nodes before they are influenced by information from competitors [12] [13] [28]. Location-aware IM problem contemplates the physical locations of nodes to be influenced [21] [42].Social media has become an essential platform for organizations to broadcast their policies, for companies to advertise their products, and for people to propagate their opinions. This stimulates the study of influence maximization (IM) problem. The intuition is to select k influential nodes (a node represents a social media user) in social networks, known as seeds, convince them to adopt a product (or a service, an idea, a political opinion, etc.), and utilize the "word-of-mouth" effect to spread the information with attempt to activate other nodes in the social networks to adopt it as well. The IM problem is to decide which k nodes in the social networks should be selected such that the number of nodes activated (or influenced) in the social networks are maximized [7] [18]. A large body of recent works have studied the IM problem with additional considerations. Topic-aware IM problem considers the topics of information to be spread. The possibility that a node adopts the information is affected by the interest of the node to the topic [2] [1] [5]. Competitor-aware IM problem models the propagation rate of information over social networks in order to activate more nodes before they are influenced by information from competitors [12] [13] [28]. Location-aware IM problem contemplates the physical locations of nodes to be influenced [21] [42].</p>
        <p>The studies of IM problem assume the information propagation initiated from seeds follows some diffusion model. The Independent Cascade (IC) diffusion model is widely accepted and studied [18]. Under IC diffusion model, the influence of a seed decays continuously when the information spread from one node to the next in social networks until the influence is too trivial to be noticed. At the end of propagation process, the nodes are activated if it has sufficiently high probability to be influenced.The studies of IM problem assume the information propagation initiated from seeds follows some diffusion model. The Independent Cascade (IC) diffusion model is widely accepted and studied [18]. Under IC diffusion model, the influence of a seed decays continuously when the information spread from one node to the next in social networks until the influence is too trivial to be noticed. At the end of propagation process, the nodes are activated if it has sufficiently high probability to be influenced.</p>
        <p>While the focus of existing studies is on the maximum number of nodes to be activated, the community diversity of the activated nodes is largely ignored. The higher community diversity means the activated nodes are from more communities which has critical value in practice. In real world marketing, the diversity of target audience could bring many benefits [35]. As you should not put all your eggs in one basket, the diversity could reduce the risk of marketing campaigns. Also, the diversity can prolong the effect of a marketing campaign. For example, a fraction of activated nodes becomes the registered users of a product; even though it is hard to estimate who will become the registered users and even the number of registered users, it is reasonable to assume this happens randomly among the activated users; the following promotions of the same or similar products in the future will be able to reach these registered users directly, in other words, more communities.While the focus of existing studies is on the maximum number of nodes to be activated, the community diversity of the activated nodes is largely ignored. The higher community diversity means the activated nodes are from more communities which has critical value in practice. In real world marketing, the diversity of target audience could bring many benefits [35]. As you should not put all your eggs in one basket, the diversity could reduce the risk of marketing campaigns. Also, the diversity can prolong the effect of a marketing campaign. For example, a fraction of activated nodes becomes the registered users of a product; even though it is hard to estimate who will become the registered users and even the number of registered users, it is reasonable to assume this happens randomly among the activated users; the following promotions of the same or similar products in the future will be able to reach these registered users directly, in other words, more communities.</p>
        <p>This observation motivates us to investigate Communitydiversified Information Maximization (CDIM) problem. The aim is to select k nodes in a social network such that the number of activated nodes and the community diversity of the activated nodes can be maximized concurrently if the selected k nodes spread a message following IC diffusion model. This work is the first effort to investigate the community-diversified influence maximization problem. The contributions are summarized:This observation motivates us to investigate Communitydiversified Information Maximization (CDIM) problem. The aim is to select k nodes in a social network such that the number of activated nodes and the community diversity of the activated nodes can be maximized concurrently if the selected k nodes spread a message following IC diffusion model. This work is the first effort to investigate the community-diversified influence maximization problem. The contributions are summarized:</p>
        <p>• This work introduces the community-diversified influence maximization problem which has unique values in market campaigns. Due to the community-diversity, it can reduce the risk of market campaigns. Also, it breaks through the limit of existing studies which assume the activated nodes are the dead-end of information propagation. In many applications in market campaigns, however, it is reasonable that the activated nodes can be explored in the future to spread other information.• This work introduces the community-diversified influence maximization problem which has unique values in market campaigns. Due to the community-diversity, it can reduce the risk of market campaigns. Also, it breaks through the limit of existing studies which assume the activated nodes are the dead-end of information propagation. In many applications in market campaigns, however, it is reasonable that the activated nodes can be explored in the future to spread other information.</p>
        <p>• A deliberately designed metric has been proposed to evaluate CDIM by considering both the number of activated nodes and the diversity of their influenced communities concurrently.• A deliberately designed metric has been proposed to evaluate CDIM by considering both the number of activated nodes and the diversity of their influenced communities concurrently.</p>
        <p>• This study has developed two algorithms to solve CDIM problem efficiently, i.e., greedy and upper bound based algorithms. The greedy algorithm comes with reasonable approximation bound. To enable more efficient processing, the upper bound of community-diversified influence has been explored to minimize the search space of exploring seed candidates. As a further step to accelerate the efficiency, the Community-aware Partial Shortest Path tree (CPSP-Tree) has been designed to estimate the influence of candidate nodes in social networks.• This study has developed two algorithms to solve CDIM problem efficiently, i.e., greedy and upper bound based algorithms. The greedy algorithm comes with reasonable approximation bound. To enable more efficient processing, the upper bound of community-diversified influence has been explored to minimize the search space of exploring seed candidates. As a further step to accelerate the efficiency, the Community-aware Partial Shortest Path tree (CPSP-Tree) has been designed to estimate the influence of candidate nodes in social networks.</p>
        <p>• Extensive experimental evaluation have been conducted on five real-world datasets. The test results have demonstrated the superiority of CDIM solutions in terms of effectiveness and the processing efficiency.• Extensive experimental evaluation have been conducted on five real-world datasets. The test results have demonstrated the superiority of CDIM solutions in terms of effectiveness and the processing efficiency.</p>
        <p>The remainder of this paper is organized as follows. The related work is presented in Section 2. Section 3 defines the CDIM problem and the objective function. The monotonous and submodular properties of the problem has been proved in Section 3.3. In Section 4, we propose two algorithms to solve the CDIM problem. Section 5 introduces CPSP-Tree and the associated processing method. Then, we discuss the solution in Section 6 if the community detection method is not available. We analyze and discuss the experimental results in Section 7 and conclude this paper in Section 8.The remainder of this paper is organized as follows. The related work is presented in Section 2. Section 3 defines the CDIM problem and the objective function. The monotonous and submodular properties of the problem has been proved in Section 3.3. In Section 4, we propose two algorithms to solve the CDIM problem. Section 5 introduces CPSP-Tree and the associated processing method. Then, we discuss the solution in Section 6 if the community detection method is not available. We analyze and discuss the experimental results in Section 7 and conclude this paper in Section 8.</p>
        <p>Kempe et al. [18] has proposed two discrete influence propagation models, Independent Cascade (IC) model and Linear Thresholds (LT) model. Based on the two models, there are lots of work focusing on influence maximization problem, e.g., [5] [6] [9] [22] [26] [7]. The aim is to select a limited number of nodes in social networks as seeds such that, the information initiated by the seeds in the social networks will activate the maximum number of nodes at the end of influence propagation process following either IC model or LT model. While considering the number, the existing studies ignore the community diversity of activated nodes in the social networks.Kempe et al. [18] has proposed two discrete influence propagation models, Independent Cascade (IC) model and Linear Thresholds (LT) model. Based on the two models, there are lots of work focusing on influence maximization problem, e.g., [5] [6] [9] [22] [26] [7]. The aim is to select a limited number of nodes in social networks as seeds such that, the information initiated by the seeds in the social networks will activate the maximum number of nodes at the end of influence propagation process following either IC model or LT model. While considering the number, the existing studies ignore the community diversity of activated nodes in the social networks.</p>
        <p>Compared to other studies, the problem defined in [35] is more relevant to CDIM. The solution in [35] aims to enforce the diversity on seeds. The idea behind is that if the seeds are diverse, then the resultant activated nodes would be diverse too. In [35], the diversity is defined on categories, which is similar to Topic-aware IM [5]. Given a set of node, the higher diversity means more nodes belong to more categories. Different from [35], the diversity concerns in CDIM is the number of different communities which are featured by dense internal connectivity and loose external connectivity in social networks. Also, in the context of community diversity, it is unclear whether the diversity of seeds is related to the optimal solution of CDIM or not due to the complexity of the problem.Compared to other studies, the problem defined in [35] is more relevant to CDIM. The solution in [35] aims to enforce the diversity on seeds. The idea behind is that if the seeds are diverse, then the resultant activated nodes would be diverse too. In [35], the diversity is defined on categories, which is similar to Topic-aware IM [5]. Given a set of node, the higher diversity means more nodes belong to more categories. Different from [35], the diversity concerns in CDIM is the number of different communities which are featured by dense internal connectivity and loose external connectivity in social networks. Also, in the context of community diversity, it is unclear whether the diversity of seeds is related to the optimal solution of CDIM or not due to the complexity of the problem.</p>
        <p>The personalized social influential tags exploration problem has been studied [25]. However, it is irrelevant to CDIM problem. Given a target user, from a set of tags which characterize the content propagated in a social network, it aims to exact k tags that can maximize the user's social influence. In [43], the community-based greedy algorithm has been studied to mine a set of top-k influential nodes in a given mobile social network such that the number of activated nodes is maximized using an extended IC model. The greedy algorithm is expensive for solving the influence maximization problem on a large-scale network. So it proposes a community based greedy algorithm which mine the influential nodes in each community rather than the whole network. Other studies related to social network influence include the most influential community search in a social network [23] and searching objects with high influence in terms of spatial closeness [39] [15].The personalized social influential tags exploration problem has been studied [25]. However, it is irrelevant to CDIM problem. Given a target user, from a set of tags which characterize the content propagated in a social network, it aims to exact k tags that can maximize the user's social influence. In [43], the community-based greedy algorithm has been studied to mine a set of top-k influential nodes in a given mobile social network such that the number of activated nodes is maximized using an extended IC model. The greedy algorithm is expensive for solving the influence maximization problem on a large-scale network. So it proposes a community based greedy algorithm which mine the influential nodes in each community rather than the whole network. Other studies related to social network influence include the most influential community search in a social network [23] and searching objects with high influence in terms of spatial closeness [39] [15].</p>
        <p>A great deal of work has been devoted to find communities in large networks, and much of this has been devoted to formalize the intuition that a community is a set of nodes that has more and/or better links between its members than with the remainder of the network.A great deal of work has been devoted to find communities in large networks, and much of this has been devoted to formalize the intuition that a community is a set of nodes that has more and/or better links between its members than with the remainder of the network.</p>
        <p>A line of work is to discover communities based on explicit community model like k-core [24] and k-truss [17]. The k-core of a graph is the largest subgraph within which each node has at least k connections. In the induced subgraph (i.e., a k-core community), since it only requires each node has k neighbors, two nodes may have large hops (i.e., less cohesive). Given a graph G, the k-truss of G is the largest subgraph in which every edge is contained in at least (k-2) triangles within the subgraph. The k-truss is a type of cohesive subgraph defined based on triangle which models the stable relationship among three nodes. With edge connectivity constraints, the induced subgraph (i.e., a k-truss community) is connected and cohesive. But the connectivity is so strong that k-truss can only be used to discover communities of very small size (i.e., not a society). In [4], the explicit community model called k-r Maximal Cliques (krMC) considers the social network influence of each community.A line of work is to discover communities based on explicit community model like k-core [24] and k-truss [17]. The k-core of a graph is the largest subgraph within which each node has at least k connections. In the induced subgraph (i.e., a k-core community), since it only requires each node has k neighbors, two nodes may have large hops (i.e., less cohesive). Given a graph G, the k-truss of G is the largest subgraph in which every edge is contained in at least (k-2) triangles within the subgraph. The k-truss is a type of cohesive subgraph defined based on triangle which models the stable relationship among three nodes. With edge connectivity constraints, the induced subgraph (i.e., a k-truss community) is connected and cohesive. But the connectivity is so strong that k-truss can only be used to discover communities of very small size (i.e., not a society). In [4], the explicit community model called k-r Maximal Cliques (krMC) considers the social network influence of each community.</p>
        <p>The other line of research focuses on implicit community detection models which concerns the global connectivity of the social network and the discovered communities often have small cohesiveness. Newman and Girvan in [30] proposed a quantitative measure, called modularity, to assess the quality of community structures, and formulated community discovery as an optimization problem. The key idea is similar to graph partitioning, which iteratively removes the edge with the highest betweenness score. Betweenness based community detection metric was also studied by Girvan and Newman in [11]. Ruan and Zhang [33] proposed a more efficient spectral algorithm to find high quality communities by applying k-way partitioning and recursive 2-way partitioning strategies [45]. Satuluri and Parthasarathy in [34] developed efficient Markov clustering algorithms to identify communities by using stochastic flow technique. The key idea in it is to enhance flow to well-connected nodes, i.e., rich get richer and poor get poorer. LPA [32] has been evaluated and recommended to be the better choice as an accurate and efficient community detection technique in the recent studies [40] as well as [20]. It works as follows. Each node in a social network is first given a unique label. At every iteration, each node is updated by choosing the label which most of its neighbors have. If a node happens to be multiple labels, then one of these would be selected randomly. After several iterations, the communities will be uncovered via the labels where each label represents a community.The other line of research focuses on implicit community detection models which concerns the global connectivity of the social network and the discovered communities often have small cohesiveness. Newman and Girvan in [30] proposed a quantitative measure, called modularity, to assess the quality of community structures, and formulated community discovery as an optimization problem. The key idea is similar to graph partitioning, which iteratively removes the edge with the highest betweenness score. Betweenness based community detection metric was also studied by Girvan and Newman in [11]. Ruan and Zhang [33] proposed a more efficient spectral algorithm to find high quality communities by applying k-way partitioning and recursive 2-way partitioning strategies [45]. Satuluri and Parthasarathy in [34] developed efficient Markov clustering algorithms to identify communities by using stochastic flow technique. The key idea in it is to enhance flow to well-connected nodes, i.e., rich get richer and poor get poorer. LPA [32] has been evaluated and recommended to be the better choice as an accurate and efficient community detection technique in the recent studies [40] as well as [20]. It works as follows. Each node in a social network is first given a unique label. At every iteration, each node is updated by choosing the label which most of its neighbors have. If a node happens to be multiple labels, then one of these would be selected randomly. After several iterations, the communities will be uncovered via the labels where each label represents a community.</p>
        <p>Moreover, other community detection methods have been studied with edge content consideration in [31], with clique definition and parallel algorithm in [14]. More details can be found in surveys [19,40].Moreover, other community detection methods have been studied with edge content consideration in [31], with clique definition and parallel algorithm in [14]. More details can be found in surveys [19,40].</p>
        <p>The diversity of search results has attracted the attention from researchers in different fields. For instance, the diversified keyword search have been studied in database community [37] [38] [48], in Web search [16] [44], in information retrieval [8] [41]. In these studies, a max-sum type objective function is typically used to concurrently consider both relevance and diversity of the search results. The interested readers are referred to read the survey [10]. The problem in all the above works are very different from our CDIM problem. Given search criteria, their aim is to find items which are most relevant and diverse. In contrast, the objective of CDIM problem is to find seeds which can influence maximum number of nodes from as many different communities as possible.The diversity of search results has attracted the attention from researchers in different fields. For instance, the diversified keyword search have been studied in database community [37] [38] [48], in Web search [16] [44], in information retrieval [8] [41]. In these studies, a max-sum type objective function is typically used to concurrently consider both relevance and diversity of the search results. The interested readers are referred to read the survey [10]. The problem in all the above works are very different from our CDIM problem. Given search criteria, their aim is to find items which are most relevant and diverse. In contrast, the objective of CDIM problem is to find seeds which can influence maximum number of nodes from as many different communities as possible.</p>
        <p>A social network is modeled as a directed graph G = (V, E), where a node in V represents one social media user, the edge (u, v) in E represents the (follower, followee) relationship, and each edge (u, v) is associated with a value w u,v to represent the propagation probability along the edge. Note edge (u, v) is directional, v is an out-neighbor of u and u is an in-neighbor of v. There are different diffusion models which can be used to define influence propagation process. Without loss of generality, we adopt the Independent Cascade (IC) diffusion model [7,18]. Initially, every node is inactive. If a node u is selected as a seed, u becomes active and attempts to activate one of its inactive outneighbors. The newly activated nodes will attempt to activate their inactive out-neighbors. Regardless of success or not, the same node will never get second chance to activate the same inactive out-neighbor. This process terminates when no more inactive nodes can be activated. In particular, we say a node v is successfully activated by a set S of seeds if and only if the overall influence from S to v is above a given threshold. In addition, the success of node u in activating out-neighbor v is determined via the maximum influence path [29].A social network is modeled as a directed graph G = (V, E), where a node in V represents one social media user, the edge (u, v) in E represents the (follower, followee) relationship, and each edge (u, v) is associated with a value w u,v to represent the propagation probability along the edge. Note edge (u, v) is directional, v is an out-neighbor of u and u is an in-neighbor of v. There are different diffusion models which can be used to define influence propagation process. Without loss of generality, we adopt the Independent Cascade (IC) diffusion model [7,18]. Initially, every node is inactive. If a node u is selected as a seed, u becomes active and attempts to activate one of its inactive outneighbors. The newly activated nodes will attempt to activate their inactive out-neighbors. Regardless of success or not, the same node will never get second chance to activate the same inactive out-neighbor. This process terminates when no more inactive nodes can be activated. In particular, we say a node v is successfully activated by a set S of seeds if and only if the overall influence from S to v is above a given threshold. In addition, the success of node u in activating out-neighbor v is determined via the maximum influence path [29].</p>
        <p>In social networks, the subset of nodes S ⊆ V, which are active initially before influence propagation process starts, are known as seeds. Each seed spreads information to inactive nodes in the social networks. For an inactive node v, we define the aggregated probability that v is activated by the seeds in S :In social networks, the subset of nodes S ⊆ V, which are active initially before influence propagation process starts, are known as seeds. Each seed spreads information to inactive nodes in the social networks. For an inactive node v, we define the aggregated probability that v is activated by the seeds in S :</p>
        <p>where p max u,v is the maximum influential path from u to v.where p max u,v is the maximum influential path from u to v.</p>
        <p>) is the probability that u can influence v along the path p max u,v , i.e., Pr(p max u,v ) = w u,v i × • • • × w v j ,v . Since p max u,v is the maximum influential path, Pr(p max u,v ) is greater than that along any other path from u to v in the social network. Definition 2. (Activated Nodes) Given a set of seeds S , the node set σ(S ) is a subset of nodes in V and those nodes can be activated by S :) is the probability that u can influence v along the path p max u,v , i.e., Pr(p max u,v ) = w u,v i × • • • × w v j ,v . Since p max u,v is the maximum influential path, Pr(p max u,v ) is greater than that along any other path from u to v in the social network. Definition 2. (Activated Nodes) Given a set of seeds S , the node set σ(S ) is a subset of nodes in V and those nodes can be activated by S :</p>
        <p>where δ is the activation threshold. (3)where δ is the activation threshold. (3)</p>
        <p>Given a set of seeds S , we define the community diversity of the nodes activated by S . As we know, the nodes in social networks can be grouped into different communities. If the activated users are from more communities, it implies the higher diversity. The community diversity is evaluated as follows: Definition 4. (Community Diversity Function) Suppose the nodes in a social network G = (V, E) have been organized into m communities, denoted as C = {C 1 , ...C m }. Given a set of seeds S , the diversity of nodes activated by S is defined as:Given a set of seeds S , we define the community diversity of the nodes activated by S . As we know, the nodes in social networks can be grouped into different communities. If the activated users are from more communities, it implies the higher diversity. The community diversity is evaluated as follows: Definition 4. (Community Diversity Function) Suppose the nodes in a social network G = (V, E) have been organized into m communities, denoted as C = {C 1 , ...C m }. Given a set of seeds S , the diversity of nodes activated by S is defined as:</p>
        <p>where v j is a node activated by S (i.e., v j ∈ σ(S )) and a member in community C i , r(v j ) represents the importance of v j in social networks.where v j is a node activated by S (i.e., v j ∈ σ(S )) and a member in community C i , r(v j ) represents the importance of v j in social networks.</p>
        <p>D(S ) is greater when the community diversity of activated nodes increases. Specifically, when activating a node from a new community (i.e., this community does not have any activated node yet), the higher score is awarded. For the nodes from the same community, the award for activating them decreases by applying the square root operator. The similar idea has been used in document summarization [27]. For node v j , the importance in social networks r(v j ) can be the degree of v j , the PageRank score or the betweenness values of v j , or any other user-defined score function. The different values of nodes' importance may help to discover the effective communities via considering the real influence of nodes and communities. But this is out of this research work. Therefore, in this work, r(v j ) is set as 1 by default for the generalization. Definition 5. (Community-diversified Influence Maximization (CDIM)) Given a social network G = (V, E) and an integer k, CDIM problem aims to find a set of seeds S ⊆ V satisfying:D(S ) is greater when the community diversity of activated nodes increases. Specifically, when activating a node from a new community (i.e., this community does not have any activated node yet), the higher score is awarded. For the nodes from the same community, the award for activating them decreases by applying the square root operator. The similar idea has been used in document summarization [27]. For node v j , the importance in social networks r(v j ) can be the degree of v j , the PageRank score or the betweenness values of v j , or any other user-defined score function. The different values of nodes' importance may help to discover the effective communities via considering the real influence of nodes and communities. But this is out of this research work. Therefore, in this work, r(v j ) is set as 1 by default for the generalization. Definition 5. (Community-diversified Influence Maximization (CDIM)) Given a social network G = (V, E) and an integer k, CDIM problem aims to find a set of seeds S ⊆ V satisfying:</p>
        <p>where σ(S ) represents the set of nodes activated by S , D(σ(S )) represents the community diversity of σ(S ); λ ∈ [0, 1] is the trade-off parameter to balance the two objectives, i.e., the number and the community diversity of the activated nodes; |V| and D(V) are the constants for normalization.where σ(S ) represents the set of nodes activated by S , D(σ(S )) represents the community diversity of σ(S ); λ ∈ [0, 1] is the trade-off parameter to balance the two objectives, i.e., the number and the community diversity of the activated nodes; |V| and D(V) are the constants for normalization.</p>
        <p>The evaluation metric φ(.) in Equation ( 5) is monotonous and submodular. To prove this, we show that |σ(.)| and D(.) are monotonous and submodular respectively. Given any tradeoff parameter λ ∈ [0, 1], the aggregation function of two monotonous and submodular functions is still monotonous and submodular.The evaluation metric φ(.) in Equation ( 5) is monotonous and submodular. To prove this, we show that |σ(.)| and D(.) are monotonous and submodular respectively. Given any tradeoff parameter λ ∈ [0, 1], the aggregation function of two monotonous and submodular functions is still monotonous and submodular.</p>
        <p>The influence maximization using IC models has been proved (Theorem 2.2 in [18], Theorem 2 in [28]). it is not obvious for the adapted function |σ(.)| to be true. Therefore, we summarize the proof as below.The influence maximization using IC models has been proved (Theorem 2.2 in [18], Theorem 2 in [28]). it is not obvious for the adapted function |σ(.)| to be true. Therefore, we summarize the proof as below.</p>
        <p>Each social network can be treated as a random graph. Each edge (u, v) ∈ E is associated with a random Bernoulli variable governed by w u,v , which controls the likelihood u activates v. Let X denote the entire probability space constituting all possible determined influence propagation graphs. A determined influence propagation graph is generated by flipping a coin of bias w u,v for every edge (u, v) ∈ E to determine if (u, v) exists in the determined graph. Then we have Pr(v|S ) = x∈X P(x)I(S , v, x), where P(x) is the probability of a possible determined graph x, and I(S , v, x) is an indicator to say if v can be reached from one of nodes in S in the determined graph ,v,x) equals 1, i.e., v is reachable from S in the determined graph x, then I(S ∪ {u}, v, x) must be 1. Conversely, it doesn't hold, i.e., if I(S ∪ {u}, v, x) is 1, then I(S , v, x) may be 0 or 1. Since P(x) ∈ (0, 1], x∈X P(x) I(., v, x) is monotonous. Thus,Each social network can be treated as a random graph. Each edge (u, v) ∈ E is associated with a random Bernoulli variable governed by w u,v , which controls the likelihood u activates v. Let X denote the entire probability space constituting all possible determined influence propagation graphs. A determined influence propagation graph is generated by flipping a coin of bias w u,v for every edge (u, v) ∈ E to determine if (u, v) exists in the determined graph. Then we have Pr(v|S ) = x∈X P(x)I(S , v, x), where P(x) is the probability of a possible determined graph x, and I(S , v, x) is an indicator to say if v can be reached from one of nodes in S in the determined graph ,v,x) equals 1, i.e., v is reachable from S in the determined graph x, then I(S ∪ {u}, v, x) must be 1. Conversely, it doesn't hold, i.e., if I(S ∪ {u}, v, x) is 1, then I(S , v, x) may be 0 or 1. Since P(x) ∈ (0, 1], x∈X P(x) I(., v, x) is monotonous. Thus,</p>
        <p>is the set of nodes reachable from u, but not reachable from S , in the determined graph x. As S ⊆ T , we have R x (S ∪{u})-R x (S ) must have equal or more additional reachable nodes than R x (T ∪ {u}) -R x (T ). Thus |R x (.)| is a submodular function. Noticing that |σ(.)| is a non-negative linear combination of submodular functions R x (.) over the determined graph space X with the threshold δ. Thus, |σ(.)| is also submodular. The proof of Lemma 1 is proved.is the set of nodes reachable from u, but not reachable from S , in the determined graph x. As S ⊆ T , we have R x (S ∪{u})-R x (S ) must have equal or more additional reachable nodes than R x (T ∪ {u}) -R x (T ). Thus |R x (.)| is a submodular function. Noticing that |σ(.)| is a non-negative linear combination of submodular functions R x (.) over the determined graph space X with the threshold δ. Thus, |σ(.)| is also submodular. The proof of Lemma 1 is proved.</p>
        <p>Since σ(.) is a monotone and submodular function to be proved in Lemma 1, we have ∆(u|S ) ≥ ∆(u|T ) for any S ⊆ T ⊆ V and u ∈ V \ T where ∆(u|S ) = σ(S ∪ {u}) -σ(S ) representing the set of nodes that are activated by u, but not by S .Since σ(.) is a monotone and submodular function to be proved in Lemma 1, we have ∆(u|S ) ≥ ∆(u|T ) for any S ⊆ T ⊆ V and u ∈ V \ T where ∆(u|S ) = σ(S ∪ {u}) -σ(S ) representing the set of nodes that are activated by u, but not by S .</p>
        <p>) is a monotone and submodular function, then D(.) must possess the general submodular property. We can prove D i (.) being a monotone and submodular function by proving v j ∈C i ∩σ(S ) r(v j ) monotonous and submodular because applying the square root to a monotone submodular function yields a submodular function, and summing them all together retains submodularity.) is a monotone and submodular function, then D(.) must possess the general submodular property. We can prove D i (.) being a monotone and submodular function by proving v j ∈C i ∩σ(S ) r(v j ) monotonous and submodular because applying the square root to a monotone submodular function yields a submodular function, and summing them all together retains submodularity.</p>
        <p>From ∆(u|SFrom ∆(u|S</p>
        <p>) for the same community C i . Thus, for any S ⊆ T ⊆ V and u ∈ V \ T , it can conclude that v j ∈C i ∩σ(S ∪{u}) r(v j )v j ∈C i ∩σ(S ) r(v j ) ≥ v j ∈C i ∩σ(T ∪{u}) r(v j )v j ∈C i ∩σ(T ) r(v j ). Therefore, we can see that v j ∈C i ∩σ(S ) r(v j ) satisfies the submodular property. Obviously, it also satisfies the monotone property. Lemma 2 is proved.) for the same community C i . Thus, for any S ⊆ T ⊆ V and u ∈ V \ T , it can conclude that v j ∈C i ∩σ(S ∪{u}) r(v j )v j ∈C i ∩σ(S ) r(v j ) ≥ v j ∈C i ∩σ(T ∪{u}) r(v j )v j ∈C i ∩σ(T ) r(v j ). Therefore, we can see that v j ∈C i ∩σ(S ) r(v j ) satisfies the submodular property. Obviously, it also satisfies the monotone property. Lemma 2 is proved.</p>
        <p>This section proposes two solutions of CDIM problem.This section proposes two solutions of CDIM problem.</p>
        <p>The monotone and submodularity property of φ(.) shown in Section 3.3 guarantees that the greedy algorithm of CDIM problem is with (1 -1 e -)-approximation.The monotone and submodularity property of φ(.) shown in Section 3.3 guarantees that the greedy algorithm of CDIM problem is with (1 -1 e -)-approximation.</p>
        <p>Initialize temporary variants u best = ∅, Score best = 0;Initialize temporary variants u best = ∅, Score best = 0;</p>
        <p>4:4:</p>
        <p>for each node u ∈ V \ S i-1 do 5:for each node u ∈ V \ S i-1 do 5:</p>
        <p>if ∆(u) ≥ Score best then 7:if ∆(u) ≥ Score best then 7:</p>
        <p>Score best = ∆(u);Score best = ∆(u);</p>
        <p>S i = S i-1 ∪ {u best };S i = S i-1 ∪ {u best };</p>
        <p>10:10:</p>
        <p>i + +; 11: return S i ; Algorithm 1 briefly states the procedure of the standard greedy algorithm. Suppose there are m communities in social networks. Initially, the seed set S is empty. The greedy algorithm runs by k iterations. At iteration i, if a node u leads to the maximal community-diversified influence gain, denoted as ∆(u), u is selected as a seed and inserted into S (denoted as S i-1 before inserting the new seed at iteration i). The communitydiversified influence gain is defined asi + +; 11: return S i ; Algorithm 1 briefly states the procedure of the standard greedy algorithm. Suppose there are m communities in social networks. Initially, the seed set S is empty. The greedy algorithm runs by k iterations. At iteration i, if a node u leads to the maximal community-diversified influence gain, denoted as ∆(u), u is selected as a seed and inserted into S (denoted as S i-1 before inserting the new seed at iteration i). The communitydiversified influence gain is defined as</p>
        <p>In this work, φ(.) is calculated based on the sampling technique discussed in [7,18]. The time complexity of the greedy algorithm is O(kn 2 • 1 2 2 log n η ) where n is the number of nodes in the social network, and η are two sampling parameters in [7,18]. The complexity consists of two parts: the first one O(kn) means that the algorithm needs to run k iterations and, at each iteration, it requires to probe each node in the social network; the second part O(n • 1 2 2 log n η ) means that the estimation of φ(S ) needs to check each node in the social network to determine whether it can be activated in the sampled graphs of size 1 2 2 log n η . The error bound of the greedy algorithm is (1 -1 e -) where (1 -1 e ) comes from the greedy approximation and comes from the sampling approximation.In this work, φ(.) is calculated based on the sampling technique discussed in [7,18]. The time complexity of the greedy algorithm is O(kn 2 • 1 2 2 log n η ) where n is the number of nodes in the social network, and η are two sampling parameters in [7,18]. The complexity consists of two parts: the first one O(kn) means that the algorithm needs to run k iterations and, at each iteration, it requires to probe each node in the social network; the second part O(n • 1 2 2 log n η ) means that the estimation of φ(S ) needs to check each node in the social network to determine whether it can be activated in the sampled graphs of size 1 2 2 log n η . The error bound of the greedy algorithm is (1 -1 e -) where (1 -1 e ) comes from the greedy approximation and comes from the sampling approximation.</p>
        <p>To improve the efficiency of the greedy algorithm, we develop an upper bound based approach in order to reduce the unnecessary computations as much as possible. Next, we show the existence of upper bound. Lemma 3. Given any node u, if it is selected as a seed at one of k iterations, the community-diversified influence gain cannot exceed the community-diversified influence gain if u is the first selected seed.To improve the efficiency of the greedy algorithm, we develop an upper bound based approach in order to reduce the unnecessary computations as much as possible. Next, we show the existence of upper bound. Lemma 3. Given any node u, if it is selected as a seed at one of k iterations, the community-diversified influence gain cannot exceed the community-diversified influence gain if u is the first selected seed.</p>
        <p>Proof. Since φ(.) has been proved to be monotonous and submodular in Section 3.3, we can derive that ∆(u|S i-1 ) ≥ ∆(u|S i ) for any node u ∈ V \ S i where S i-1 ⊆ S i . Let ∆ i (u) denote the community-diversified influence gain of u at iteration i. If ∆ i (u) is greater than ∆ i (v) for any v ∈ V \ S i , v u, u is selected as a seed at iteration i. Thus, we have ∆ i-1 (u) ≥ ∆ i (u). It means that the community-diversified influence gain by selecting a node as a new seed in the earlier iterations must be not less than that by selecting it in the later iterations. In addition, it is easy to see ∆ 0 (u) = φ({u}). So ∆ 0 (u) is the upper bound of the communitydiversified influence gain by selecting u as a seed at any of the k iterations.Proof. Since φ(.) has been proved to be monotonous and submodular in Section 3.3, we can derive that ∆(u|S i-1 ) ≥ ∆(u|S i ) for any node u ∈ V \ S i where S i-1 ⊆ S i . Let ∆ i (u) denote the community-diversified influence gain of u at iteration i. If ∆ i (u) is greater than ∆ i (v) for any v ∈ V \ S i , v u, u is selected as a seed at iteration i. Thus, we have ∆ i-1 (u) ≥ ∆ i (u). It means that the community-diversified influence gain by selecting a node as a new seed in the earlier iterations must be not less than that by selecting it in the later iterations. In addition, it is easy to see ∆ 0 (u) = φ({u}). So ∆ 0 (u) is the upper bound of the communitydiversified influence gain by selecting u as a seed at any of the k iterations.</p>
        <p>According to Lemma 3, if the community-diversified influence gain of node u at iteration i, denoted as ∆ i (u), is known, we can safely prune any node if the upper bound of its communitydiversified influence gain is less than ∆ i (u). Furthermore, the upper bounds provide the probing priority for the nodes not pruned. That is, the nodes with higher upper bounds should be evaluated earlier.According to Lemma 3, if the community-diversified influence gain of node u at iteration i, denoted as ∆ i (u), is known, we can safely prune any node if the upper bound of its communitydiversified influence gain is less than ∆ i (u). Furthermore, the upper bounds provide the probing priority for the nodes not pruned. That is, the nodes with higher upper bounds should be evaluated earlier.</p>
        <p>Besides using the sole influence of a node as an upper bound, we also explore the upper bound based on the intermediate computational results, which allow us to avoid computing community-diversified influence gain of many nodes at each iteration and thus further improve the efficiency of the whole algorithm.Besides using the sole influence of a node as an upper bound, we also explore the upper bound based on the intermediate computational results, which allow us to avoid computing community-diversified influence gain of many nodes at each iteration and thus further improve the efficiency of the whole algorithm.</p>
        <p>Lemma 4. Suppose we have a seed candidate node u * with community-diversified influence gain ∆ i (u * ) at the i-th iteration, and the seed set S i-1 has been identified. For any seed candidate node u, computing community-diversified influence gain of u can be avoided at the i-th iteration if u satisfiesLemma 4. Suppose we have a seed candidate node u * with community-diversified influence gain ∆ i (u * ) at the i-th iteration, and the seed set S i-1 has been identified. For any seed candidate node u, computing community-diversified influence gain of u can be avoided at the i-th iteration if u satisfies</p>
        <p>where x i-1 is the selected seed node at the (i -1)-th iteration.where x i-1 is the selected seed node at the (i -1)-th iteration.</p>
        <p>Proof. We knowProof. We know</p>
        <p>Thus, for any node u, the upper bound of its communitydiversified influence gain in the i-th iteration can be estimated using φ({S i-2 ∪ {u}}) + φ({x i-1 }) -φ(S i-1 ). If the upper bound is lower than or equal to the community-diversified influence gain ∆ i (u * ) of an observed candidate u * in the i-th iteration, then u can be safely skipped without computing exact communitydiversified influence gain.Thus, for any node u, the upper bound of its communitydiversified influence gain in the i-th iteration can be estimated using φ({S i-2 ∪ {u}}) + φ({x i-1 }) -φ(S i-1 ). If the upper bound is lower than or equal to the community-diversified influence gain ∆ i (u * ) of an observed candidate u * in the i-th iteration, then u can be safely skipped without computing exact communitydiversified influence gain.</p>
        <p>Algorithm 2 demonstrates the procedure of upper bound algorithm. At the beginning, we initialize the algorithm. In Line 5-Line 17, we run k iterations and select the best seed node at each iteration. In Line 7-Line 15, we only check the nodes having its sole influence φ({u}) larger than the maximal community-diversified influence gain of the currently observed nodes (Lemma 3). And then we check if it satisfies the condition specified in Lemma 4 at Line 8. If the node u can successfully pass the two filter conditions, then computing the community-diversified influence gain of u in Line 11-Line 15. Among all observed seed candidates, the maximal communitydiversified influence gain is maintained by maxMarGain. for each node u ∈ V \ S i-1 and φ({u}) ≥ maxMarGain do 8: Compute φ(S i-1 ∪ {u});Algorithm 2 demonstrates the procedure of upper bound algorithm. At the beginning, we initialize the algorithm. In Line 5-Line 17, we run k iterations and select the best seed node at each iteration. In Line 7-Line 15, we only check the nodes having its sole influence φ({u}) larger than the maximal community-diversified influence gain of the currently observed nodes (Lemma 3). And then we check if it satisfies the condition specified in Lemma 4 at Line 8. If the node u can successfully pass the two filter conditions, then computing the community-diversified influence gain of u in Line 11-Line 15. Among all observed seed candidates, the maximal communitydiversified influence gain is maintained by maxMarGain. for each node u ∈ V \ S i-1 and φ({u}) ≥ maxMarGain do 8: Compute φ(S i-1 ∪ {u});</p>
        <p>if φ(S i-1 ∪ {u}) -φ(S i-1 ) &gt;maxMarGain then x i = u; 16:if φ(S i-1 ∪ {u}) -φ(S i-1 ) &gt;maxMarGain then x i = u; 16:</p>
        <p>φ(S i ) = φ(S i-1 )+ maxMarGain; 18: return S i ;φ(S i ) = φ(S i-1 )+ maxMarGain; 18: return S i ;</p>
        <p>Given a set of seeds S and any node v j in a community i , this section proposes an innovative method to efficiently determine whether v j can be activated by S or not.Given a set of seeds S and any node v j in a community i , this section proposes an innovative method to efficiently determine whether v j can be activated by S or not.</p>
        <p>Consider a social network G = (V, E) with propagation probability w u,v on edge (u, v) ∈ E. Let p u,c be any path from u to v and the sequence of nodes along the path is &lt; n 1 , n 2 , .., n x &gt; where n 1 ≡ u and n x ≡ v. As introduced in Section 3, the probability that v is influenced by u through this path equals to the product of propagation probabilities on edges along this path, denoted asConsider a social network G = (V, E) with propagation probability w u,v on edge (u, v) ∈ E. Let p u,c be any path from u to v and the sequence of nodes along the path is &lt; n 1 , n 2 , .., n x &gt; where n 1 ≡ u and n x ≡ v. As introduced in Section 3, the probability that v is influenced by u through this path equals to the product of propagation probabilities on edges along this path, denoted as</p>
        <p>As each node has only one chance to activate its neighbors, the best chance that v is influenced by u is through the most influential path from u to v, known as p max u,v , i.e., the path with the maximum influence probability as introduced in Section 3.As each node has only one chance to activate its neighbors, the best chance that v is influenced by u is through the most influential path from u to v, known as p max u,v , i.e., the path with the maximum influence probability as introduced in Section 3.</p>
        <p>Given a set of seeds S and a node v, the aggregated influence probability from S to v can be evaluated following Equation (1), i.e., through the most influential paths starting from all seeds in S to v.Given a set of seeds S and a node v, the aggregated influence probability from S to v can be evaluated following Equation (1), i.e., through the most influential paths starting from all seeds in S to v.</p>
        <p>Given a path from u to v in a social network G, the influence probability is 1 , the problem searching for p max u,v is transformed to search for the shortest path from u to v. Once the shortest path p max u,v is obtained,Given a path from u to v in a social network G, the influence probability is 1 , the problem searching for p max u,v is transformed to search for the shortest path from u to v. Once the shortest path p max u,v is obtained,</p>
        <p>where p max u,v .dist is the shortest path distance.where p max u,v .dist is the shortest path distance.</p>
        <p>Community-aware Partial Shortest Path Tree (
            <rs type="software">CPSP-</rs>Tree)
        </p>
        <p>Suppose the path transformation has been done. To estimate the influence probability of a seed set S to any node v, a shortest path tree can be constructed for every node u in the social network G where the root is v. For any node u in the tree, the path to root corresponds to the shortest path from u to v, i.e., p max u,v . So, the influence probability from u to v (i.e., Pr(p max u,v )) can be directly calculated. The shortest path tree is the compressed version of the shortest paths from all other nodes in G to v by merging the same node appearing in different paths. Given a set of seeds S and a node v, the aggregated influence probability of S to v can be computed by finding all seed nodes in S in the tree; for each seed node, the influence probability to v is calculated, then we compute the aggregated influence following Equation (1).Suppose the path transformation has been done. To estimate the influence probability of a seed set S to any node v, a shortest path tree can be constructed for every node u in the social network G where the root is v. For any node u in the tree, the path to root corresponds to the shortest path from u to v, i.e., p max u,v . So, the influence probability from u to v (i.e., Pr(p max u,v )) can be directly calculated. The shortest path tree is the compressed version of the shortest paths from all other nodes in G to v by merging the same node appearing in different paths. Given a set of seeds S and a node v, the aggregated influence probability of S to v can be computed by finding all seed nodes in S in the tree; for each seed node, the influence probability to v is calculated, then we compute the aggregated influence following Equation (1).</p>
        <p>Building and maintaining complete shortest path trees is time and space consuming. To handle this issue, we propose Community-aware Partial Shortest Path Tree. For each community C i , a node is selected as the community representative v C i . Note, for community C i , we only build and maintain one shortest path tree, i.e., the shortest path tree of the representative node v C i . Given any node u in G, the shortest path distance from u to v C i can be retrieved in the shortest path tree; the shortest path distance from u to any other node in C i cannot be obtained from the shortest path tree but the upper and lower bound can be estimated using triangle inequality. Figure 1 shows an example. p max u,v 1 can be obtained from the shortest path tree of v 1 directly; the distance of p max u,v 2 is bounded byBuilding and maintaining complete shortest path trees is time and space consuming. To handle this issue, we propose Community-aware Partial Shortest Path Tree. For each community C i , a node is selected as the community representative v C i . Note, for community C i , we only build and maintain one shortest path tree, i.e., the shortest path tree of the representative node v C i . Given any node u in G, the shortest path distance from u to v C i can be retrieved in the shortest path tree; the shortest path distance from u to any other node in C i cannot be obtained from the shortest path tree but the upper and lower bound can be estimated using triangle inequality. Figure 1 shows an example. p max u,v 1 can be obtained from the shortest path tree of v 1 directly; the distance of p max u,v 2 is bounded by</p>
        <p>Based on the general community metrics, the intracommunity members often have close relationships/less number of hops than the inter-community members, e.g., for cliquelike communities, the intra-community members has 1 hop. Of course, for the other types of communities, there may be different between the distance of intra-community members and that of inter-community members. Motivated by this, if v 1 and v 2 are in the same community, in general the shortest distance from v 1 to v 2 is typically much smaller that that of u and v 2 where u and v 2 are from different communities. So the shortest distance could be the path from v 2 to v 1 , not u. Thus,Based on the general community metrics, the intracommunity members often have close relationships/less number of hops than the inter-community members, e.g., for cliquelike communities, the intra-community members has 1 hop. Of course, for the other types of communities, there may be different between the distance of intra-community members and that of inter-community members. Motivated by this, if v 1 and v 2 are in the same community, in general the shortest distance from v 1 to v 2 is typically much smaller that that of u and v 2 where u and v 2 are from different communities. So the shortest distance could be the path from v 2 to v 1 , not u. Thus,</p>
        <p>where Pr(p max u,v j .U B) and Pr(p max u,v j .LB) are obtained by exploring the shortest path tree of v C j as discussed.where Pr(p max u,v j .U B) and Pr(p max u,v j .LB) are obtained by exploring the shortest path tree of v C j as discussed.</p>
        <p>Compared with the activation threshold δ, if Pr(v j |S ).U B &lt; δ, v j is pruned since it cannot be activated; if Pr(v j |S ).LB &gt; δ, v j must be activated. Only in the situation Pr(v j |S ).U B ≥ δ ≥ Pr(v j |S ).LB, the exact Pr(v j |S ) is computed by searching the shortest paths from all seeds in S to v j .Compared with the activation threshold δ, if Pr(v j |S ).U B &lt; δ, v j is pruned since it cannot be activated; if Pr(v j |S ).LB &gt; δ, v j must be activated. Only in the situation Pr(v j |S ).U B ≥ δ ≥ Pr(v j |S ).LB, the exact Pr(v j |S ) is computed by searching the shortest paths from all seeds in S to v j .</p>
        <p>The data structure for maintaining shortest paths in large graphs is a well studied field (e.g., [46]) where one approach is the shortest path tree. While the variants of shortest path tree have been developed for different purposes (e.g., [47]), the proposed CPSP-tree links each shortest path tree with the community information of the root so as to reduce the number of shortest path trees maintained. Note the algorithm to build shortest path trees is orthogonal to this study.The data structure for maintaining shortest paths in large graphs is a well studied field (e.g., [46]) where one approach is the shortest path tree. While the variants of shortest path tree have been developed for different purposes (e.g., [47]), the proposed CPSP-tree links each shortest path tree with the community information of the root so as to reduce the number of shortest path trees maintained. Note the algorithm to build shortest path trees is orthogonal to this study.</p>
        <p>For each community C i , one shortest path tree is built. There are m communities. The storage of all shortest path trees is m|V|. In community C i , the shortest distances from (to) each member node to (from) the representative node v C i are precomputed and maintained; the storage isFor each community C i , one shortest path tree is built. There are m communities. The storage of all shortest path trees is m|V|. In community C i , the shortest distances from (to) each member node to (from) the representative node v C i are precomputed and maintained; the storage is</p>
        <p>The time complexity of constructing the CPSP-tree is analyzed as follows. Constructing the CPSP-tree is same to compute the single-source shortest path for each node in the graph. As we know, the single-source shortest path computation takes O(m + n • log log n), which has been reported in [36]. In the worst case, we need to invoke the single-source shortest path computation for every node in the graph, i.e., O(n) times. Then, the time complexity becomes O(n • (m + n • log log n)). However, in practice, the CPSP-tree construction only work on the boundary nodes in the communities. The number n of boundary nodes is much less than the total number n of nodes in the graph. As such, the time complexity is O(n •m+n •n•log log n).The time complexity of constructing the CPSP-tree is analyzed as follows. Constructing the CPSP-tree is same to compute the single-source shortest path for each node in the graph. As we know, the single-source shortest path computation takes O(m + n • log log n), which has been reported in [36]. In the worst case, we need to invoke the single-source shortest path computation for every node in the graph, i.e., O(n) times. Then, the time complexity becomes O(n • (m + n • log log n)). However, in practice, the CPSP-tree construction only work on the boundary nodes in the communities. The number n of boundary nodes is much less than the total number n of nodes in the graph. As such, the time complexity is O(n •m+n •n•log log n).</p>
        <p>In the above sections, we developed novel index and solutions for addressing the community-aware influence maximization with diversification, i.e., we assume that the communities in the social network are known in advance. However, sometimes the community information may not be available. In this case, the most challenging part in this proposed problem is that we don't have clear guidance for selecting seeds, i.e., given a seed candidate, how diverse its influence spread to make it being selected as a real seed? To address this challenge, in this section we propose a heuristic approach to resolve the problem of diversifying influence spread without community information.In the above sections, we developed novel index and solutions for addressing the community-aware influence maximization with diversification, i.e., we assume that the communities in the social network are known in advance. However, sometimes the community information may not be available. In this case, the most challenging part in this proposed problem is that we don't have clear guidance for selecting seeds, i.e., given a seed candidate, how diverse its influence spread to make it being selected as a real seed? To address this challenge, in this section we propose a heuristic approach to resolve the problem of diversifying influence spread without community information.</p>
        <p>Before the first seed to be selected, any node in the social network is treated equally in diversity. So we can select the first seed with the maximum influence spread without considering the factor of diversity. Assume the first seed u has been determined. Let S = {u} be the current seed set and σ(u) be the influenced nodes of u in the social network. Definition 6. (Possible Hits of a Node) Given a seed node u and its influenced node set σ(u), the possible hits of u consists of the nodes v ∈ V \ σ(u) satisfying that v has an edge to a node in σ(u). The possible hits of u is denoted as PH(u).Before the first seed to be selected, any node in the social network is treated equally in diversity. So we can select the first seed with the maximum influence spread without considering the factor of diversity. Assume the first seed u has been determined. Let S = {u} be the current seed set and σ(u) be the influenced nodes of u in the social network. Definition 6. (Possible Hits of a Node) Given a seed node u and its influenced node set σ(u), the possible hits of u consists of the nodes v ∈ V \ σ(u) satisfying that v has an edge to a node in σ(u). The possible hits of u is denoted as PH(u).</p>
        <p>Similarly, the definition of the possible hits for a node can be applied to the seed set S , which is denoted as PH(S ) in this work. The intuition of our defined possible hits for seed nodes mainly comes from the fact that such nodes of possible hits have high probability of being activated when we add a new seed and the new seed is selected in the nearby regions of the existing seeds in S . This fact also matches with the IC diffusion model because a node can be jointly activated by different paths from multiple other nodes. Now, let's introduce the objective function to push the selection of next seed far from the current possible hits as much as possible. By doing this, we guarantee that the selection of next seed is favorable to the node that has the maximum marginal gain regarding the currently selected seeds and the maximum marginal gain would be further discounted or diminished by the possible hits it can reach. Definition 7. (Possible Hits biased Diminish) Given the possible hits PH(S ) of a seed set S , a seed candidate u and its influenced node set σ(u ), the possible hits biased diminish giving the marginal gain ∆(u ) is estimated by When the community information is not available, we approximate the diversified influence spread of the candidate nodes by computing the maximum benefit of those nodes via the diminished objective function. Obviously, the diminished objective function is not monotonic because PH(S ) may become larger or smaller with the increase of S , which leads that Dim(.) is not a monotonic function, too. Therefore, the above frameworks are not directly applicable to the problem of diverinfluence maximization without community information.Similarly, the definition of the possible hits for a node can be applied to the seed set S , which is denoted as PH(S ) in this work. The intuition of our defined possible hits for seed nodes mainly comes from the fact that such nodes of possible hits have high probability of being activated when we add a new seed and the new seed is selected in the nearby regions of the existing seeds in S . This fact also matches with the IC diffusion model because a node can be jointly activated by different paths from multiple other nodes. Now, let's introduce the objective function to push the selection of next seed far from the current possible hits as much as possible. By doing this, we guarantee that the selection of next seed is favorable to the node that has the maximum marginal gain regarding the currently selected seeds and the maximum marginal gain would be further discounted or diminished by the possible hits it can reach. Definition 7. (Possible Hits biased Diminish) Given the possible hits PH(S ) of a seed set S , a seed candidate u and its influenced node set σ(u ), the possible hits biased diminish giving the marginal gain ∆(u ) is estimated by When the community information is not available, we approximate the diversified influence spread of the candidate nodes by computing the maximum benefit of those nodes via the diminished objective function. Obviously, the diminished objective function is not monotonic because PH(S ) may become larger or smaller with the increase of S , which leads that Dim(.) is not a monotonic function, too. Therefore, the above frameworks are not directly applicable to the problem of diverinfluence maximization without community information.</p>
        <p>In this section, we propose the local optimality based approach to address the diversified influence spread problem when the community information is unknown in advance. The local optimality based approach is developed by adjusting the upperbound based approach in Section 4.2. Now let's analyze the upper bound and lower bound of nodes in the context of the diminished objective function, i.e., when a node can be determined to be a seed node based on the local information.In this section, we propose the local optimality based approach to address the diversified influence spread problem when the community information is unknown in advance. The local optimality based approach is developed by adjusting the upperbound based approach in Section 4.2. Now let's analyze the upper bound and lower bound of nodes in the context of the diminished objective function, i.e., when a node can be determined to be a seed node based on the local information.</p>
        <p>From Definition 8 and Equation 10, we can easily get that given a new seed candidate u and the current seed set S , its expected maximum marginal gain is in the range of [ log|PH(S i-1 )| , ∆(u ) log|σ(u )| }. Since it always has σ(u ) ≥ ∆(u ), the local lower bound of u can be further improved as max{ ∆(u ) log|PH(S i-1 )| , ∆(u ) log|∆(u )| }. Property 2. (Local Upper Bound) The local upper bound of u at the i-th iteration is σ(u ), i.e., assuming there is no overlap between PH(S i-1 ) and σ(u ). If ∆(u ) has been computed, then ∆(u ) will replace σ(u ) to be the tight local upper bound of u because ∆(u ) ≤ σ(u ) is true in all iterations.From Definition 8 and Equation 10, we can easily get that given a new seed candidate u and the current seed set S , its expected maximum marginal gain is in the range of [ log|PH(S i-1 )| , ∆(u ) log|σ(u )| }. Since it always has σ(u ) ≥ ∆(u ), the local lower bound of u can be further improved as max{ ∆(u ) log|PH(S i-1 )| , ∆(u ) log|∆(u )| }. Property 2. (Local Upper Bound) The local upper bound of u at the i-th iteration is σ(u ), i.e., assuming there is no overlap between PH(S i-1 ) and σ(u ). If ∆(u ) has been computed, then ∆(u ) will replace σ(u ) to be the tight local upper bound of u because ∆(u ) ≤ σ(u ) is true in all iterations.</p>
        <p>The key idea of the local-optimality based approach is to find the terminating node using the above local lower bound and upper bound properties. In other words, for those nodes afterwards the terminating node, they must not generate the seed node for the current iteration. By doing this, we can safely and quickly locate the best seed node at an iteration without probing all possible nodes. Algorithm 3 presents the detailed procedure of this approach. Here, we calculate the general influence spread of nodes as theirThe key idea of the local-optimality based approach is to find the terminating node using the above local lower bound and upper bound properties. In other words, for those nodes afterwards the terminating node, they must not generate the seed node for the current iteration. By doing this, we can safely and quickly locate the best seed node at an iteration without probing all possible nodes. Algorithm 3 presents the detailed procedure of this approach. Here, we calculate the general influence spread of nodes as their</p>
        <p>Input: A graph G = (V, E) and an integer k Output: S -the k-vertex set 1: {Initialize the upper bound value for each node}; 2: for each node u ∈ V do 3:Input: A graph G = (V, E) and an integer k Output: S -the k-vertex set 1: {Initialize the upper bound value for each node}; 2: for each node u ∈ V do 3:</p>
        <p>Write u : σ(u) into an ordered queue Q; 4: S 1 ←Q.pop(), i.e., u best : σ(u best ); 5: Set i = 2; 6: while i ≤ k doWrite u : σ(u) into an ordered queue Q; 4: S 1 ←Q.pop(), i.e., u best : σ(u best ); 5: Set i = 2; 6: while i ≤ k do</p>
        <p>while !found &amp;&amp; Q.getFirstUnvisited() null do 12: Q .add(u f irst :while !found &amp;&amp; Q.getFirstUnvisited() null do 12: Q .add(u f irst :</p>
        <p>if !found then 20:if !found then 20:</p>
        <p>loose upper bounds, as shown in Line 2-3. Those nodes and their influence spreads are maintained in an ordered queue Q. Obviously, the first seed is the node with the maximum value in Q. The challenging part is how to select the other k-1 best seed nodes satisfying our diminished objective function w.r.t. our problem of the diversified influence maximization. To address this, we first pop a node u f irst and its value ∆(u f irst ) from Q and compute its incremental gain regarding the selection S i-1 . Note now we didn't consider the factor of diversification. And then, the second While-Loop is used to identify the terminating node in Q. We use the new queue Q to maintain the nodes to be visited and the nodes' diminished value. In the second While-loop shown in Line 11-18, we check the unvisited nodes (e.g., say u next ) in Q and compare its upper bound value (e.g., ∆(u next )) with the lower bound value (e.g., max{loose upper bounds, as shown in Line 2-3. Those nodes and their influence spreads are maintained in an ordered queue Q. Obviously, the first seed is the node with the maximum value in Q. The challenging part is how to select the other k-1 best seed nodes satisfying our diminished objective function w.r.t. our problem of the diversified influence maximization. To address this, we first pop a node u f irst and its value ∆(u f irst ) from Q and compute its incremental gain regarding the selection S i-1 . Note now we didn't consider the factor of diversification. And then, the second While-Loop is used to identify the terminating node in Q. We use the new queue Q to maintain the nodes to be visited and the nodes' diminished value. In the second While-loop shown in Line 11-18, we check the unvisited nodes (e.g., say u next ) in Q and compare its upper bound value (e.g., ∆(u next )) with the lower bound value (e.g., max{</p>
        <p>or its exact value (e.g.,or its exact value (e.g.,</p>
        <p>If the lower bound or the exact value of u f irst is not less than the upper bound of an unvisited node u next , then we can safely say u next is the terminating node and take the node with the maximum value as the new seed from Q . Otherwise, we add the intermediate results of u f irst and its diminished valueIf the lower bound or the exact value of u f irst is not less than the upper bound of an unvisited node u next , then we can safely say u next is the terminating node and take the node with the maximum value as the new seed from Q . Otherwise, we add the intermediate results of u f irst and its diminished value</p>
        <p>into the temporary queue Q , while write u f irst and its updated value ∆(u f irst ) back to Q. In Line 13, if the first condition is true, then we do not calculate the exact value, i.e., avoiding the operation of set merge. In the worst case, if no terminating node exists, i.e., all the nodes in Q have been probed, then the best seed should be the node with the maximum value in Q because all their diminished values are the exact value in Q , shown in Line 19-20. Finally, the k best seeds will be returned.into the temporary queue Q , while write u f irst and its updated value ∆(u f irst ) back to Q. In Line 13, if the first condition is true, then we do not calculate the exact value, i.e., avoiding the operation of set merge. In the worst case, if no terminating node exists, i.e., all the nodes in Q have been probed, then the best seed should be the node with the maximum value in Q because all their diminished values are the exact value in Q , shown in Line 19-20. Finally, the k best seeds will be returned.</p>
        <p>Since the above local-optimality based approach selects the seed nodes based on the diminished objective function, the final solution will depend on the first seed node selection. Therefore, it can only produce the local optimum solution to our problem. For instance, there is a large community and a set of mediumsized communities around the large community. In this case, if we select the first seed node activating a large number of users in the large community, then it will make us to ignore the consideration of the groups of medium-sized communities even if their combination can contribute more than the only selection of the large community.Since the above local-optimality based approach selects the seed nodes based on the diminished objective function, the final solution will depend on the first seed node selection. Therefore, it can only produce the local optimum solution to our problem. For instance, there is a large community and a set of mediumsized communities around the large community. In this case, if we select the first seed node activating a large number of users in the large community, then it will make us to ignore the consideration of the groups of medium-sized communities even if their combination can contribute more than the only selection of the large community.</p>
        <p>In general, challenging issue often occurs in the problems of local search optimization. To do this, one way is to do iterate local search multiple times. Each time starts from a different initial configuration. This is called as repeated local search. However, how to select the different initial configurations is a tough question. To address this challenge, in this work we develop a heuristic approach to optimize the benefit of the extra search by utilizing the knowledge obtained during the previous local search phases. The key idea is to identify the first two seed nodes as the main line of local search using Algorithm 3. And then, we select the nodes as the initial seed candidates for other lines of local search where each node should have high possibility to drive a local search by checking if its independent influence spread value is larger than a certain ratio (i.e., λ = 0.3) of that of the first two seeds. As such, besides the main local search, we can also initialize different local search with the potential candidates at the beginning. In order to balance the optimized precision and the efficiency of the heuristic approach, we have an assumption that we do not allow overlapped seed candidates appearing across any two lines of local search. When the algorithm continues to run, lots of lines of local search would be removed, by which the search space can be reduced soon.In general, challenging issue often occurs in the problems of local search optimization. To do this, one way is to do iterate local search multiple times. Each time starts from a different initial configuration. This is called as repeated local search. However, how to select the different initial configurations is a tough question. To address this challenge, in this work we develop a heuristic approach to optimize the benefit of the extra search by utilizing the knowledge obtained during the previous local search phases. The key idea is to identify the first two seed nodes as the main line of local search using Algorithm 3. And then, we select the nodes as the initial seed candidates for other lines of local search where each node should have high possibility to drive a local search by checking if its independent influence spread value is larger than a certain ratio (i.e., λ = 0.3) of that of the first two seeds. As such, besides the main local search, we can also initialize different local search with the potential candidates at the beginning. In order to balance the optimized precision and the efficiency of the heuristic approach, we have an assumption that we do not allow overlapped seed candidates appearing across any two lines of local search. When the algorithm continues to run, lots of lines of local search would be removed, by which the search space can be reduced soon.</p>
        <p>The core procedure of the heuristic approach is similar to Algorithm 3. Therefore, we do not provide the pseudo codes in this paper.The core procedure of the heuristic approach is similar to Algorithm 3. Therefore, we do not provide the pseudo codes in this paper.</p>
        <p>We have conducted extensive experimental study to evaluate the effectiveness and efficiency of the proposed solution of CDIM problem. All these experiments are tested on a 
            <rs type="creator">Red</rs> Hat 
            <rs type="software">Enterprise Linux</rs> Server (
            <rs type="version">7.2</rs>), with 792GB RAM and Intel(R) Xeon(R) CPU E5-2690 v2 @ 3.00GH shared by staff in the School of Science, RMIT University. The algorithms are implemented using Python 
            <rs type="version">2.7</rs>.
        </p>
        <p>Five real-world social network datasets are used in test. They are downloaded from Stanford Large Network Dataset Collection 2 . The statistics of the datasets are shown in Table 1.Five real-world social network datasets are used in test. They are downloaded from Stanford Large Network Dataset Collection 2 . The statistics of the datasets are shown in Table 1.</p>
        <p>The objective of CDIM problem is to find k nodes in a social network which are capable to activate the maximum number of nodes communities from as diverse as possible. The effectiveness tests check whether the proposed solutions show advantage towards the objective. For this purpose, we have implemented the following four algorithms.The objective of CDIM problem is to find k nodes in a social network which are capable to activate the maximum number of nodes communities from as diverse as possible. The effectiveness tests check whether the proposed solutions show advantage towards the objective. For this purpose, we have implemented the following four algorithms.</p>
        <p>• IM is the solution of influence maximization problem [7,18]. As a baseline, it is used to solve CDIM problem. Given a seed u, the set of activated nodes by u is denoted as Inf(u). For another node u , if it is selected as a seed, the new nodes activated by u is Inf(u')/Inf(u). For the node selected as the next seed, it must be able to activate the maximum number of new nodes in social networks.• IM is the solution of influence maximization problem [7,18]. As a baseline, it is used to solve CDIM problem. Given a seed u, the set of activated nodes by u is denoted as Inf(u). For another node u , if it is selected as a seed, the new nodes activated by u is Inf(u')/Inf(u). For the node selected as the next seed, it must be able to activate the maximum number of new nodes in social networks.</p>
        <p>• DIV(LPA) represents our proposed CDIM solution where the widely-accepted community detection method LPA [32] is applied to identify all communities in social networks.• DIV(LPA) represents our proposed CDIM solution where the widely-accepted community detection method LPA [32] is applied to identify all communities in social networks.</p>
        <p>• DIV(Louvain) represents our CDIM solution where another widely-accepted community detection method Louvain [3] is applied to identify all communities in social networks.• DIV(Louvain) represents our CDIM solution where another widely-accepted community detection method Louvain [3] is applied to identify all communities in social networks.</p>
        <p>• Heuristic represents our CDIM solution where the community definition is not specified and thus the influencebased communities in social networks are considered as discussed in Section 6.• Heuristic represents our CDIM solution where the community definition is not specified and thus the influencebased communities in social networks are considered as discussed in Section 6.</p>
        <p>The performances are reported when k changes. By default, λ in Equation ( 5) is 0.5 and activation threshold δ in Equation ( 2) is 0.2.The performances are reported when k changes. By default, λ in Equation ( 5) is 0.5 and activation threshold δ in Equation ( 2) is 0.2.</p>
        <p>The precision is measured by comparing the seeds and the activated nodes returned by IM and Heuristic against those returned by DIV(LPA) and DIV(Louvain) respectively. Let the seed set (or the set of activated nodes) returned by IM be im and the seed set (or the set of activated nodes) returned by DIV(.) be div. influence-based communities can better approximate the specified communities.The precision is measured by comparing the seeds and the activated nodes returned by IM and Heuristic against those returned by DIV(LPA) and DIV(Louvain) respectively. Let the seed set (or the set of activated nodes) returned by IM be im and the seed set (or the set of activated nodes) returned by DIV(.) be div. influence-based communities can better approximate the specified communities.</p>
        <p>For each data set, the seed sets returned by IM, Heuristic, DIV(LPA) and DIV(Louvain) are compared, and the test results are presented in Figure 3 where k varies from 50 to 200. In Facebook, IM can identify 30%-50% of seeds returned by DIV(.) when k is 50 or 100. When k is 150 or 200, IM can identify about 20% of seeds returned by DIV(.). In all settings of k, Heuristic can identify about 10% of seeds returned by DIV(.). The similar trend can be observed for other three datasets.For each data set, the seed sets returned by IM, Heuristic, DIV(LPA) and DIV(Louvain) are compared, and the test results are presented in Figure 3 where k varies from 50 to 200. In Facebook, IM can identify 30%-50% of seeds returned by DIV(.) when k is 50 or 100. When k is 150 or 200, IM can identify about 20% of seeds returned by DIV(.). In all settings of k, Heuristic can identify about 10% of seeds returned by DIV(.). The similar trend can be observed for other three datasets.</p>
        <p>Similar to seed sets, the activated node sets using IM and Heuristic are compared with those using DIV(LPA) and DIV(Louvain) respectively. The test results are presented in Figure 4. When k is 50 or 100, the precision of IM and Heuristic for Facebook, Citation and Youtube reaches 50%; the precision is about 20%-40% for Gowalla and about 30% for Amazon. When k is 150 or 200, the precisions are becoming much smaller for all data sets.Similar to seed sets, the activated node sets using IM and Heuristic are compared with those using DIV(LPA) and DIV(Louvain) respectively. The test results are presented in Figure 4. When k is 50 or 100, the precision of IM and Heuristic for Facebook, Citation and Youtube reaches 50%; the precision is about 20%-40% for Gowalla and about 30% for Amazon. When k is 150 or 200, the precisions are becoming much smaller for all data sets.</p>
        <p>The test results clearly indicate that CDIM problem is significantly different from IM problem. Also, it indicates the influence-based communities are reasonable approximation of the communities applied in DIV(LPA) and DIV(Louvain).The test results clearly indicate that CDIM problem is significantly different from IM problem. Also, it indicates the influence-based communities are reasonable approximation of the communities applied in DIV(LPA) and DIV(Louvain).</p>
        <p>The recall is measured by comparing the seeds and the activated nodes returned by IM and Heuristic against those returned by DIV(LPA) and DIV(Louvain) respectively. The recall of IM vs. DIV(.) is defined as |im∩div| |div| . If the recall is smaller, the solution of IM problem is a smaller fraction of the solution of CDIM problem; it implies IM solution is less effective to CDIM problem. The recall of Heuristic vs. DIV(.) is defined as |heu∩div| |div| . The smaller recall means the influence-based communities are less effective to approximate the specified communities in DIV(.).The recall is measured by comparing the seeds and the activated nodes returned by IM and Heuristic against those returned by DIV(LPA) and DIV(Louvain) respectively. The recall of IM vs. DIV(.) is defined as |im∩div| |div| . If the recall is smaller, the solution of IM problem is a smaller fraction of the solution of CDIM problem; it implies IM solution is less effective to CDIM problem. The recall of Heuristic vs. DIV(.) is defined as |heu∩div| |div| . The smaller recall means the influence-based communities are less effective to approximate the specified communities in DIV(.).</p>
        <p>The recall in terms of seeds is presented in Figure 2. For all five data sets, the recall of IM is lower than 55% and the recall of Heuristic is lower than 30% except Citation dataset. The recall in terms of activated nodes is presented in Figure 5. In the dense datasets Facebook and Citation, IM can activate about 50% nodes among all nodes activated by DIV(.). Heuristic can activate about 40% except k=50. For the other three datasets, IM and Heuristic have less recall values. The test results in recall lead to the similar conclusion as the test results in precision.The recall in terms of seeds is presented in Figure 2. For all five data sets, the recall of IM is lower than 55% and the recall of Heuristic is lower than 30% except Citation dataset. The recall in terms of activated nodes is presented in Figure 5. In the dense datasets Facebook and Citation, IM can activate about 50% nodes among all nodes activated by DIV(.). Heuristic can activate about 40% except k=50. For the other three datasets, IM and Heuristic have less recall values. The test results in recall lead to the similar conclusion as the test results in precision.</p>
        <p>A community is influenced if at least one node of the community is activated. The real world community information of datasets Amazon and Youtube are known. Using DIV(LPA) to solve CDIM over the two datasets. The tests results are reported in Table 2 and Table 3 respectively. Obviously, the trade-off between the number of communities influenced and the number of nodes activated can be adjusted by setting λ different values (see Equation ( 5)). When λ = 0, CDIM is degraded to influence maximization problem. As a result, the number of nodes activated is the highest while the number of communities influenced is the lowest. When λ increases, the number of nodes activated keeps decreasing while the number of communities influenced keeps increasing; the CDIM score (i.e., φ(S ) for the returned seed set S ) keeps increases. (k = 200, δ = 0.9).A community is influenced if at least one node of the community is activated. The real world community information of datasets Amazon and Youtube are known. Using DIV(LPA) to solve CDIM over the two datasets. The tests results are reported in Table 2 and Table 3 respectively. Obviously, the trade-off between the number of communities influenced and the number of nodes activated can be adjusted by setting λ different values (see Equation ( 5)). When λ = 0, CDIM is degraded to influence maximization problem. As a result, the number of nodes activated is the highest while the number of communities influenced is the lowest. When λ increases, the number of nodes activated keeps decreasing while the number of communities influenced keeps increasing; the CDIM score (i.e., φ(S ) for the returned seed set S ) keeps increases. (k = 200, δ = 0.9).</p>
        <p>The efficiency of GR (Algorithm 1), UB (Algorithm 2), IDX (i.e., UB with support of CPSP-Tree) at different settings of Once the communities are known, CPSP-Tree is built offline as well.The efficiency of GR (Algorithm 1), UB (Algorithm 2), IDX (i.e., UB with support of CPSP-Tree) at different settings of Once the communities are known, CPSP-Tree is built offline as well.</p>
        <p>As shown in Figure 6 -Figure 10, IDX outperforms the other two algorithms by 8-40 times on all datasets (except Citation). In Figure 6, GR performance is the worst in all situations. In Figure 7, UB is better than IDX when k is 50, 100, and 150. But when k increases up to 160, IDX performs much better than UB. When k is 200, IDX is about 2.5 times faster than UB. This is because Citation is a dense social network. The dense social network tends to have more computation for intra-community nodes. Additionally, we observe that each algorithm performs similarly over the same data set with LPA and Louvain.As shown in Figure 6 -Figure 10, IDX outperforms the other two algorithms by 8-40 times on all datasets (except Citation). In Figure 6, GR performance is the worst in all situations. In Figure 7, UB is better than IDX when k is 50, 100, and 150. But when k increases up to 160, IDX performs much better than UB. When k is 200, IDX is about 2.5 times faster than UB. This is because Citation is a dense social network. The dense social network tends to have more computation for intra-community nodes. Additionally, we observe that each algorithm performs similarly over the same data set with LPA and Louvain.</p>
        <p>This section presents the test results when changing the values of trade-off parameter λ, activation threshold δ, and size of dataset.This section presents the test results when changing the values of trade-off parameter λ, activation threshold δ, and size of dataset.</p>
        <p>The accuracy of the activated nodes using DIV(LPA) and IM is evaluated respectively. The accuracy is measured by Fmeasure where F = 2 * precision * recall precision+recall . The higher F-measure means the activated nodes are from more different communities. The test results are shown in Figure 11(a) when λ varies from 0.25 to 1. In the situation λ = 1, it means the number of communities influenced is the sole factor considered. When λ = 0.25, it means the number of communities influenced is IM aims to activate the maximum number of nodes in social networks and DIV(LPA) aims to activate maximum number of nodes which are from more communities. Compared to IM, DIV(LPA) has to sacrifice a certain number of activated nodes to ensure more communities are influenced. The ratios between the number of nodes activated using DIV(LPA) and that using IM at different settings of λ are reported in Figure 11(b). When λ is between 0.25 and 0.75, the number of nodes activated using DIV(LPA) is 75% of that using IM for all datasets. When λ is 1, the ratio is 75% in four datasets and 40% in Youtube.The accuracy of the activated nodes using DIV(LPA) and IM is evaluated respectively. The accuracy is measured by Fmeasure where F = 2 * precision * recall precision+recall . The higher F-measure means the activated nodes are from more different communities. The test results are shown in Figure 11(a) when λ varies from 0.25 to 1. In the situation λ = 1, it means the number of communities influenced is the sole factor considered. When λ = 0.25, it means the number of communities influenced is IM aims to activate the maximum number of nodes in social networks and DIV(LPA) aims to activate maximum number of nodes which are from more communities. Compared to IM, DIV(LPA) has to sacrifice a certain number of activated nodes to ensure more communities are influenced. The ratios between the number of nodes activated using DIV(LPA) and that using IM at different settings of λ are reported in Figure 11(b). When λ is between 0.25 and 0.75, the number of nodes activated using DIV(LPA) is 75% of that using IM for all datasets. When λ is 1, the ratio is 75% in four datasets and 40% in Youtube.</p>
        <p>In the tests, k = 100 and λ = 0.5. As shown in Figure 11(c), F-score increases when δ varies from 0.2 to 0.5. The results depict that it is easy for IM to activate more nodes when the higher value is set to δ. We also evaluate the time consumed by different algorithms over Amazon when δ changes. The test results are shown in Figure 11(d). The performance of UB is accelerated for the higher δ value, but the performance of IDX is affected slightly by δ. Clearly, IDX always outperforms UB.In the tests, k = 100 and λ = 0.5. As shown in Figure 11(c), F-score increases when δ varies from 0.2 to 0.5. The results depict that it is easy for IM to activate more nodes when the higher value is set to δ. We also evaluate the time consumed by different algorithms over Amazon when δ changes. The test results are shown in Figure 11(d). The performance of UB is accelerated for the higher δ value, but the performance of IDX is affected slightly by δ. Clearly, IDX always outperforms UB.</p>
        <p>We generate three synthetic datasets based on Amazon in order to evaluate the scalability of the proposed algorithms for datasets of different sizes. The three datasets have 2 times, 5 times and 25 times of nodes in the original Amazon dataset shown in Table 1. Figure 11(e) illustrates UB consumes 600 seconds when data size is 2 times and it consumes 1800 seconds when the data size is 25 times. Obviously, while the data size increases by about 12 times, the consumed time increases by 3 times only. 
            <rs type="software">IDX</rs> performs much better and the trending slope is very gentle.
        </p>
        <p>This paper has studied community-diversified influence maximization (CDIM) problem. CDIM provides an innovative perspective to evaluate the influence propagation over social networks. The objective is to find k influential nodes in social networks as seeds such that, if a message is initiated by the seeds, the number of activated nodes as well as the number of communities to which the activated nodes belong can be maximized at the end of propagation process. The community diversity can reduce the risk of market campaigns and make more future impact. The goodnesses of CDIM solution are evaluated with a metric which have been proven monotonous and submodular. It allows greedy algorithm to be applied with reasonable approximation bound. To enable more efficient processing, the upper bound of community-diversified influence has been explored to minimize the seed candidates. In particular, an innovative CPSP-Tree index has been developed to quickly identify seed candidates. The intrinsic communities of CDIM are explored in the case that the communities cannot be provided by users. The extensive tests on five real-world datasets have verified the superiority of proposed solutions.This paper has studied community-diversified influence maximization (CDIM) problem. CDIM provides an innovative perspective to evaluate the influence propagation over social networks. The objective is to find k influential nodes in social networks as seeds such that, if a message is initiated by the seeds, the number of activated nodes as well as the number of communities to which the activated nodes belong can be maximized at the end of propagation process. The community diversity can reduce the risk of market campaigns and make more future impact. The goodnesses of CDIM solution are evaluated with a metric which have been proven monotonous and submodular. It allows greedy algorithm to be applied with reasonable approximation bound. To enable more efficient processing, the upper bound of community-diversified influence has been explored to minimize the seed candidates. In particular, an innovative CPSP-Tree index has been developed to quickly identify seed candidates. The intrinsic communities of CDIM are explored in the case that the communities cannot be provided by users. The extensive tests on five real-world datasets have verified the superiority of proposed solutions.</p>
        <p>This work is supported by the ARC Linkage Projects under Grant No. LP180100750.This work is supported by the ARC Linkage Projects under Grant No. LP180100750.</p>
        <p>Since w n i ,n j is in (0,1], log(w n i ,n j ) is negative. The most influential path is the path with the maximum value. By changing the sign from log(w n i ,n j ) to log(w n i ,n j ), the most influential path is equivalent to the path with the minimum distance.Since w n i ,n j is in (0,1], log(w n i ,n j ) is negative. The most influential path is the path with the maximum value. By changing the sign from log(w n i ,n j ) to log(w n i ,n j ), the most influential path is equivalent to the path with the minimum distance.</p>
    </text>
</tei>
