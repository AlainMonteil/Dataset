<?xml version="1.0" encoding="UTF-8"?>
<tei xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader>
        <fileDesc xml:id="_1"/>
        <encodingDesc>
            <appInfo>
                <application version="0.8.1-SNAPSHOT" ident="GROBID" when="2024-06-24T14:12+0000">
                    <ref target="https://github.com/kermitt2/grobid">A machine learning software for extracting information from scholarly documents</ref>
                </application>
            </appInfo>
        </encodingDesc>
    </teiHeader>
    <text xml:lang="en">
        <p>Reaction Mechanism Generator (RMG) constructs kinetic models composed of elementary chemical reaction steps using a general understanding of how molecules react. Species thermochemistry is estimated through Benson group additivity and reaction rate coefficients are estimated using a database of known rate rules and reaction templates. At its core, RMG relies on two fundamental data structures: graphs and trees. Graphs are used to represent chemical structures, and trees are used to represent thermodynamic and kinetic data. Models are generated using a rate-based algorithm which excludes species from the model based on reaction fluxes. RMG can generate reaction mechanisms for species involving carbon, hydrogen, oxygen, sulfur, and nitrogen. It also has capabilities for estimating transport and solvation properties, and it automatically computes pressure-dependent rate coefficients and identifies chemically-activated reaction paths. RMG is an object-oriented 
            <rs type="software">program</rs> written in Python, which provides a stable, robust programming architecture for developing an extensible and modular code base with a large suite of unit tests. Computationally intensive functions are cythonized for speed improvements.
        </p>
        <p>Kinetic models are relevant to many chemical processes, including combustion, pyrolysis, and atmospheric oxidation [1]. These processes involve complex free-radical reactions between hundreds of reaction intermediates, coupled with thermodynamic and heat and mass transfer effects. In the past, models were often greatly simplified due to lack of computing power as well as poor understanding of underlying chemistry. Today, numerical solvers and computational chemistry have advanced to the point where detailed kinetic models can now be constructed and applied to complex systems. Some detailed kinetic models are constructed by hand, through carefully keeping track of all species and reactions and incorporating relevant chemistry. This process is often tedious and error-prone, requiring expert and up-to-date understanding of chemistry. However, the challenges associated with handconstructed models are the very things that are easily handled by computers. This insight has spawned several automatic reaction mechanism generation codes, some proprietary and some open-source, including 
            <rs type="software">MAMOX</rs>, 
            <rs type="software">NetGen</rs>, REACTION, and 
            <rs type="software">EXGAS</rs>. Broadbelt and Pfaendtner [2] provide an introduction to the general concepts and terminology of kinetic model generation, and several recent reviews describe the commonalities, differences, and histories of these software projects [1,[3][4][5].
        </p>
        <p>The open-source software package 
            <rs type="software">RMG (Reaction Mechanism Generator)</rs> was developed in the 
            <rs type="creator">Green Group at MIT</rs> to help researchers model physical processes through automatic mechanism generation. All 60, 000+ lines of Python 
            <rs type="software">code</rs> are open-source and hosted on 
            <rs type="software">Github</rs> (
            <rs type="url">https://github.com/ReactionMechanism Generator/RMG</rs>
            <rs type="software">-Py</rs>). RMG was originally developed in Java by 
            <rs type="software">Jing</rs>
            <rs type="creator">Song</rs> [6] in 2004, following approaches pioneered by 
            <rs type="software">NetGen</rs> and the 
            <rs type="software">ExxonMobil Mechanism Generator</rs> (
            <rs type="software">XMG)</rs> in the 1990s [7,8]. An object-oriented programming style was used prioritizing flexibility and extensibility of chemical rules and code re-usability. Over the years, several detailed kinetic models generated by RMG have been published in literature, including models for butanol [9], ketone biofuels [10], JP-10 jet fuel [11], and neopentane [12]. The source 
            <rs type="software">code</rs> for the Java version of RMG can be found both on 
            <rs type="software">Github</rs> (
            <rs type="url">https://github.com/ReactionMechanismGenerator/RMG-Java)</rs> and 
            <rs type="software">Sourceforge</rs> (
            <rs type="url">http://rmg.sourceforge.net/)</rs>, with over 7000 downloads from 
            <rs type="software">Sourceforge</rs> alone over the last two years. In 2008, Joshua Allen and Richard West began writing a Python version of RMG, known as 
            <rs type="software">RMG-Py</rs> [13]. This was motivated by improved code readability, better error handling, and broader access to a variety of existing chem informatics libraries. This paper presents the features and usage of the current Python version of RMG.
        </p>
        <p>RMG is an automatic reaction mechanism generator which uses known chemistry knowledge stored in a database along with parameter estimation methods to generate detailed chemical kinetic mechanisms. These mechanisms can be used as inputs to third party reactor software (e.g. 
            <rs type="software">CHEMKIN</rs>, 
            <rs type="software">Cantera</rs>, 
            <rs type="software">ANSYS Fluent</rs>) to simulate predictions for macrovariables of interest such as product composition, ignition behavior, or flame speed.
        </p>
        <p>The four principal capabilities required for any automatic reaction mechanism generation code are [14]: (1) a way to uniquely and unambiguously represent chemical species, (2) a method to determine what reactions can occur between species, (3) a means to estimate the kinetic and thermodynamic parameters, and (4) a metric by which to include or exclude species and reactions in the model.</p>
        <p>RMG uses a functional group based methodology to work with species and reactions. In this approach, reaction families are defined by templates that manipulate matching functional groups to convert molecules from reactants to products. Chemical graph theory is used to represent molecules and functional group substructures, with vertices representing atoms and edges representing bonds. This allows for graph isomorphism comparisons: to identify functional groups when estimating parameters, and to check the identity of species against one another. Thermodynamic parameters are estimated for chemical structures using the Benson group contribution method [15,16] or on-the-fly quantum chemistry calculations [17]. The species and reactions included in the final model are chosen by expanding the model using the rate-based algorithm of Susnow et al. [18].</p>
        <p>In RMG, molecules are described using ''adjacency lists'', a graph representation of the atoms and bonds that connect them. A set of molecule objects which are resonance isomers form a single species. This species contains its own thermochemical (i.e. enthalpy, entropy, and heat capacities) and statistical mechanical (i.e. frequencies and energies) information. The adjacency list for a methyl radical CH 3 is depicted in Fig. 1.</p>
        <p>The syntax of a molecular adjacency list can be described as follows: the first column indicates the atom index, the second column indicates the atomic element, the 3rd column indicates the number of unpaired electrons associated each atom and is preceded by the lowercase letter u representing ''unpaired'', the 4th column indicates the number of lone pairs associated with each atom and is preceded by the lowercase letter p representing ''pairs'', and the 5th column indicates the formal charge on the atom preceded by the lowercase letter c representing ''charge''.</p>
        <p>The values in brackets indicate the presence of a bond, with the first value within a bracket indicating the atom index of the atom to which the current atom is bonded, and the second value indicating whether the bond order is single S, double D, triple T, or benzene B.</p>
        <p>Finally, the molecule has an overall spin multiplicity defined above the adjacency list. In the adjacency list depicted in Fig. 1, the carbon atom has a single unpaired electron and 3 single bonds to hydrogen atoms, forming a methyl radical.</p>
        <p>Similar to molecular adjacency lists, functional groups can also be described by adjacency lists, but group atom types are used in the adjacency list instead of atomic elements. These atom types can describe a more general set of elements and can sometimes provide additional local bond structure requirements. The use of atom types accelerates graph isomorphism, or equivalency, checks and helps define both broad and highly specific functional groups. The list of group atom types used in RMG are defined in Table 1. Shown in Fig. 2 is an example of a group adjacency list, utilizing the R!H, Cd, and Od atomtypes described in Table 1.</p>
        <p>Note that in a group adjacency list, multiplicity, bonds, atom types, and even unpaired electrons can be a set of values. In order to distinguish from the notation used for bonds, square brackets are used to group a set of values. In a group, only the number of unpaired electrons and bond information are required. Values that are unspecified, such as the number of lone pairs and charges on each atom in the adjacency list in Fig. 2, are assumed to be wildcards. The notation x can also be used to represent a wildcard. By using isomorphism checks between reacting molecules and group definitions in this form, RMG can quickly identify functional group-specific reaction sites. The VF2 algorithm [19] for graph and subgraph isomorphisms is currently implemented in RMG.</p>
        <p>Benson-style group additivity [15,16] is used to estimate thermochemical parameters, including enthalpy ∆H • f , entropy S • , and heat capacities C p . For free radicals, we use the hydrogen bond increment (HBI) method of Lay et al. [20]. RMG uses hierarchical trees in its database for organizing functional group data in order to improve the speed of identifying group contributions. Trees are organized by placing general functional groups as top nodes, then creating more specific functional groups as children. Identifying the group contribution requires traversing down the tree from top to bottom to match the specific functional group.</p>
        <p>The algorithm for estimating the thermodynamic parameters for a species is shown in Fig. 3. First, resonance isomers of the species are generated, including aromatic forms of the species. Then, the thermodynamic parameters for each individual isomer are calculated, first by checking whether the isomer is a free radical species in which HBI corrections are needed. After this step, group contributions to the enthalpy, entropy, and heat capacities are applied to the saturated compound. Then, symmetry algorithms are used to apply a total symmetry number σ correction to the entropy of formation:</p>
        <p>where S • is the standard corrected entropy of formation at 298 K, S • GA is the standard entropy at 298 K calculated by the group additivity method, and R is the gas constant. Finally, cyclic and polycyclic ring corrections and gauche corrections are made to the thermodynamic parameters. Once the algorithm finishes iterating through all the isomers, RMG chooses the thermochemistry of the isomer with the most stable enthalpy to represent the thermochemistry for the overall species.</p>
        <p>Benson group additivity is known to poorly estimate the enthalpy and entropy of cyclic and fused cyclic compounds due to the lack of available ring strain corrections. RMG includes a Quantum Mechanics Thermodynamic Property (QMTP) interface [17], shown in Fig. 4, which allows it to perform on-thefly quantum calculations to determine thermodynamic parameters for cyclic and polycyclic species. This interface uses threedimensional molecular structures in force field or quantum mechanical calculations to obtain thermodynamic parameter estimates. First, RMG sends molecular connectivities derived from its internal molecular graph representations to 
            <rs type="software">RDKit</rs> [21], which converts them to 3D coordinates using a distance geometry algorithm. Then, an input file containing the 3D molecular structure is sent to an external quantum mechanics program such as 
            <rs type="software">MOPAC</rs> or 
            <rs type="software">Gaussian</rs>. RMG derives the thermodynamic properties from parsing the relevant frequencies and energies from the output files. Currently, RMG supports several semi-empirical methods, including PM3, PM6, and PM7.
        </p>
        <p>RMG generates elementary reactions from chemical species using an extensible set of 45 reaction families, shown in Table 2. A reaction family consists of a template that describes the reactive sites, and a reaction recipe which dictates how the bond connectivity changes when the reaction proceeds to products. Associated with each reaction family is a hierarchical tree of rate estimation rules, assigning kinetics between reaction sites according to their closest-matching functional groups. The rate estimation trees can be modified and extended without editing or recompiling the software, making it easier for chemists to add new information.</p>
        <p>As an example, the reaction family H_abstraction describing the hydrogen abstraction from species XH by a radical species Y, is shown in Fig. 5 along with its reaction recipe.</p>
        <p>For any reversible reaction Reactant(s)</p>
        <p>Product(s), thermodynamic consistency is maintained through the following relation between the forward and backwards reaction rate:</p>
        <p>where K eq is the equilibrium constant of the reaction, T is the reaction temperature, R is the gas constant, P • is the standard pressure (1 bar), ∆G • rxn (T ) is the standard reaction free energy, and ∆n is the change in moles in the reaction.</p>
        <p>For most reaction families in RMG, the rates are defined in the forward direction. The reverse kinetics are calculated through the relation k r = k f /K eq using the thermodynamic parameters estimated for the reaction species. The kinetic rate parameters are organized, like the thermodynamic parameters, using hierarchical trees based on the principle that reactions between similar reacting sites in a family will have similar rates. For each reactant site, a</p>
        <p>where A is the pre-exponential factor, n is the temperature exponential factor, E a is the activation energy, R is the gas constant, and T is the temperature. Alternatively, the activation energy E a can be related to the enthalpy of reaction ∆H rxn through the constrained Evans-Polanyi relationship:</p>
        <p>where α and E 0 are constants. Finally, for endothermic reactions in RMG, the activation energy E a is raised to at least the endothermicity of the reaction using the following relationship:</p>
        <p>Upon loading the database, RMG fills in data within the hierarchical tree through an averaging algorithm. It locates sets of parent functional groups which have children containing data, and generates a geometrically averaged rate rule using the formula:</p>
        <p>where k i (T ) is the ith rate rule and n is the total number of children. Parents which are higher up in the tree may include children that are averaged rate rules themselves. To estimate the kinetic rate parameter for an individual reaction, the most specific functional groups that describe the reaction are determined by descending the reactant trees as far as possible. This set of functional groups is then used to match rate rules in the database. Consider the simple hierarchical trees for functional groups in a bimolecular reaction shown in Fig. 7. If a reaction matches the functional group pair (A 3 , B 3 ), but the database is missing this particular rate rule, then RMG will first search the nearest distance parent pairs (A 1 , B 3 ) and (B 1 , A 3 ) to see if these pairs contain data. If one or more of these pairs contains data, the geometric average of those rates will be used as the kinetics estimate. If neither contains data, RMG will move on to the distance 2 pairs:</p>
        <p>(A 1 , B 1 ), (A, B 3 ), (B, A 3 ), and once again check for data and use the geometric average of these data if they exist, continuing until it finds kinetic data or reaches the topmost general set of groups, which always contain data. Given the averaging approximation for kinetic parameter estimation, RMG's accuracy is highly dependent on the amount of data present in its hierarchical trees.</p>
        <p>One drawback of a rate rule based database is the loss of molecular information. The user inputting the rate rule into the database selects the best fitting groups at the time of entry to represent the reaction; however, this provides only functional group information rather than complete molecular information regarding the specific reactants and products. If the functional group hierarchical trees were to be altered, it becomes very difficult to reassign the rate rules without the original reaction information. Therefore, in RMG-Py, users are encouraged to add new kinetic parameter data to the database through ''training'' reactions, which retain information about the real molecules. When RMG finds the training reaction during model generation, it uses the exact kinetics from the training reaction. In addition, RMG automatically generates rate rule data for the set of functional groups that best match the training reaction in the current hierarchical tree so can the kinetics of reactions.</p>
        <p>Sometimes users will wish to use reaction kinetics from literature or calculations that they do not wish to influence other kinetics. In this case, they can create a ''reaction library'' which contains individual reactions and kinetic data that overrides RMG's native kinetic parameter estimation scheme for those reactions only. In RMG, multiple reaction libraries can be used with userassigned priority.</p>
        <p>To include an entire submechanism in the model, the user can use a ''seed mechanism'' in the model generation process. By doing so, the seed mechanism's kinetic parameters will both override RMG's native parameter estimation as well as be forcibly included in the model. This is differentiated from reactions within a reaction library, which will only enter the model if they are deemed to be important through the flux-based model expansion algorithm. Multiple seed mechanisms can be specified in RMG with userassigned priority.</p>
        <p>RMG uses the rate-based algorithm of Susnow et al. [18] to determine which species and reactions to include in the model. The flow chart shown in Fig. 8 demonstrates the model generation process, which begins with a user-specified set of initial species and conditions (i.e. temperature, pressure) and some termination criteria for which to end the simulation (i.e. a specified end time or goal conversion for some initial species). The initial species in the reaction system are placed into the ''core'' of the model and RMG determines all the possible reactions that can result from the core species, generating a list of possible product species on the ''edge''.</p>
        <p>The reactor is initialized at t = 0 and integrated in time until the flux R i = dC i dt to an edge species i exceeds ϵR char , where ϵ is the user-specified error tolerance and R char is the characteristic flux of the system, defined by:</p>
        <p>The edge species with the largest flux is brought into the core, and the reaction generation and integration steps are repeated until the termination criteria is satisfied, generating the final kinetic model, which now contains all the species and reactions that have significant fluxes at the reaction conditions. The expansion of the model core is depicted in Fig. 9.</p>
        <p>Currently, there are two reactor types that can be simulated within RMG. The first is the SimpleReactor, which is an isothermal, isobaric reactor in the gas phase. The second is the LiquidReactor, which is isothermal and isochoric reactor in the liquid phase. More information regarding liquid phase solvation and diffusion-limited kinetics estimation is detailed in Section 3.2.</p>
        <p>A number of additional features in RMG include the ability to automatically generate pressure-dependent rate coefficients, reactions in the liquid phase, estimation of transport properties, and sensitivity analysis. In addition, the latest version of 
            <rs type="software">CanTherm</rs> is bundled within RMG and can be used to calculate thermochemical and kinetic quantities through transition state theory when used in conjunction with quantum chemistry software. In order to assist browsing the database and working with RMG-style species representations, a web front end has been developed and hosted on 
            <rs type="url">http://rmg.mit.edu</rs>, where many tools for RMG are available. Fig. 10. A typical unimolecular system. An activated species C * can be formed either from chemical activation (as the product of an association reaction) or thermal activation (via collisional excitation). Once activated, multiple isomerization and dissociation reactions may become competitive with one another and with collisional stabilization; these combine to form a network of unimolecular reactions described by a set of phenomenological rate coefficients k(T , P) that connect each pair of configurations, not just those directly adjacent.
        </p>
        <p>Thermal unimolecular reactions proceed via nonreactive collisions with an inert third body to provide or remove the energy necessary for reaction. The reaction rate for these unimolecular reactions depend on the number of nonreactive collisions, which in turn is dependent on the pressure of the system. Under conditions where such collisions are rate-limiting, the observed phenomenological rate coefficient k(T , P) is a function of both temperature T and pressure P. A unimolecular system is shown in Fig. 10.</p>
        <p>A framework for estimating these pressure-dependent rate coefficients using high-pressure-limit kinetic data has been implemented in RMG and is described thoroughly in a separate paper [22]. The master equation model describes the unimolecular reaction network mathematically but is very computationally intensive. Thus, three methods for reducing the master equation and estimating the phenomenological rate coefficients have been implemented within RMG in addition to the master equation model: the modified strong collision method [23], the reservoir state method [24], and the chemically-significant eigenvalues method [25]. In the case of automatic generation of pressuredependent rate coefficients, the modified strong collision method is recommended for its speed and robustness. However, detailed investigation of individual reaction networks should be refined using either the reservoir state or chemically-significant eigenvalues method as they are more accurate.</p>
        <p>A framework for modeling solvent effects in RMG has been implemented [26] and is described briefly here. To model solution phase chemistry, we must estimate the changes in the thermochemical properties of a species going from the gas phase to the solvent phase. The thermodynamics of solvation for a species can be modeled through the partition coefficient K , which is defined as the ratio of the concentration of the species in the solvent phase to that in the gas phase at equilibrium:</p>
        <p>Assuming the chemical potential of a species i in each phase may be modeled using the equation:</p>
        <p>the change in the standard Gibbs free energy of a species in going from the gas phase to the solvent phase may be written as</p>
        <p>In other words, the free energy of solvation can be directly calculated from the partition coefficient. Thus, RMG is able to calculate the free energy change using estimated partition coefficient data.</p>
        <p>Linear Solvation Energy Relationships (LSERs) have been developed in order to understand the fundamental nature of solutesolvent interactions. In particular, the Abraham model [27,28] uses molecular descriptors to predict the partition coefficient of a species in a large number of solvents:</p>
        <p>where K is the partition coefficient, the upper case parameters A, B, E, S and L are properties of the solute, and the lower case letters c, s, a, b, e and l are properties of the solvent.</p>
        <p>The Abraham model is an empirical model that relies on experimental partition coefficient data to fit the model parameters. The aA and bB account for the free energy change associated with the formation of hydrogen bonds between the solute and the solvent, the sS and eE terms account for intermolecular interactions such as dipole moments, the lL term accounts for the free energy change associated with the cavity formation process, and c is a correction factor.</p>
        <p>The solvent parameters are obtained through multiple linear regression techniques on partition coefficient data of several solutes in the solvent of interest; these parameters are found in RMG's database as a library. The technique used to obtain solute parameters A, B, E, S, L for a compound for which experimental data are available is similar to the method used for the solvent parameters; however, in order to use the model for a large variety of solutes where experimental data are unavailable, a predictive method is necessary. RMG uses the Group Additivity based scheme for the estimation of Abraham solute parameters published by Platts et al. [29].</p>
        <p>In the absence of a quantitative understanding of the temperature dependence of solvation thermodynamics [30], we use the simple approximation to model first order temperature dependence of ∆G solv :</p>
        <p>In RMG we use the Mintz [31][32][33] correlations to estimate ∆H • solv empirically:</p>
        <p>where A, B, E, S and L are the same solute descriptors used in the Abraham model for the estimation of ∆G solv . The lowercase coefficients c ′ , a ′ , b ′ , e ′ , s ′ and l ′ characterize the solvent and were obtained by regression to experimental data in a manner similar to that employed for the Abraham correlations. Generation of kinetic models requires an understanding of solvation effects on elementary reaction rates. Solution phase reactions can be limited by transport of the reacting species towards each other (known as diffusive limits) and the cage-effect, which describes the increased probability of reaction between species trapped in a solvent cage. The theory behind diffusive limits in solution phase reactions is well established [34] and gives the expression of the effective rate constant k eff for a diffusion limited reaction:</p>
        <p>where k r is the intrinsic reaction rate, R is the sum of radii of the reactants and D is the sum of the diffusivities of the reacting species. This expression represents the simplest equilibrium treatment of diffusive limits in the solution phase and is based on the Smoluchowski theory with corrections made by Collins and Kimball [35]. The effect of diffusive limits on reaction rates depends on the relative magnitudes of the intrinsic reaction rate k r and the diffusive limit 4π RD. Estimation of diffusive limits for a given reaction requires estimates of the species radii and diffusivities in different solvents. In RMG, we use the McGowan scheme [36] to estimate the species volume and its effective radius and the Stokes-Einstein correlation to estimate species diffusivities, which requires the solvent viscosity as input. Temperature-dependent viscosity correlations are included for a variety of solvents.</p>
        <p>In order to maintain thermodynamic consistency, the forward rate constant, k f in the reaction scheme</p>
        <p>B + C shall be affected if the reverse process k r,eff is slowed down by diffusion.</p>
        <p>In cases where both the forward and the reverse reaction rates are bimolecular, both diffusive limits are evaluated and the direction with the larger effect is used.</p>
        <p>RMG is capable of estimating the transport properties of chemical species in a reaction mechanism automatically [37]. The transport data are saved in a CHEMKIN compatible format and can be used to run transport-dependent simulations such as laminar flames. RMG includes the GRI-Mech3.0 [38] transport library and estimates the transport properties for other molecules. The transport properties outputted are the parameters for the Lennard-Jones potential, which describes the intermolecular potential between two molecules or atoms:</p>
        <p>where V is the intermolecular potential, ϵ is the well depth and measures the strength of attraction between the two particles, σ is the internuclear distance at which the intermolecular potential is zero, and r is the internuclear distance between the two particles.</p>
        <p>RMG estimates σ (in Ångstroms) and ϵ (in Joules) using the properties of the fluid at the critical point (c) through empirical correlations taken from Tee et al. [39]:</p>
        <p>where k B is the Boltzmann constant, T c is the critical temperature in Kelvin, and P c is the critical pressure in bar. The critical temperature and pressure, as well as boiling point T b , for each molecule are estimated using the Joback group additivity method [40,41]:</p>
        <p>where n a is the total number of atoms in the molecule, and T c,i , P c,i , and T b,i are the group contributions to critical temperature, critical pressure, and boiling point, respectively. RMG also provides the shape index, which indicates whether the molecule is monatomic (shape index = 0), linear (shape index = 1) or nonlinear (shape index = 2) in geometry. Currently, RMG sets the dipole moment, polarizability, and rotational relaxation collision number to zero.</p>
        <p>Sensitivity analysis can be performed within RMG with respect to either the forward kinetic rate parameters or thermochemistry ∆G • f (T ) of an individual species. The kinetic model can be described as a set of ordinary differential equations of the form:</p>
        <p>where y is the solution vector, t is time, λ is the time-independent vector of input parameters, and y 0 is the initial value of y. In this definition the first order sensitivity coefficient of output y i with respect to parameter λ j is given as:</p>
        <p>We are particularly interested in the normalized sensitivity of species i with respect to the rate coefficient k j of reaction j:</p>
        <p>and the semi-normalized sensitivity with respect to the ∆G • j of species j:</p>
        <p>Both types of sensitivities can be automatically calculated within RMG, either in a stand-alone analysis or at the end of a model generation job. RMG relies on the differential equation solver 
            <rs type="software">DASPK</rs>
            <rs type="version">3.1</rs> [42] to compute the sensitivities automatically.
        </p>
        <p>The most up to date version of 
            <rs type="software">CanTherm</rs> is bundled as a subprogram of RMG and contains additional features and improvements on the original program [43]. It is a tool used for computing the thermodynamic properties of chemical species, the pressuredependent rate coefficients, and the high-pressure limit rate coefficients for chemical reactions using results from quantum chemistry calculations. Thermodynamic properties are computed using the Rigid Rotor Harmonic Oscillator approximation with optional corrections for hindered internal rotors. Kinetic parameters are computed using canonical transition state theory with optional tunneling corrections. 
            <rs type="software">CanTherm</rs> is compatible with output files from several well known quantum chemistry software programs, including 
            <rs type="software">Gaussian</rs>, 
            <rs type="software">MOPAC</rs>, 
            <rs type="software">QChem</rs>, and 
            <rs type="software">MOLPRO</rs>. For different methods, 
            <rs type="software">CanTherm</rs> applies additional atom, bond, and spin-orbit coupling energy corrections to adjust the computed energies to the usual gas-phase reference states.
        </p>
        <p>The RMG interactive website is located at http://rmg.mit.edu and includes a web form for generating input files for the RMG software package. The web-front end also visually displays all the databases: kinetics, thermodynamics, solvation, statistical mechanics, and transport data, and has molecular structure search features enabled. With an user-inputted molecule or reaction, the website can return RMG's estimate for kinetics or other properties, along with the original sources for those estimates. This helps provide transparency for RMG's databases and methodology. Since the RMG adjacency list format for molecules can be difficult to construct by hand, the website also provides tools to convert SMILES, InChI, CAS number, and common species names into the adjacency list format. Visualization of the molecular structures and reactions within an RMG-generated model is also possible by uploading the outputted 
            <rs type="software">CHEMKIN</rs> file and associated species dictionary file. Visualization through the interactive website also enables filtering of the reactions by family and species, and automatic display of evaluated kinetics and heats of reaction. Additional web tools include visual model comparison, model merging, and kinetics plotting. The RMG interactive website is written on a Django python-based framework and is also open source. The source code can be found in the 
            <rs type="software">Github</rs> repository 
            <rs type="url">https://github.com/ReactionMechanismGenerator/RMG-website/</rs>.
        </p>
        <p>The following example uses an n-heptane model generated by RMG to simulate recent pyrolysis experimental data gathered by Yuan et al. [44] at Hefei. The experimental study was performed at low pressure (400 Pa) with temperatures ranging from 780 to method="modified strong collision", maximumGrainSize=(0.5,"kcal/mol"), minimumNumberOfGrains=250, temperatures=(300,3000,"K",8), pressures=(0.001,100,"bar",5), interpolation=("Chebyshev", 6, 4), )</p>
        <p>This input file first describes databases to be used: the specific libraries and estimation method. A generatedSpecies-Constraints option is used to constrain the maximum number of electrons in the model to 1 or fewer, excluding biradical species from appearing in the model. This parameter is used to speed up model convergence by restricting the types of species that RMG considers within the model.</p>
        <p>Then, the reactive and nonreactive species are declared: nheptane and argon, followed by a series of one or more reaction systems that describe the initial quantities of the reactants and the temperature and pressure conditions. Since the experimental conditions span a wide range of temperatures, 3 reactor systems were used with temperatures of 1000, 1500, and 2000 K. Each reactor has a termination criterion of 99% conversion of n-heptane, with a fallback reaction time termination criterion.</p>
        <p>Then the numerical simulation tolerances are given, followed by the user's desired model generation error tolerance ϵ described in Section 2.4. This tolerance ϵ = 0.02 can be further tightened to a smaller value if the user wishes to obtain a larger and more comprehensive model. Pressure dependence in this example is turned on because the reaction conditions are at low pressure and high temperatures, making pressure dependence highly relevant for kinetics. Note that The completed n-heptane pyrolysis RMG model contains 49 species and 638 reactions. Simulations of the flow tube pyrolysis experiments were carried out in CHEMKIN-PRO [45] for the RMGgenerated model and the LLNL n-heptane detailed mechanism version 3.1 [46]. The major species found in experiment along with the model simulations are shown in Fig. 11. The RMGgenerated model is a first-pass model constructed automatically solely using RMG's databases. It is able to match the LLNL model for predicting the species conversion of n-heptane. Sensitivity analysis and refinement of thermodynamic and kinetic parameters within the database typically follow in the model development cycle.</p>
        <p>
            <rs type="software">RMG-Py</rs> is implemented using a new modularized design that improves upon its predecessor, 
            <rs type="software">RMG-Java</rs>, using smaller modules and packages grouped by functionality. The database is distinctly separate from the code and stored in a separate RMG-database folder. 
            <rs type="software">RMG-Py</rs> has also been developed using the software principles of unit testing, strong error handling, integrated documentation, and distributed version control through 
            <rs type="software">GitHub</rs>. The shift to Python allows us to work with a number of existing chem informatic libraries which provide a number of advanced features to RMG. Selective optimization of performancecritical areas of the code has been done through 
            <rs type="software">Cython</rs> [47,48]. 
            <rs type="software">Cython</rs> compiles Python-style code to C through static typing, leading to over an order of magnitude or higher speed up for numerically intensive code. We are currently developing parallelization methods to further increase the model generation speed and reduce memory requirements. The new version of RMG is designed with the user in mind, with a web front end to improve ease of use and transparency within the kinetics community.
        </p>
        <p>RMG is one of the most widely used automatic reaction mechanism generation codes currently available. With the shift to Python, it now takes advantage of several existing chemistry libraries and is capable of constructing mechanisms for species involving carbon, hydrogen, oxygen, sulfur, and nitrogen. RMG's features include thermodynamic and kinetic parameter estimation, automatic generation of pressure-dependent rate coefficients, liquid phase solvation corrections, transport property estimation, and sensitivity analysis. RMG also contains the subprogram 
            <rs type="software">CanTherm</rs>, which computes thermodynamic parameters and high-pressure limit and pressure-dependent rate coefficients from quantum chemistry calculations. RMG has been developed for over a decade and has generated numerous validated reaction networks. This new version of RMG provides the most advanced features for reaction mechanism generation in a single open-source package, with additional webbased tools for convenience.
        </p>
        <p>CO carbon atom with one double bond, to oxygen CS carbon atom with one double bond, to sulfur Cdd carbon atom with two double bonds Ct carbon atom with one triple bond Cb carbon atom with two benzene bonds Cbf carbon atom with three benzene bonds Silicon atom types Si silicon atom with any local bond structure Sis silicon atom with only single bonds Sid silicon atom with one double bond SiO silicon atom with one double bond, to oxygen Sidd silicon atom with two double bonds Sit silicon atom with one triple bond Sib silicon atom with two benzene bonds Sibf silicon atom with three benzene bonds Nitrogen atom types N nitrogen atom with any local bond structure N1d nitrogen atom with one double bond and two lone pairs</p>
        <p>We gratefully acknowledge funding for RMG development by the Department of Energy, Office of Basic Energy Sciences, through grant DE-FG02-98ER14914 and by the National Science Foundation under Grant Numbers 0312359 and 0535604.</p>
        <p>We also gratefully acknowledge the efforts of all current and past developers: Joshua W. Allen, Robert W. Ashcraft, Jacob Barlow, Gregory J. Beran, Pierre L. Bhoorasingh, Beat A. Buesser, Caleb A. Class, Connie W. Gao, C. Franklin Goldsmith, William H. Green, Kehang Han, Michael R. Harper, Amrit Jalan, Murat Keceli, Fariba Seyedzadeh Khanshan, Victor Lambert, Gregory R. Magoon, David M. Matheu, Shamel S. Merchant, Jeffrey D. Mo, Sarah Petway, Sumathy Raman, John Robotham, Sandeep Sharma, Belinda L. Slakman, Jing Song, Yury Suleimanov, Sean Troiano, Aäron G. Vandeputte, Nick M. Vandewiele, Kevin M. Van Geem, John Wen, Richard H. West, Andrew Wong, Hsi-Wu Wong, Paul E. Yelvington, Nathan W. Yee, and Joanna Yu.</p>
    </text>
</tei>
