<?xml version="1.0" encoding="UTF-8"?>
<tei xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader>
        <fileDesc xml:id="_1"/>
        <encodingDesc>
            <appInfo>
                <application version="0.8.0" ident="GROBID" when="2024-08-31T06:49+0000">
                    <ref target="https://github.com/kermitt2/grobid">A machine learning software for extracting information from scholarly documents</ref>
                </application>
            </appInfo>
        </encodingDesc>
    </teiHeader>
    <text xml:lang="en">
        <p>Colour can convey a mood or elicit a particular emotion and, in terms of web design, colour can influence attitudes, perceptions, and behaviours. However, many websites demonstrate inaccessible colour choices. Numerous online colour palette design tools only focus on assisting designers with either the aesthetics or accessibility of colours. With a user-centered design approach, we developed the 
            <rs type="software">Accessible Colour Evaluator</rs> (ACE, daprlab.com/ace) which enhances web developers' and designers' ability to balance aesthetic and accessibility constraints. We distributed an online questionnaire to 28 web developers and designers to understand their attitudes and utilisation of accessibility guidelines, as well as to gather initial design requirements for ACE. With this information, we created three low-fidelity paper prototypes that were used to create two high-fidelity prototypes. The high-fidelity prototypes were discussed with 4 web developers and designers during a design workshop, and their feedback was used to develop the final version of ACE. A comparative evaluation of ACE and three existing alternative tools was conducted with 10 new web developers and designers. All participants were able to complete a colour palette design task when using ACE and identified ACE as their most preferred tool. The mean scores for the six TLX measures show ACE as providing the best performance and causing the lowest frustration. Finally, we conducted a small focus group with 3 web developers and designers to gather qualitative feedback about ACE. Participants identified a number of ACE's strengths and made suggestions for future extensions and improvements.
        </p>
        <p>Colour plays a substantial role in how we feel, act, and respond to our surroundings [Valdez and Mehrabian 1994]. For example, visual designers often choose the colours for a design to achieve some effect, set a tone, or influence the emotional or behavioural response of the end user [Eiseman 2000[Eiseman , 2006]]. In terms of websites, the choice of colour palette has been shown to influence attitudes, perceptions, and even how people use websites [Ling and Van Schaik 2002;Cyr et al. 2010;Bonnardel et al. 2011].</p>
        <p>However, many websites demonstrate inaccessible colour choices [Kuzma 2010;Patra et al. 2014] despite laws that require and guidelines that support making websites accessible for people with visual impairments. Three examples of laws are the 2010 UK Equality Act (www.legislation.gov.uk), the 1998 US Section 508 Amendment to the Rehabilitation Act (www.section508.gov), and the 1990 Americans with Disabilities Act (www.ada.gov),1 while the latest Web Content Accessibility Guidelines (WCAG) 2.0 (www.w3.org/TR/WCAG20) provide support in how to achieve accessibility. It is also in the interests of web developers and designers to consider colour choices more carefully to improve the web experience for a wider audience, particularly for people with colour vision deficiency. Furthermore, accessibility should not be an afterthought once a website is public [Centeno et al. 2005] and correcting accessibility mistakes later in the development cycle tends to increase the overall cost of a project [Henry and Arch 2012].</p>
        <p>There are many online colour palette design tools to help with choosing website colour palettes (e.g., 
            <rs type="creator">Adobe Color CC</rs>, COLOURlovers, Color Contrast Checker); however, most tend to focus on either aesthetics or accessibility in a mutually exclusive fashion, typically forcing web designers to choose between these two constraints rather than addressing both. Through consulting the related literature (details below), analysis of existing online colour palette tools, and discussions with web developers and designers, we have identified the following four key functions that online colour palette tools should provide to enable web developers and designers to balance aesthetics and accessibility when choosing colours:
        </p>
        <p>(1) Allow choosing an entire set (palette) of colours: allows many colours to be chosen from the outset and then tweaked to meet aesthetic and accessibility constraints.</p>
        <p>Choosing multiple colours is a common feature in palette tools that emphasise aesthetic colour choice and reflects designers' practice when choosing colours [Jalal et al. 2015].</p>
        <p>(2) Allow comparing many colours simultaneously for accessibility violations: reduces the time needed to find a palette of colours that meets WCAG 2.0 minimum contrast ratio recommendations. Most accessibility-focused online colour palette tools only compare two colours at once, but multiple colour comparisons are needed to support Function (1) described above.</p>
        <p>(3) Provide an example website rendered using the chosen palette: allows the web developers and designers to see a more comprehensive view of how their colour choices work together as a whole rather than as abstract blocks of colour in a palette. (4) Provide colour vision deficiency (CVD) simulations of the sample website (from (3)):</p>
        <p>easily viewable CVD simulations of the sample website help build web developers' and designers' understanding of how people with different sensory capabilities perceive their work. This function also reinforces the importance of complying with accessibility guidelines by making problems more explicit.</p>
        <p>To enhance web developers' and designers' ability to balance aesthetics and accessibility, we developed the 
            <rs type="software">Accessible Colour Evaluator</rs> (ACE, daprlab.com/ace), a new online colour palette design tool that accommodates the four functions listed above. Accessibility is traditionally something that designers leave until later in the design project or after the website is complete [Swallow et al. 2014]; however, web developers and designers will be able to choose colours that meet their aesthetic and accessibility constraints during the earliest stages of a website's development when using ACE. ACE allows an entire palette of colours to be chosen and makes it easier to choose accessible colours by emphasising conformance to-or violation of-WCAG 2.0 minimum contrast guidelines in the palette. A palette demonstration webpage is provided, as are Accessible Colour Evaluator 5:3 CVD simulations of the sample webpage. In addition, ACE provides CVD simulations of the individual colours in the palette while they are being chosen.
        </p>
        <p>ACE was developed through a user-centered design (UCD) process to meet the needs of web developers and designers [Norman 2002]. Feedback was gathered at multiple stages to steer development of ACE in the direction that would best fulfill the requirements of web designers and developers. Our development followed four stages:</p>
        <p>(1) We distributed an online questionnaire to 28 web developers and designers to understand their attitudes and current utilisation of accessibility guidelines, as well as to gather initial design requirements for ACE.</p>
        <p>(2) Using the initial requirements from the questionnaire, we designed three lowfidelity paper prototypes that informed two high-fidelity prototypes of ACE. The high-fidelity prototypes were discussed with 4 web developers and designers during a design workshop. Workshop feedback was then used to develop the final version of ACE.</p>
        <p>(3) We recruited 10 new web designers and developers and conducted a comparative evaluation of the final version of ACE and three existing alternative tools. (4) Finally, we organised a small focus group with 3 web developers and designers to gather qualitative feedback about ACE.</p>
        <p>In the comparative evaluation (Stage 3), all participants were able to complete a colour palette design task that required balancing aesthetics and accessibility when using ACE. All participants chose ACE as their most preferred tool, and when we look at the mean ratings of the six measures of the Raw Task Load Index (RTLX) [Hart 2006], ACE was perceived as providing the best performance and causing the lowest frustration. During the focus group (Stage 4), the participants were positive about ACE enabling them to check WCAG 2.0 levels for multiple colours simultaneously, as well as the inclusion of a demonstration webpage to show the colour palette in full and the CVD simulations. The participants also made suggestions for the future of ACE, which are discussed later in the article.</p>
        <p>In this article, we make five contributions. First, we identify four key functions that online colour palette tools should provide to allow designers to balance aesthetics and accessibility when designing colour palettes. Second, we describe ACE, a new colour palette design tool that we designed using a UCD process to be the first such tool to provide the four key functions we identified. Third, we describe a comparative evaluation of ACE in which we compared our tool to three existing colour palette design tools and found that ACE was most preferred by designers and allowed all of the participants to accomplish a design task that balanced aesthetics and accessibility. Fourth, we present a qualitative focus group evaluation of ACE in which the strength of incorporating our four functions was reinforced and future improvements were identified. Finally, we demonstrate through ACE the benefits of conducting a comprehensive and structured UCD approach when building an accessibility tool and discuss these research findings further.</p>
        <p>Activity online is continually increasing as are the number of websites available online. The Internet monitoring company Netcraft has identified roughly a 2,267% increase of active websites from June 2000 to June 2015 [Netcraft 2015]. This figure, while not conclusive, demonstrates that the use of the Internet has increased significantly. In part, this can be explained by the present ease of creating and maintaining a website. Computers are more affordable and there is a variety of software available to support novice web developers and designers. In addition to this, there are many free online tutorials and lessons (e.g., codecademy.com), further increasing the resources available.</p>
        <p>There are guidelines and laws in place that aim to make the Internet more inclusive, yet content creators may not be aware of them. A UK report by the Oxford Internet Institute estimates that just 51% of British people who have a disability access the Internet compared to 84% of people who are not disabled [Dutton et al. 2013]. Accessible websites should help to reduce the gap between these two groups. Therefore, it is important to consider people with disabilities during website design; this becomes achievable by providing assistance in the form of guidelines.</p>
        <p>The World Wide Web Consortium (W3C) first published the WCAG 1.0 [Chisholm et al. 1999] to ensure accessible content. In 2008, version 2.0 was released, which followed the same core values but with updates to the recommendations and how they are delivered [Caldwell et al. 2008]. There is also government legislation, which has been set up to make sure that everybody has equal opportunity and nobody is unfairly excluded. For example, the UK has the Equality Act 2010 (www.legislation.gov.uk), which includes nine protected characteristics (including disability) for which it is unlawful to discriminate and companies, government bodies, and educational institutions must anticipate the needs of people with a disability so they have suitable access to goods, facilities, and services-including websites. Youngblood [2013] posits the importance of increasing awareness among novice web developers and designers (such as students) about the importance of website accessibility. Furthermore, Youngblood asserts that it is not enough for a person to be made aware of accessibility and good design practice, but they must fully engage with it. Part of Youngblood's proposed solution is for novice web developers and designers to make use of free tools that offer (1) identification of violations according to web guidelines and (2) demonstrations of how a person with an impairment perceives the website content, thus allowing web developers and designers to gain a deeper understanding of accessibility issues. ACE was developed to include both of these criteria by clearly identifying WCAG colour contrast violations and simulating CVD. Web developers and designers have concerns with the way that online accessibility guidelines are presented [Swallow et al. 2014], therefore a tool that identifies WCAG colour contrast violations would make it easier to create accessible content. Swallow et al. [2014] recruited 26 web developers to evaluate a newly developed online accessibility resource called WebAIR. WebAIR was developed to address three issues that were identified as reasons for why web developers and designers are not always adopting accessibility. The reasons were as follows: (1) the language and terminology used by accessibility resources can be unfamiliar, (2) the available resources are not made to fit into the web developers' design process, and (3) the developers can experience information overload because the resources present too much content at once. The results showed that WebAIR scored significantly better than WCAG 2.0 on the measurements: usefulness, ease of use, navigability, understandability, organisation, likelihood of using, completeness, and amount of information; however, no difference was found for the measurement of whether there were too few or too many items that were required to be tested. Follow-up interviews further supported the preference for WebAIR over WCAG, although the web developers indicated there were still improvements that could be made. Swallow et al. [2014] also suggest that accessibility is typically something web developers leave until later in the design project or after the website is complete and this could be addressed by incorporating accessibility features into a tool that is used during the development stages of a website.</p>
        <p>CVD is a visual impairment in which a person perceives a reduced number of colours in the visible spectrum [Birch 2001]. There are three ways in which a person can have CVD. The first is congenital or inherited, the second is acquired, and the third is situationally induced.</p>
        <p>Inherited CVD, specifically the impairment of red-green discrimination, is predominantly found among males because it results from a defect in the X-chromosome [Nathans et al. 1986]. Males who are of European descent have a 7.4% prevalence for red-green CVD compared to 0.5% for females of European descent [Sharpe et al. 1999]. Congenital red-green CVD prevalence is lower in Asian males (4%-6.5%) and African and African-American males (4%), although the percentage for African and African-American males is not supported by strong evidence [Birch 2012]. Tritanopia and tritanomaly, which can be thought of as blue-yellow CVD, is exceedingly rare, with estimations of prevalence between 0.002% and 0.008% in the UK; however, unlike other types of inherited CVD, it is not linked to the X-chromosome, thus it is not necessarily more common for men to have compared to women [Sharpe et al. 1999].</p>
        <p>Acquired CVD is when people who were not born with CVD develop it at some point in their lifetime. For example, acquired CVD can be caused by ocular diseases such as glaucoma [Pacheco-Cutillas et al. 1999] or diabetic retinopathy [Fong et al. 1999], age related changes [Delahunt et al. 2004], cortical injury [Zeki 1990], or chemical exposure to solvents [Dick et al. 2000]. The statistics for the overall prevalence of acquired CVD are more difficult to establish considering the diverse range of potential causes [Formankiewicz 2009]. One article has looked at the 20% prevalence of tritan errors in rural and urban areas from central and southern Africa and the authors conclude the participants' errors are likely due to acquired CVD [Davies et al. 1998].</p>
        <p>Situationally induced CVD is when environmental lighting affects our judgment of colour or we may be wearing tinted glasses that change the colours we perceive [Flatla and Gutwin 2012b].</p>
        <p>Due to the overall prevalence of these types of CVD, it is important to consider the use of colour online. It can be difficult for a person with CVD (who may not realise that they are missing out on information within the page) to be able to inform the owner of a website about the issue, as described in an anecdote by Todd Follansbee [2001]. Colour has also been adopted online within Internet security systems, but there have been concerns raised in recent years [Yan and El Ahmad 2008;El Ahmad et al. 2012] about the use of colour within CAPTCHAs [Von Ahn et al. 2003], which are used to verify if the user is human.</p>
        <p>The WCAG 2.0 give three recommendations about the use of colour on websites (1.4.1, 1.4.3, and 1.4.6), and each of these are given a different level of compliance [Caldwell et al. 2008]. The first guideline is 1.4.1, and it is a Level A priority checkpoint, which suggests that colour must never be the sole piece of information telling the user they are able to perform an action on a page element. Nor should colour be relied on to highlight a page element or communicate information that is meaningful. Unvisited hyperlinks (blue) and visited hyperlinks (purple) fail to meet this requirement. Hyperlinks are usually underlined to distinguish them from normal text on a page, yet colour is the only indicator for whether a link has been visited before. Blue and purple colours are difficult to distinguish for people with protan and deutan CVD [Flatla and Gutwin 2012a] and this problem would be more commonly recognised if web developers and designers used CVD simulations. Early research by Viénot et al. [1999] developed a method for creating colourmaps for people with protanopia and deuteranopia for the purpose of allowing designers a way of seeing their designs as a person with CVD would see them.</p>
        <p>The second guideline (1.4.3) is a Level AA priority checkpoint and deals with the contrast of any text, or images of text, against the text's background. Guideline 1.4.3 suggests that the contrast ratio between the text and its background should be a minimum of 3:1 for large text (18pt or 14pt bold) or a minimum of 4.5:1 for text that is smaller.</p>
        <p>The last guideline (1.4.6) has a Level AAA priority checkpoint equivalent to 1.4.3 but with enhanced contrast ratios. It recommends that the contrast ratio of large text begins at 4.5:1, and when the text is smaller it needs to be a minimum of 7:1. These recommendations ensure that web developers and designers are providing at least a minimum level of colour accessibility in their website projects for people with CVD and low vision.</p>
        <p>Adherence to accessibility guidelines has somewhat improved since the introduction of WCAG 1.0, and this is, in part, a result of indirect factors rather than necessarily conscious effort by the web developers and designers [Richards et al. 2012]. Accessibility is generally something that is, for the most part, continually ignored [Lazar et al. 2004;Petrie et al. 2005;Lazar et al. 2013;Hanson and Richards 2013;Patra et al. 2014]. Novice web developers and designers may account for some websites with poor colour choices, but there are still violations found among websites that should be exemplars of an accessible website. Kuzma's [2010] study highlights the accessibility issues that were present within government websites in the UK. Kuzma explained that in the years prior to the study's publication, website accessibility was becoming more important. However, even with the laws and guidelines in place, Kuzma argued that it was still rare to find government websites that were accessible for everybody. From analysis of 130 Member of Parliament websites of a total of 646, Kuzma found, among other problems, that 68% of the websites included low-contrast text and 75% included lowluminosity contrast text.2 Web developers and designers do not have to stop using colours, they simply need to use a tool that would help them choose accessible colour combinations, thus improving the browsing experience of Internet users. A more recent study conducted by Patra et al. [2014] looked at all the elements on a series of Indian websites and measured the number of occurrences where those elements failed to meet WCAG 2.0 standards. Among other issues there was disregard for sufficient colour contrast at both the AA and AAA levels.</p>
        <p>Automatic accessibility tools aid in meeting guidelines and Brajnik [2004] concludes that accessibility tools are beneficial and necessary as part of the process for making high-quality accessible websites. Furthermore, the use of an accessibility tool fits within the first stage of a three-stage methodology developed by Greeff and Kotzé [2009] to make a website more accessible. Previous research has identified the need to update colour palette or selection tools to fit within the workflow style of a variety of different designers [Moretti and Lyons 2002;Meier et al. 2004;Jalal et al. 2015]; however, the solutions that have been suggested do not include features to allow designers to consider people with visual impairments such as CVD. Lazar et al. [2004] suggested that contemporary web accessibility tools were inadequate and guidelines difficult to interpret. Using our tool, web developers and designers can determine if potential colour schemes are accessible for Internet users, similarly to Harrower and Brewer's [2003] tool for choosing the best colour schemes for maps depending on the circumstances of the map's use.</p>
        <p>We conducted a series of Google web searches ("website colour generator," "website colour palette generator," "website accessible colour palette generator," and "website colour contrast picker") to find which tools are available for choosing and evaluating website colours. We relied on 
            <rs type="software">Google</rs>'s automatic stemming of words in the search query [Uyar 2009] so variations of terms were also considered. For example, "colour" and "color" are automatically interchanged during the search, thus providing more flexibility. We want to help web developers and designers pick suitable colours before a website is put online, so we looked for tools that are to be used during the early stages of the website's development. An example of a website that we discarded was Check My Colours (checkmycolours.com), which checks the colours of a website that is already available online. A report by Chitika, Inc [2013] indicated that 91.5% of search clicks occur on the first page, and within the first result page 75.7% of clicks are on the top five results. With this information, we chose to include the first five websites that assisted web developers and designers in choosing a colour palette. We also found that after the first search query was used, fewer unique websites were returned, suggesting there is a popular set of tools used among current web developers and designers. Table I lists our findings and provides a breakdown of whether the website provides WCAG accessibility checks, CVD simulation, the ability to build a palette with more than two colours, and an example of the chosen colours in use.
        </p>
        <p>Of the 12 websites found, only Contrast-A allows its users to check for WCAG 2.0 contrast violations and experience a CVD simulation of the colours chosen. However, it only lets the user compare two colours at any one time. The CVD simulation section is also hidden by default, making it difficult to find.</p>
        <p>Paletton and Color Scheme Designer 3 both provide CVD simulation; however, it is left to the web developers' and designers' subjective judgement as to whether there is sufficient contrast between colours. Color Safe, Color Contrast Checker, Accessible Color Palette Evaluator, Colour Contrast Check, and Contrast Checker all allow examining colour pairs for a WCAG 2.0 contrast violation. While the Accessible Color Palette Evaluator allowed us to check contrast with more than two colour pairs at a time, it was only possible to select one colour at a time to compare against all other colours. It did not compare many colours against many colours simultaneously. The other four websites (Coolors, HTML Color Chart/Picker, Adobe Color CC, and Colllor) only let users explore colours, and they do not provide any accessibility checks or CVD simulation.</p>
        <p>None of the websites included the ability to compare more than two colours at a time, WCAG 2.0 contrast checking, seeing the colours used in an example, and CVD simulation of the colours. To address this, we identified these four features as core to ACE and used them to shape our design process.</p>
        <p>An online questionnaire (Appendix A) was distributed to web developers and designers to elicit a set of requirements that could be used as an initial basis on which to build ACE. The questionnaire consisted of four main sections and a mixture of quantitative and qualitative questions.</p>
        <p>(1) The first part contained general demographic questions.</p>
        <p>(2) The second part asked about the participants' awareness and use of accessibility guidelines.</p>
        <p>(3) The third part specifically dealt with CVD as an accessibility concern and looked to see if and when the web developers and designers would try to ensure content was accessible for CVD users. (4) The fourth part of the questionnaire focused on the proposed accessible colour support tool: ACE.</p>
        <p>In total, 28 participants (16 male and 12 female) took part in the study. There were 13 participants in the 18-to 24-year-old group, 11 participants in the 25-to 34-year-old group, 1 participant in the 35-to 44-year-old group, and 3 participants in the 45-to 54-year-old group.</p>
        <p>The mean number of years working in the area of website creation was 6.41 years (one participant did not respond to this question). Table II shows the frequency of descriptions used by participants to further explain the type of work they do.</p>
        <p>The data show 18 participants (almost two-thirds) are aware of the W3C Web Content Accessibility Guidelines, yet 10 participants (only around one-third) make use of its recommendations. Eight participants consider accessibility issues from the start of a new project, another 8 consider accessibility issues during the process, and 5 only look into accessibility when a functional version of the website is complete. The remaining 7 participants say they do not consider accessibility issues during any stage of a project. This means 71.43% of the sample do not consider accessibility guidelines from the outset of a project, which reinforces the issue of accessibility being an afterthought, when it should be considered all the way through development. Furthermore, only 6 participants use tools to help them check for accessibility violations.</p>
        <p>4.2.2. Awareness + Designing for CVD. When looking at colour accessibility, 25 of 27 participants (one missing response) were aware of CVD, whereas only 13 of 27 participants considered Internet users with CVD when they were working on a project. To further understand how often people with CVD are considered, we asked the participants to estimate the percentage of projects they had been involved in that designed websites to be accessible for visitors with CVD. The results of this are presented in Table III.</p>
        <p>Two extremes are evident from the data in Table III: CVD is not considered at all or rarely considered (0%-20%) by 17 of 27 participants (62.96%) and, second, for 8 of 27 (29.63%) respondents it is always or nearly always considered (81%-100%).</p>
        <p>Only two participants indicated they use an online tool to meet colour guidelines. The 25 participants who responded "No" to using an online tool were then asked if an online tool, which assists in choosing accessible colour palettes, would be beneficial. Nine participants strongly agreed, 14 participants moderately agreed, 1 participant slightly agreed, and 1 participant indicated they had a neutral opinion on the matter. From the 25/27 participants who did not already use an online tool to check for accessible colours, 18 participants indicated it should be developed so it can be used during the planning or design stage of a website's creation.</p>
        <p>Participants were asked to provide a list of features that they would like to see in an interactive colour tool or website that assists in choosing accessible colours. Nineteen participants responded to this question, and the features were grouped by common theme so we could establish popular requests (Table IV).</p>
        <p>The most frequently requested user requirement, as seen in Table IV, was to include some form of CVD simulation. This is important since it would provide web developers and designers greater insight into the colour perception of somebody with CVD. It also supports Youngblood's [2013] recommendation for more engaging resources to provide insight into how other users may experience websites. One participant elaborated with "If I can see the problem from their perspective, I'll have more incentive to change it."</p>
        <p>The second most requested features were the ability to enter and copy HEX codes and to input a website URL for evaluation. The first feature is important for checking or exploring colour schemes because it makes it easier for web developers and designers to work between ACE and other software. However, since the participants felt ACE should be used early in the development process, entering the URL to evaluate a website is not something we will explore at this time. Considering accessibility early is recommended [Biswas et al. 2012], and we want to encourage this. If web developers and designers want to check colours of a website that is available online, then the HEX codes can still be put into ACE to check for colour contrast violations, albeit this approach would be cumbersome.</p>
        <p>The third set of most requested features is enabling exploration of many colours, reporting colour contrast ratio, suggesting adjusted colours to ensure WCAG 2.0 compliance, and some guidance on colours that work well together. We do not implement the last two suggestions because we wanted web developers and designers to have full control over the palette. Users can fine-tune the colours how they want and use the contrast ratio feedback to check when a minimum required contrast is met. Furthermore, colour theory constraints can be implemented in a future version but we did not feel it was needed for the main purpose of this research.</p>
        <p>Finally, there was a set of individual feature requests. We felt a browser extension could be explored at a later time, as could allowing users to export a CSS file with the colour scheme, and incorporating other WCAG checking features. We will make it clear to the web developers and designers how they can fix a colour contrast violation by displaying the contrast ratio and the minimum contrast ratio needed to pass. Web developers and designers can then adjust the colours as they see fit to increase the contrast. Highlighting areas of concern would be more suitable in a tool that evaluates a complete webpage rather than just combinations of colours. Including a working preview with the colour palette that has been created was also requested. This would provide a more concrete view of how the colours work together and we implement this feature. Having the option to upload a set of colours would save time; however, we focus initially on allowing the web developers and designers to use ACE by inputting HEX codes. An interesting approach to restricting designers was suggested, where after an initial colour is chosen the other colours that fail to meet the minimum contrast level are removed to ensure the user is unable to select a colour that will not result in a pass; this is explored in a prototype. Providing examples of accessible colour palettes and accessible colours palettes that follow current design colour choice trends could be useful. We discuss in the future work section how we can implement a social feature into ACE to build up a repository of accessible colour palettes rather than create a collection based on our personal judgements.</p>
        <p>Awareness of CVD was greater than the consideration of colour accessibility. The low percentage of websites that were designed to be accessible for visitors with CVD indicates that accessibility is often not considered. The reason for this finding could be in part because accessibility resources are not meeting the needs of web developers and designers [Swallow et al. 2014]; however, we are unable to confirm this with the data we gathered. Future work should be conducted so we can gain a deeper understanding of how web developers work in context.</p>
        <p>The participants also indicated that an accessibility tool would be beneficial and for many of the participants, they would likely use the tool during the early stages of website development. Swallow et al. [2014] explains that web developers and designers typically leave accessibility until later in the development process, so it is interesting to see the web developers and designers show preference for a tool that can be used early in the design process. It could be that this would be the ideal option for web developers and designers, yet many of the available resources are not sufficient to meet this need. Unfortunately, we did not ask the web developers and designers to explain their choice.</p>
        <p>The features we will pursue are as follows: CVD simulation, entering and copying HEX codes, allowing selection from a range of colours using a familiar input, showing contrast of text and background colours, and providing a working preview. We will also investigate the idea of obscuring colours that do not have sufficient contrast with a selected colour.</p>
        <p>There are two important steps that should be followed before reaching a final product as described by Hartson and Smith [1991]. The first step encourages the exploration of one or more prototypes. The second involves a prototype undergoing some development implementation. We followed both of these, while maintaining web developers' and designers' input on development at crucial points. Hartson and Smith explain that getting to the final product from step two involves either taking the prototype and optimising the code already used or by beginning the proper development of what has been found to work for the intended user. The development outline for ACE was as follows:</p>
        <p>(1) We created three low-fidelity paper prototypes to assess different accessibility tool designs.</p>
        <p>(2) We developed two high-fidelity prototypes with some functionality to demonstrate novel features requested by the participants who responded to the questionnaire. (3) We ran a design workshop with web developers and designers where they explored current online tools. The web developers and designers were then given a design brief based on the questionnaire results and asked to develop a paper prototype of the system. Finally, we showed the web developers and designers the two highfidelity prototypes and received feedback on those. (4) We used the information gained in the design workshop to create a new system. (5) When we had a fully implemented version of ACE, we ran an in-lab comparative evaluation and a focus group evaluation. We realised that the first two designs would not easily account for the WCAG levels (AA or AAA) that the user was checking against. We also found that building a colour palette where all colours had enough contrast could be very limiting in regards to what is available after the first two colours have been chosen.</p>
        <p>As a result, we made another paper prototype (Figure 1(c)). Each square on the top row (1 in Figure 1(c)) is a button that, when clicked, allows the user to find the colour he or she wants. The button adopts that colour, so when all five are changed, there is a visual representation of the colour palette. The squares in the row below (2) correspond to the colours chosen but with CVD simulation applied. All colour pairs are compared against each other (3) and detailed information about the contrast of the two colours is shown on the right side of the screen (4). For five colours, there are 10 rows of unique colour pairs with an analysis of whether each pair passes or fails WCAG 2.0 checkpoints.</p>
        <p>Two high-fidelity prototypes based on the sketches were created in time for a design workshop to facilitate the discussion. The first was the feature request for a solution that obscures colours that will fail when paired with the selected colour. We developed it as a proof of concept to explore participants' opinions towards this unique idea, which is not common in online tools (Figure 2). The second had a greater number of features implemented, which were requested by the questionnaire respondents: It was possible to select a palette of colours, see a CVD simulation of the colours, and find out which colour pairs would pass or fail at different WCAG levels (Figure 3). Due to time restraints, we were unable to develop a prototype that showed how we would apply the colour palette to an example page.</p>
        <p>Two male and two female participants attended the design workshop (23-33 years old; mean = 29). The participants either had previous experience in web development and/or design or it was part of their current job. The participants' experience ranged from novice to expert (1-15 years of experience; mean = 8.25). At least one of the participants had previously filled out the questionnaire from the first study, but this could not be verified due to our ethics board's anonymisation policy.</p>
        <p>First, the participants explored three different colour palette creator websites: Paletton (paletton.com), COLOURlovers (colourlovers.com), and Contrast-A (dasplankton. de/ContrastA). The three websites were chosen for their varied approach towards the same ultimate goal. This would allow the participants to begin thinking about the many ways in which they could design their prototype concept.</p>
        <p>Second, the participants worked together to develop their concept for a colour palette creator. They followed a design brief (Appendix B) based on, but not limited to, some of the design requirements gathered from the questionnaire to provide structure and guidance. Figure 4 shows the sketch that the web developers and designers produced. The web developers and designers stressed the need to have freedom when choosing colours and to visualise where the colours would be used on an example webpage, otherwise the system would only be good for checking colours and not building colour schemes. Implementing a feature that did this would provide more incentive to web developers and designers to use ACE, as it would provide feedback that is easier to comprehend. It would also be particularly useful for web developers and designers who are only just beginning their careers, since they may find it hard to visualise where colours could go.</p>
        <p>Finally, the participants were shown the two high-fidelity prototypes. It was important that this step came after designing a solution because we did not want to influence their decisions. The participants' feedback suggested that the first prototype was not worth pursuing further. Although the fading out of inaccessible colours was a novel approach, which was requested in the questionnaire, it did not allow the user to build up a usable colour scheme. As one participant said, it would need to be used for making "sub-themes." However, this would be difficult to incorporate without over-complicating the system. The second prototype was received much more positively by the participants, but there were still issues regarding the layout of the information about each colour pair, which was presented in a way that made it difficult to read with ease. One participant suggested using a table layout to help keep all the information in a more concise and easy-to-access position on the page. Another participant supported this by expressing the opinion that immediate visualisation of what does and does not pass, when used together, would be good. This was discussed more as a group to establish how this could be achieved so the user would not have to scroll through a list of results. Although the participants praised the CVD simulation for being clearly visible, we would investigate a new approach since the overall layout was going to have a drastic redesign. We were unable to show the participants a working concept for applying a colour palette to an example page. However, the participants stressed the importance of this feature during the previous task and implemented it in their own design by allowing users to assign a chosen colour to an individual page element that is used in an example webpage. We adopted this idea within the next design iteration of ACE.</p>
        <p>After the design workshop, the feedback from the participants was used to iteratively refine ACE. The final design and example page using the colour scheme can be seen in Figure 5.</p>
        <p>Following the suggestion from the design workshop, the colour picking squares for choosing text or foreground colours were placed on the top row and the ones for background colours were put in a column at the left, as seen in Figure 5(a). All of the text colours were positioned so they could be compared against each type of background colour. This is useful because there might be times when the user wants to have different colours of text on top of one background colour. Although labels are used to indicate what section of the example webpage the square represents, they were only for this purpose and could either be ignored or switched to generic labels, such as "background colour 1" and "text colour 1." Rather than obscure information within the squares where colour pairs fail WCAG 2.0 contrast ratios, we chose to darken the square. This allowed the user to still see the contrast ratio to work out how far they are from the required minimum ratio. The CVD simulations were incorporated within the colour picking squares so they were clearly visible, and the user could easily see how much the colour varies between typical colour vision and the three types of inherited CVD we simulate. The information inside the grid's result squares was kept simple. The contrast ratio value was given priority within each square since it was expected that the users would become familiar with the three different ratios that they were checking against. A tick was used for successfully meeting level criteria and an "X" for violations.</p>
        <p>The example webpage (Figure 5(b)) is rendered using the colour palette that has been created. It includes text of varying size that restates part of the WCAG 2.0 contrast recommendations. The menu in the header was used to activate a CVD simulation for the whole page by hovering the cursor over each type of inherited CVD so the user can see the colour scheme simulated in its entirety rather than disconnected (as is the case with the colour picking squares). Furthermore, there were two pieces of text used to demonstrate how the user's chosen colours for a hyperlink and clicked hyperlink would appear on the page. It allows the user to see whether a difference between the two colours is perceivable for people with CVD, while the results grid would inform of any contrast violation between each colour and the background colour.</p>
        <p>The final version of ACE is hosted online (daprlab.com/ace) and was constructed using HTML, CSS, and JavaScript. We used Spectrum (bgrins.github.io/spectrum) for the colour picker. We calculate the contrast ratio for the two colours in JavaScript by implementing the luminance formula provided by the W3C website (W3C, 2012b) and the contrast ratio formula (W3C, 2012a). We used jStorage to update the colours used in a local CSS file for the visual example page.</p>
        <p>The visual example webpage loads in a new tab so it can be viewed at full size rather force it to fit within the available space on the page with ACE. Once the visual example webpage is loaded into a new tab, the user can make changes to the colour palette, and, because of jStorage, the user only needs to refresh the example webpage to update the colours.</p>
        <p>We recruited six male and four female participants who had experience creating colour schemes for websites. Five identified as web developers, two as web designers, and three as graphic designers. They were between the ages of 21 and 25 years old (mean = 23). All participants self-reported that they did not have CVD.</p>
        <p>Participants were presented with four different website design briefs, each describing a website under development for which the participant was required to create a colour palette with five colours in 10 minutes or less. For example, "Due to the waterfront development, Dundee City Council are looking for a new website design. You are asked to come up with a colour scheme that really reflects Dundee and its surrounding landmarks such as the silvery Tay and the on going strong recycling efforts." The participants were provided with a notepad and pen in case they wanted to record HEX codes when they were unable to explore all five colours in a palette at once. The participants had freedom to choose suitable colours based around the instructions. Each of the four colour palettes were created using a different tool and we were interested in the participants' overall experience of using each tool in a constrained design process. The constraints were to create a palette with five colours to use in the design and to ensure that two colour pairs within the palette meet WCAG 2.0 AA for small text and that the entire palette remains distinguishable for different types of CVD.</p>
        <p>The website design briefs were counterbalanced with the colour picking tools for each participant. The colour tools compared with ACE were Paletton, Contrast-A, and Color Contrast Checker, and these were chosen because they offered a variety of approaches to building a palette of colours. Contrast-A was the only tool we found in our evaluation of online tools that could do both CVD simulation and WCAG contrast checking, and it is possible to meet all the design constraints with it. We added an additional two tools: one for popularity (paletton) and one for its simplicity but clear accessibility focus (Color Contrast Checker). None of the participants had used these tools prior to the study, so there was no advantage due to prior experience.</p>
        <p>To measure the progress of the participants, we recorded our observations, and an online feedback form was used to gather participants' thoughts about each of the tools. After using each tool the participants completed a RTLX, which is a NASA-TLX form without the additional weighting task [Hart 2006].</p>
        <p>Table V shows how many of the participants were able to meet the constraint requirements for each tool. All 10 participants were able to satisfy the three constraints (create a palette with five colours, check for WCAG contrast violations, and check the colours under different CVD simulations) when using ACE. When using Paletton, 4 participants were unable to meet any constraints, with 3 giving up. Only 2 participants were able to meet all three constraints when using Contrast-A, with 7 fulfilling two of the constraints. Nine participants could only satisfy one constraint when using Color Contrast Checker. 6.2.1. Task Load Index. To compare ACE, Paletton, Contrast A, and Color Contrast Checker, we calculated an overall workload score by averaging the participant responses across all six TLX measures for each tool. The rating scales for each measurement of the RTLX are ordinal data so we performed a Friedman test to investigate whether there was a significant difference in workload among the four tools. The mean ratings for each measure on the RTLX plus the overall workload score for each tool are summarised in Figure 6.</p>
        <p>We found a significant main effect for tool (X 2 (3) = 18.65, p &lt; .001). To explore this main effect, we ran Wilcoxon signed-rank tests with Bonferroni corrections (α = 0.05/6 = 0.008) and report a calculated effect size. There was a significant decrease in overall workload for the following: ACE compared to Paletton (Z = -2.81, p = .002, r = -0.63), Contrast-A compared to Paletton (Z = -2.70, p = .004, r = -0.60), and Color Contrast Checker compared to Paletton (Z = -2.80, p = .002, r = -0.63).</p>
        <p>The results suggest that Paletton is not suitable to use when trying to balance aesthetics and accessibility. When we inspect the mean ratings summarised in Figure 6, Paletton is rated worse than the other three tools for all six TLX measures. There were no significant differences between the workload scores for ACE, Contrast-A, and Color Contrast Checker. However, when participants used ACE they were 100% successful in completing the constraint task, which reinforces the advantage it has over Contrast-A and Color Contrast Checker. ACE was the only tool to allow every participant to complete the task. Contrast-A includes all the features to complete the task but 8/10 participants could not. Color Contrast Checker was rated well on the RTLX, most likely due to its simple approach of including a minimum number of features; however, only 1/10 participants were able to meet two requirements. Across the six measures of the RTLX, we found ACE was recognised for providing the best performance and lowest frustration.</p>
        <p>6.2.2. Preferenceamong Techniques. In addition to the RTLX, we also asked each participant to rank each tool in order of preference. Table VI contains the mean ranks for each technique from best (1) to worst (4). We carried out a Friedman test on the ordinal data and found a main effect of technique (X 2 (3) = 20.52, p &lt; .001).</p>
        <p>We ran Wilcoxon signed-rank tests to explore this main effect with Bonferroni corrections (0.05/6 = 0.008) and found that ACE was ranked significantly better than all other techniques, while there were no significant differences for ranking among Paletton, Contrast-A, or Color Contrast Checker.</p>
        <p>ACE was the only tool that allowed all participants to complete the design task. The RTLX results show that ACE, Contrast-A, and Color Contrast Checker all significantly reduced workload compared to Paletton; however, there were no further differences. When inspecting the means for the six measures of workload, the participants indicate that ACE provides the best performance and lowest frustration. Our observational recordings indicate that participants enjoyed using ACE to the point that some made use of all the dedicated time so they could make fine adjustments to their colour selection. Four participants were unable to meet any constraints when using Paletton in the design task. We did not expect people to be able to meet all constraints in the task with Paletton; however, they could meet two. The findings suggest Paletton is unnecessarily complicated and this is supported in the poor RTLX ratings in addition to being listed as the least preferred tool.</p>
        <p>Contrast-A was ranked second, yet only two participants were able to meet all three constraints when using Contrast-A, with seven participants only meeting two of the constraints, and one participant only meeting one constraint. It is possible to meet all constraints with Contrast-A, but our results support our previous observations that Contrast-A does not make its features clear enough for people to use and it does not allow a colour to be compared against multiple colours, which adds to the time it takes to use. In contrast, ACE allows a single colour to be compared to three or four others simultaneously.</p>
        <p>Color Contrast Checker does not offer a complete solution. We were aware of this and included it because it does WCAG checking well. It was possible to meet two of the constraints; however, only one participant did and the other nine participants only met one constraint. The mean RTLX scores for Color Contrast Checker are very good but this only suggests that the tool is simple to use. It was not useful when participants needed to build a colour palette and check different combinations of those colours for WCAG standards. This is reflected in it being the second-to-last preferred tool.</p>
        <p>The final study involved a 45-minute focus group to gather qualitative feedback to evaluate whether ACE fulfilled the needs of web developers and designers. One female (28 years old) and one male (27 years old) had 5 and 4 years, respectively, of web development and design experience. A third participant (34-year-old male) also took part who described his experience as only a hobby without specifying for how many years. Two of the participants indicated they had taken part in a previous study relating to the development of ACE.</p>
        <p>A PowerPoint presentation containing images of the earlier versions of ACE was shown to the participants so they could see how the visual design and functionality decisions had evolved throughout the project. This was to ensure that all participants had the same level of knowledge about the background of ACE's development.</p>
        <p>Afterwards, ACE was loaded within a browser on a laptop and handed over to the participants so they could explore it without any guidance or explanation.</p>
        <p>After 5 minutes, the participants were taken through all the features of ACE to explain anything that the participants may have missed or not understood properly. The participants were given 5 minutes to write down what they liked and disliked about the system. When everybody finished, their evaluations were used to begin a 20-minute discussion.</p>
        <p>After the participants had time to interact with ACE and write down the comments (Figure 7), Participant 2 began the discussion by asking what is the "assumed knowledge [of a web developer or designer] before coming to the website...would you be accessing it as a standalone website...at the start of the project?" This was confirmed and further explanation was given to inform the participants that the intention was for web developers and designers to be given the opportunity to use ACE and freely explore colour schemes early in a project's development. The users would be able to see WCAG 2.0 results and CVD simulations by default. Participant 2 wanted differential support for novice and expert users and provided some suggestions for a more customisable future version of ACE.</p>
        <p>Participant 2 advised that one way of helping to reduce the information would be to obtain from the outset what WCAG 2.0 level the user is designing for (AA or AAA) and if they would like to see CVD simulations within the tool. This would tailor ACE to meet their needs and reduce cognitive load. Similarly, ACE could begin by comparing just two colours and the user can add to the palette to build up the grid if they need to compare more colours.</p>
        <p>The discussion moved onto the topic of CVD simulation, and participants were asked if they had a preference for observing the CVD simulation within the colour picker, within the example page, or whether they thought both were necessary. Participant 1 said, "from a design point of view you want to know it will look sensible as a set of colours.</p>
        <p>[Colours] should still be visually appealing for people with CVD." This participant thought that it was good to see the simulation within the coloured squares because you get an idea of a different person's perception for that colour. Participant 3 said that it might be interesting to try and colourise the example page in grayscale as well, and then, when cycling through the CVD simulation, it would be easier to see how the contrasts change. There were also positive aspects of ACE identified by the participants. For example, the participants liked that the colour picker displayed a large range of colours and used a familiar design, which justifies our decision to not focus on alternative methods of building colour palettes and instead focus on accessibility first. The participants were also positive about having the opportunity to copy and enter HEX codes into ACE. Finally, the participants found it useful to be able to choose a range of colours to compare at once and view the colour scheme in a visual example that included CVD simulations. However, there are also still a number of recommendations given to further improve ACE.</p>
        <p>One of the participants felt it was simple to use and explained that first-time users could quickly learn what to do. Yet each web developer and designer differs, and each project will have different design specifications or goals. Therefore, we plan to tailor the system so it is specific to an individual's needs. To do this, it was suggested that a user is asked a few questions from the start before they use ACE. However, it might be better that instead of presenting the user with questions as soon as they go to use ACE, there could be checkboxes at the side, which can be turned on and off, so if the user changes his or her mind, then he or she can easily correct what information to see. Redesigning ACE so only two colours are compared initially would help remove much of the information for the user. Instead, there can be the option of adding new colour picking squares to the grid so it will only be as complex as the user needs it to be. Moreover, further simplification can be achieved by incorporating the welcome page and CVD information into the page with ACE. This way, the user would only need to access one webpage.</p>
        <p>The decision to incorporate the CVD simulation with the colour picking squares was praised by the participants. By placing it within the squares, the user was able to see how the CVD simulation changed while they were choosing a colour. However, it was noted that some people might find it challenging to design a colour scheme once they are made aware of how the colours change according to the type of CVD. We disagree with this concern, because ACE displays the contrast ratio results, and these are what accessibility design decisions should be based on. As a compromise, it could be that the CVD simulation is included in the checkboxes as an on/off feature; thus, it would still be there to help the web developers and designers understand how an individual with CVD will view the website. If in-place simulation is made an optional feature, then it is important that the option stays clearly visible so users are aware it exists. The CVD simulations on the example webpage would not need to be an optional setting because it already allows users of ACE to have control of what they see via the menu tabs.</p>
        <p>Our evaluations contribute three main results:</p>
        <p>(1) Current online colour palette tools do not combine sufficient accessibility guidance with the freedom and ease of choosing and comparing multiple colours. (2) We show that consideration of CVD in web design is low, but that web developers and designers would use an accessibility tool that can be used early in a website's development.</p>
        <p>(3) In a comparative evaluation, our solution-ACE-was the only tool that allowed all participants to complete the design task. Workload significantly improved when using ACE compared to Paletton. ACE was the participants' most preferred tool and the mean scores for the six TLX measures show ACE as providing the best performance and lowest frustration compared to Paletton, Contrast-A, and Color Contrast Checker.</p>
        <p>The success of ACE can be attributed to the user-centred design approach that we used from the outset. Requirements were gathered from the survey, and these were further refined by input from web developers and designers who attended the design workshop. During the comparative evaluation, every participant completed the design task with ACE. Contrast-A provided the necessary features to complete the task, but the majority of participants (8/10) only partly satisfied all three design constraints. A second evaluation took place with a small focus group to provide feedback on ACE. The purpose of the focus group was to establish a future direction for ACE and the discussion during this study provided a list of recommended changes that should be implemented in the next iteration of ACE. There was also positive feedback about ACE and the criticism given was constructive.</p>
        <p>The current version of ACE is a combination of the two services Youngblood [2013] suggests are necessary for novice web developers and designers to develop an understanding of the importance of accessible design, although this will also benefit experienced web developers and designers who are unaware of or need assistance with creating accessible content. Rigden [1999] makes a valid point that if a person does not have an impairment, in this case CVD, then they may not consider designing to avoid potential problems that could occur because of the impairment. ACE addresses this by not only informing web developers and designers specifically of what colour combinations pass different WCAG 2.0 levels but also showing through simulation how people with CVD would perceive the colours, thereby reinforcing the difficulty certain colours can present. In addition to this, the fact that web developers and designers have few restrictions on choosing colours, while assessing a multicolour palette on one screen, as opposed to only two colours at a time, calls attention to the strong potential for ACE to compete against other available colour tools.</p>
        <p>Over the course of this research, we have experienced first hand the advantages that come from using a UCD approach to develop an accessibility-focused colour palette tool. We have identified four research contributions that are worth discussing further, particularly in relation to previous research and how future research for other types of accessibility tools would benefit from a UCD approach.</p>
        <p>First, we have shown it is possible to let web developers and designers freely create within the boundaries of accessibility-ACE strikes a balance between giving web developers and designers creative freedom for aesthetic design, while imposing constraints for accessible design. We believe that it is important to simplify the workflow with an accessibility-focused design tool that eliminates the need to go through a twostage process of first choosing colours and then checking those colours.</p>
        <p>However, accessibility tools are not perfect- Richards et al. [2012] suggest that even after the creation of accessibility guidelines and introduction of accessibility tools, these did little to greatly improve web accessibility. Richards et al. [2012] further discuss evidence to suggest that some of the identified increase in web accessibility over the years can in fact be accounted for by the utilisation of new web technologies (e.g., using CSS to style and layout the page rather than using decorative images and nested tables), while the aim of getting a webpage to appear further up on a search engine query result page and enabling websites to render appropriately on different devices (e.g., mobile vs desktop) are also identified factors. In this case, web developers and designers are not actively thinking about web accessibility but they are creating content that is more accessible regardless. Richards et al. [2012] argues that continuing this trend by enabling future web technologies to further accessibility as a consequence would improve accessibility adoption.</p>
        <p>While we agree with these arguments, we feel that there is still potential in exploring design tools that support accessibility. It may be that previous tools were not created with input from web developers and designers, and this could be the important distinction between a tool that is abandoned or used. It was certainly apparent from our assessment of current online colour picking tools that they did not fully meet the needs of web developers and designers and this may well be the case with other types of web design tools. Therefore we argue that accessibility-focused design tools have the potential to make a difference in accessible web design, so long as they are developed as part of a UCD process.</p>
        <p>Our second research contribution is a demonstration of the success that occurs when using an iterative UCD approach. Communicating with and involving web developers and designers through the development of ACE means that our accessibility-focused colour palette tool is more than the sum of its parts, and this is evident when we look back on its development. It is not only about asking what the web developers and designers want but actively involving them in the process. Talking with web developers and designers is valuable, and this would apply to any group for which accessibility software is being developed. Our initial contact through an online questionnaire was useful for gathering a set of feature requirements, and, paired with our findings from reviewing the literature and assessing online colour picking tools, we developed two high-fidelity prototypes. These prototypes were enough to initiate a useful discussion with the participants of our design workshop, but it was clear that we still had work to do to make something that would meet their needs. We revealed our prototypes only after the participants had created their own concept for an accessibility-focused colour palette tool. There were differences in how we as researchers and they as web developers and designers envisaged the layout and how information such as CVD simulation and colour contrast violations could be best presented. After more discussion with the participants of the design workshop, one of the participants came up with the concept of the grid design. The idea was well received and the group discussed the idea further, which resulted in a visual layout that was simpler than both our prototypes and their prototype; the grid design extended the functionality of ACE to allow for better visual searching for colour pairs that are (in-)accessible. We involved web developers and designers in an evaluation with the current version of ACE to get more feedback, and although there are suggested changes, these do not necessarily result in a complete redesign-we need to take what is there and simplify the layout, while allowing for customisation to be more flexible to the web developers and designers different client requests (e.g., only needing to comply with AA contrast ratios).</p>
        <p>Our third research contribution is showing that sometimes accessibility-focused design tools can help in unexpected ways. Within the responses to the questionnaire, one participant spoke of the issue that web developers and designers face when working with large companies who require specific colours that match their brand. The design of ACE offers two advantages in this situation. (1) Web developers and designers can quickly assess the prescribed colours for any potential accessibility problems because they are able to easily enter the HEX codes and see which colour pairs violate WCAG during the earliest part of the design process. Web developers and designers can then go back to their client and discuss the problems with the colours they were being asked to use. The web developers and designers can use ACE to make quick adjustments to the prescribed colours and present the new accessible colours-that are as close to the original colours as possible-to the client as a suitable alternative. (2) If the brand colours that the client has provided do not need to be used for specific elements, then the grid structure of ACE would allow web developers and designers to quickly reorganise the colours to identify the best way they can be used for colour accessibility.</p>
        <p>These points highlight the flexibility that an accessibility-focused design tool can have that makes work for web developers and designers easier; however, it would require some compromise from the client. A point raised by a participant in the questionnaire was that some companies impose restrictions on what colours the web developers and designers can use. They wrote: "The problem is that we build interfaces for large companies that have their own branding guidelines, so we often can't choose the colours for the interface." If the client is adamant about using a specific selection of colours and those colours can only be used in a particular way (e.g., red for the page background colour and green for paragraph headings), then inaccessibility due to colour choice will persist. Companies need to be informed of the repercussions of failing to provide accessible websites, and they need to allow web developers and designers more freedom with the colour combinations they can use. ACE allows these problems to be identified as early as possible so the client can make more informed decisions.</p>
        <p>Our final research contribution is identifying that there is still a need to educate people about accessibility. We found that one-third of web developers and designers who answered our questionnaire were not aware of WCAG. Lazar et al. [2004] found that 23% of webmasters were not familiar with accessibility guidelines, while others reported that they can be confusing, a sentiment that is shared by Hanson and Richards [2013]. One could argue that a revision is required for WCAG, particularly based on the findings of Swallow et al. [2014]. Web developers and designers want simplicity and a minimum amount of information to read when it comes to accessibility, and this was clear at the different stages of ACE's development. Furthermore, during the focus group, one participant spoke about accessibility being necessary but not inspirational, revealing part of the underlying problem. People do not think they can be creative when restrictions are imposed on them. ACE can help to extend creativity, while also keeping web developers and designers within the boundaries of the accessibility guidelines, making for a very strong case encouraging web developers and designers to use ACE.</p>
        <p>We believe that to tackle education and understanding of accessibility guidelines it would be better to have the guidelines incorporated within other design tools, and there must be simulations of impairments so web developers and designers can appreciate why they have to conform to WCAG. If accessibility features are built into design tools as a primary feature, rather than as a separate accessibility checking tool, then awareness should increase and, at the same time, accessibility will no longer be considered later in development.</p>
        <p>Furthermore, current awareness and understanding of accessibility is changing. There are some issues that are identified with WCAG 2.0. For example, Power et al. [2012] found that the move from WCAG 1.0 to 2.0 was not as effective as it was supposed to be. There was no significant reduction in user problems between websites with WCAG 2.0 Level A conformance and websites without any conformance to WCAG 2.0 Level A. Power et al. suggested that this could be because web developers and designers do not fully understand the guidelines, an opinion supported by Swallow et al. [2014], or that there are not enough tools to properly support accessible web design-an argument we make in this article in regards to choosing a website colour palette, while checking for accessible colour combinations. Another reason was that even when the guidelines were successfully implemented, there were still user problems and Power et al. suggests it is necessary to run website evaluations with people who have a disability to increase the chance of identifying accessibility problems not addressed by WCAG 2.0.</p>
        <p>A final recommendation from the literature is the need to increase the scope covered in accessibility teaching. Yesilada et al. [2015] advise that people learning about accessibility should be informed about the benefit accessible content has for everybody, not only for people with a disability, and there should be more consideration about the technologies used and the different contexts of use, which are creating accessibility problems for all users. Through this change in attitude, we expect more companies and web developers and designers to design for accessibility from the outset.</p>
        <p>While we include many of the features that the web developers and designers desired, the execution of those features and the general user interface of ACE could be redesigned for further improvement. The grid layout that was suggested in the design workshop proved successful but a future iteration of ACE would benefit from more personalisation to meet individuals' needs. We plan to implement checkbox options to indicate which WCAG level is being designed for, to allow users to increase or decrease the number of colours they want in the palette, to simplify the help, and to include a grayscale option in the example page for viewing the palette luminance.</p>
        <p>A second limitation of this research is that ACE was not extensively evaluated by web developers and designers within their own workflow. This is an important step that needs to be addressed for ACE to gain traction and have sustained use within the context it was built for. ACE can then be given to web developers and designers to use over an extended period of time so they become more familiar with the tool, thus allowing the web developers and designers to provide in-depth feedback. It might also be beneficial for us to conduct an ethnographic-or observational-type study to see how web developers and designers use ACE, as well as using that time to find out how accessible web design occurs in the work place-if at all-since our understanding from the questionnaire data is currently limited. It is important to carefully choose what types of usability evaluations to run and when they should be used during user-centered design projects [Greenberg and Buxton 2008]. A longitudinal in-situ evaluation would have unlikely been worthwhile at this early stage. Our decision to run a comparative evaluation and focus group to understand what worked well and what needs to change seems justified. During the focus group the participants were forthcoming with their criticisms to explain how ACE would need to change so they would be more willing to use it as part of their workflow. Therefore, we believe it is crucial that ACE is updated according to those recommendations before we carry out another evaluation.</p>
        <p>Furthermore, one concern raised by Webster [2014] is whether a colour accessible tool can meet the demands of the complexity of modern web design. For example, ACE will need to allow contrast checking when the user intends to use gradient or semitransparent backgrounds underneath text. Moreover, there are cases when text is put on top of images or backgrounds with patterns and these further increase the difficulty for contrast checking. This is something that needs to be investigated further.</p>
        <p>As suggested by Yesilada et al. [2015], situation and context of use are important things to consider when thinking about accessibility. The WCAG colour contrast recommendations have been made for people with CVD and low vision; however, there are times when our environment can cause situational impairment [Newell 1995;Sears et al. 2003]. Browsing on mobile devices more than doubled in the UK from 2010 to 2014 [Office for National Statistics 2014], which means people are looking at content on screens that are more likely to be viewed under a range of different ambient lighting conditions. ACE could be extended to indicate minimum levels of contrast for different lighting situations for people browsing on mobile devices by exploiting data gathered from a wide range of uses and situations [Reinecke et al. 2016]. By highlighting the fact that anybody can experience temporary impairment and that designing to meet accessible guidelines can alleviate this, perhaps more compliance will result. Some of our participants do not view accessibility as inspirational when designing. There is potential to integrate ACE with a website such as COLOURlovers.com. COLOURlovers does not currently offer any colour contrast checking, but it does have a social community who vote on popular colour palettes. ACE could be used to make a palette and then the website community can show whether they like or dislike the palette. Voters of accessible colour palettes could indicate whether they have typical colour vision or CVD. This way, when a web developer or designer looks for sample accessible colour palettes to use, it will be easy to see what is popular for both those with typical colour vision and those with CVD.</p>
        <p>ACE has potential as an educational tool in addition to being a design tool because it includes CVD simulation within the colour picking squares and on the example webpage. We can work with our university's art and design school to integrate ACE within the curriculum to raise awareness of CVD and emphasise the importance of accessible design. Furthermore, ACE has been used as part of our demo material for our outreach efforts within Scottish high schools. We can investigate how this could be taken further and how tools such as ACE can be incorporated as part of high school computing subjects to raise awareness of the importance of web accessibility.</p>
        <p>Finally, there is potential for ACE to be used in a wider context of design. We need to test how well the formulae work in colour spaces other than sRGB. Once this has been established, ACE could be beneficial for print, art, presentations, and other forms of digital visualisations. The design of brochures and posters could be based on a colour scheme developed with ACE so the use of colour is considered for optimum viewing by many different people.</p>
        <p>Websites are still published with poor colour choices for people with colour vision deficiency, in part, because current colour palette tools are inadequate at ensuring that a well-informed selection is made. It is important for websites to follow accessibility guidelines from the outset to abide by laws, reduce development costs, and increase the usability for a larger number of visitors. To address this issue, we developed ACE (daprlab.com/ace) with input from web developers and designers at different stages. In our comparative evaluation, ACE was the only tool used where all of our participants successfully completed the design challenge, and ACE was unanimously ranked as the participants' most preferred tool. We found ACE to significantly reduce workload compared to Paletton, and the mean scores for the six TLX measures show that ACE provides the best performance and causes the lowest frustration compared to Paletton, Contrast-A, and Color Contrast Checker. Suggestions from a small focus group have given us a direction in which we can take ACE to further improve its capabilities before conducting an in-situ evaluation with web developers and designers.</p>
        <p>Alex is a web designer and developer who has recently become familiar with the Web Content Accessibility Guidelines. Alex realises that there are guidelines for ensuring a minimum level of contrast between the font colour and the background colour. There are different levels for these (AA and AAA).</p>
        <p>For level AA, large text can have a minimum contrast ratio of 3:1 against the background, while small text must have a minimum contrast ratio of 4.5:1 against the background. For level AAA, the contrast ratio for large text becomes 4.5:1, while small text becomes 7:1.</p>
        <p>On further reading, Alex understands that these colour guidelines are not only necessary for people with low vision but also for those with a colour vision deficiency.</p>
        <p>Alex believes that an online tool that will assist web designers and developers would be most useful at the very beginning (i.e., during the planning stages) so a colour palette can be decided on before the design takes form.</p>
        <p>Alex asked other people for features that they would like to see the online tool provide, which would assist them in fully meeting the guideline. The list of possible feature requirements are as follows:</p>
        <p>-Show the colours as they would be seen by somebody with CVD -Show how much colour contrast is between two colours -Suggest to the user an alternative colour when one does not work well with another that has also been chosen -Let the user visualise the colours in use by way of a working preview -Let the user enter HEX values if they know what the colour needs to be -Let the user copy HEX values from the web tool to insert into the HTML/CSS -Fade out incompatible colours as the user makes a colour selection -Check how accessible already completed websites are and highlight problem areas, while suggestion solutions It is your task to design how the online website would look and function for assisting Web designers and developers in choosing colours that are accessible. You are free to draw inspiration from your own knowledge and experiences, anything you think worked well on the websites you evaluated in the previous task, and anything from the information on this document that you feel are important.</p>
        <p>There are a variety of sliders to change the colour. Only limited to two colours: One will be for text and one for the background colour.</p>
        <p>Technically, the ADA does not apply to websites, but there are plans by the U.S. Department of Justice to make amendments[2016].ACM Transactions on Accessible Computing, Vol. 9, No.</p>
        <p>2, Article 5, Publication date: January 2017.</p>
        <p>ACM Transactions on Accessible Computing, Vol. 9, No. 2, Article 5, Publication date: January 2017.</p>
        <p>It should be noted that these two warnings were measured using older WCAG 1.0 checkpoints, which sets the luminance contrast at a minimum of 5:1.ACM Transactions on Accessible Computing, Vol. 9, No. 2, Article 5, Publication date: January 2017.</p>
    </text>
</tei>
